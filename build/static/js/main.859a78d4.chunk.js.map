{"version":3,"sources":["constants/actionTypes.js","actions/lotteryActions.js","actions/appStatusAction.js","Components/AppCommon/loading/LoadingMessage.js","Components/AppCommon/flash/FlashMessage.js","Components/AppCommon/flash/FlashMessageList.js","Layout/AppMain/index.js","reducers/authReducer.js","data/default.js","rootReducer.js","reducers/appStatusReducer.js","reducers/lotteryReducer.js","reducers/myReducer.js","reducers/pageReducer.js","reducers/flashMessageReducer.js","reducers/loadingMessageReducer.js","index.js","config/configureStore.js","actions/authActions.js","services/request.js","utils/axios/setAuthorizationToken.js","actions/flashMessageAction.js","actions/loadingMessageAction.js","actions/requestAction.js","constants/messages.js","utils/helper/helperFunctions.js"],"names":["__webpack_require__","d","__webpack_exports__","ADD_FLASH_MESSAGE","DELETE_FLASH_MESSAGE","ADD_LOADING_MESSAGE","DELETE_LOADING_MESSAGE","SET_AUTH","SET_EVENTS","SET_APP_SETTINGS","SET_LOTTERY_WINNERS","SET_LOTTERY_SLOT","SET_LOTTERY_PLAYERS","ADD_LOTTERY_PLAYER","SET_LOTTERY_DATA","SET_MODAL","SET_SETTINGS","SET_CURRENCIES","SET_USER","SET_LOTTERY_PICKED_NUMBERS","SET_LAST_SLOT","SET_PLAYED_GAMES","SET_TRANSACTIONS","SET_WITHDRAW_REQUESTS","SET_PAGE","ADD_TO_ROOT_CSS_CLASS_LIST","REMOVE_FROM_ROOT_CSS_CLASS_LIST","UPDATE_BROWSE_HISTORY","setLotteryWinners","setLotterySlot","setLotteryPlayers","addLotterySlotPlayer","setLastSlot","setLotteryPickedNumbers","setLotteryData","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_0__","payload","type","lastSlot","pickedNumbers","setEvents","setAppSettings","setModal","setCurrencies","setSettings","addToRootCssClassList","removeFromRootCssClassList","updateBrowseHistory","events","settings","modal","currencies","cssClass","data","connect","state","isLoading","loadingMessageReducer","loadingMessage","props","_props$isLoading","react_default","a","createElement","className","react_loading_default","color","height","width","delay","FlashMessage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setTimeout","deleteFlashMessage","message","id","_this$props$message","text","classnames","alert-success","alert-danger","Component","FlashMessageList","messages","map","flash_FlashMessage","key","flashMessageReducer","Home","lazy","Promise","all","e","then","bind","My","Page","AppMain","_this2","_isMounted","setState","bootstrap","unlisten","history","listen","location","action","_this3","makeRequest","request","Settings","query","MESSAGES","LOGGING","res","errorData","Currencies","Lottery","slots","last","winners","getActive","participants","rootCssClassList","appStatus","react","join","fallback","react_loaders_default","react_router","exact","path","component","loading_LoadingMessage","withRouter","auth","authReducer","appStatusReducer","initialState","isAuthenticated","user","DEFAULT_APP_STATUS","browseHistory","locations","autoTasks","DEFAULT_LOTTERY_STATE","meta","links","slot","players","result","DEFAULT_MY_STATE","playedGames","transactions","profile","withdrawRequests","DEFAULT_PAGE_STATE","pages","combineReducers","arguments","length","undefined","scope","isVerified","verified","localStorage","setItem","JSON","stringify","isEmpty","objectSpread","concat","toConsumableArray","newClassList","index","indexOf","splice","shift","lotteryReducer","myReducer","pageReducer","shortid","generate","findIndex","slice","store","jwtToken","createStore","rootReducer","compose","applyMiddleware","thunk","window","devToolsExtension","f","rootElement","document","getElementById","getItem","decodedToken","jwt_decode","exp","Date","getTime","setAuthorizationToken","dispatch","setAuth","removeItem","err","userId","parse","setUser","ReactDOM","render","es","react_router_dom","io","require","Echo","broadcaster","host","getEnv","headers","Authorization","channel","participant","private","logout","_utils_axios_setAuthorizationToken__WEBPACK_IMPORTED_MODULE_0__","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_1__","_requestAction__WEBPACK_IMPORTED_MODULE_2__","_services_request__WEBPACK_IMPORTED_MODULE_3__","_flashMessageAction__WEBPACK_IMPORTED_MODULE_4__","_utils_helper_helperFunctions__WEBPACK_IMPORTED_MODULE_5__","_constants_messages__WEBPACK_IMPORTED_MODULE_6__","Auth","isSilent","addFlashMessage","getCodeMessage","LOGOUT_SUCCESS","axios__WEBPACK_IMPORTED_MODULE_0__","_utils_helper_helperFunctions__WEBPACK_IMPORTED_MODULE_1__","API_BASE_URL","requests","url","userData","axios","method","crossDomain","Content-Type","Accept","login","loginAsGuest","register","forgotPassword","resetPassword","Users","get","create","update","updateMultiple","deleteMultiple","Permissions","Me","updateProfile","play","getPlayedGames","getTransactions","getWithdrawRequests","createWithdrawRequest","cancelWithdrawRequest","Coinbase","createCharge","Pages","show","slug","ContactFormEntry","axios__WEBPACK_IMPORTED_MODULE_0___default","n","token","defaults","common","deleteLoadingMessage","apiCallFunction","options","addLoadingMessage","resolve","reject","response","responseData","successCode","handleSuccessResponseData","error","errorCode","ERR_TOKEN_EXPIRED","ERR_TOKEN_INVALID","ERR_TOKEN_USER_NOT_FOUND","handleErrorResponseData","LOADING_USER_CHECK","UPDATING","SAVING","REFRESHING","REGISTERING","VERIFYING","SENDING_EMAIL","LOGIN_SUCCESS","SAVED","UPDATED","VERIFIED","FORGOT_EMAIL_SENT","PASSWORD_UPDATED","USER_REGISTERED","VERIFICATION_EMAIL_SENT","ERR_VALIDATION_FAILED","ERR_ABN_INVALID","ERR_ABN_REQUIRED","ERR_BUSINESS_NAME_REQUIRED","ERR_EMAIL_ALREADY_EXIST","ERR_EMAIL_INVALID","ERR_EMAIL_REQUIRED","ERR_FIRST_NAME_REQUIRED","ERR_LAST_NAME_REQUIRED","ERR_PASSWORD_CONFIRM_NOT_MATCHING","ERR_PASSWORD_INVALID","ERR_PASSWORD_REQUIRED","ERR_PHONE_NUMBER_REQUIRED","ERR_PHONE_NUMBER_INVALID","ERR_URL_INVALID","ERR_URL_REQUIRED","ERR_INVALID_CREDENTIALS","ERR_TOKEN_NOT_PROVIDED","ERR_INVALID_REQUEST","ERR_DATABASE","ERR_MODEL_NOT_FOUND","ERR_METHOD_NOT_ALLOWED","ERR_NOT_FOUND","ERR_RESTRICTED","ERR_MULTIPLE_BUSINESS","ERR_UNKNOWN","ERR_LOGOUT","ERR_LOCKED","generateRandomLotteryNumber","getFirstEmptyPosition","isNumberPickedCorrectly","findSetting","inAppCoin","inCurrency","inCoin","getBySlug","_constants_messages__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_2__","process","lotteryNumber","randNumber","Math","floor","random","push","firstEmptyKey","_","item","bool","coins","amountInCurrency","parseFloat","withUnit","appCurrency","o","appCurrencyDetail","currency","value","value_in_app_coin","toFixed","amountInCoin","collection"],"mappings":"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","file":"static/js/main.859a78d4.chunk.js","sourcesContent":["export const ADD_FLASH_MESSAGE = \"ADD_FLASH_MESSAGE\";\r\nexport const DELETE_FLASH_MESSAGE = \"DELETE_FLASH_MESSAGE\";\r\nexport const ADD_LOADING_MESSAGE = \"ADD_LOADING_MESSAGE\";\r\nexport const DELETE_LOADING_MESSAGE = \"DELETE_LOADING_MESSAGE\";\r\n\r\nexport const SET_AUTH = \"SET_AUTH\";\r\nexport const SET_EVENTS = \"SET_EVENTS\";\r\nexport const SET_APP_SETTINGS = \"SET_APP_SETTINGS\";\r\nexport const SET_LOTTERY_WINNERS = \"SET_LOTTERY_WINNERS\";\r\nexport const SET_LOTTERY_SLOT = \"SET_LOTTERY_SLOT\";\r\nexport const SET_LOTTERY_PLAYERS = \"SET_LOTTERY_PLAYERS\";\r\nexport const ADD_LOTTERY_PLAYER = \"ADD_LOTTERY_PLAYER\";\r\nexport const SET_LOTTERY_DATA = \"SET_LOTTERY_DATA\";\r\nexport const SET_MODAL = \"SET_MODAL\";\r\nexport const SET_SETTINGS = \"SET_SETTINGS\";\r\nexport const SET_CURRENCIES = \"SET_CURRENCIES\";\r\nexport const SET_USER = \"SET_USER\";\r\nexport const SET_LOTTERY_PICKED_NUMBERS = \"SET_LOTTERY_PICKED_NUMBERS\";\r\nexport const SET_LAST_SLOT = \"SET_LAST_SLOT\";\r\nexport const SET_PLAYED_GAMES = \"SET_PLAYED_GAMES\";\r\nexport const SET_TRANSACTIONS = \"SET_TRANSACTIONS\";\r\nexport const SET_WITHDRAW_REQUESTS = \"SET_WITHDRAW_REQUESTS\";\r\nexport const SET_PAGE = \"SET_PAGE\";\r\nexport const ADD_TO_ROOT_CSS_CLASS_LIST = \"ADD_TO_ROOT_CSS_CLASS_LIST\";\r\nexport const REMOVE_FROM_ROOT_CSS_CLASS_LIST = \"REMOVE_FROM_ROOT_CSS_CLASS_LIST\";\r\nexport const UPDATE_BROWSE_HISTORY = \"UPDATE_BROWSE_HISTORY\";\r\n\r\n","import {\r\n    ADD_LOTTERY_PLAYER, SET_LAST_SLOT, SET_LOTTERY_DATA, SET_LOTTERY_PICKED_NUMBERS,\r\n    SET_LOTTERY_PLAYERS, SET_LOTTERY_RESULT,\r\n    SET_LOTTERY_SLOT,\r\n    SET_LOTTERY_WINNERS,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport function setLotteryWinners(payload) {\r\n    return {\r\n        type: SET_LOTTERY_WINNERS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setLotterySlot(payload) {\r\n    return {\r\n        type: SET_LOTTERY_SLOT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setLotteryPlayers(payload) {\r\n    return {\r\n        type: SET_LOTTERY_PLAYERS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function addLotterySlotPlayer(payload) {\r\n    return {\r\n        type: ADD_LOTTERY_PLAYER,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setLastSlot(lastSlot) {\r\n    return {\r\n        type: SET_LAST_SLOT,\r\n        lastSlot\r\n    }\r\n}\r\n\r\nexport function setLotteryPickedNumbers(pickedNumbers) {\r\n    return {\r\n        type: SET_LOTTERY_PICKED_NUMBERS,\r\n        pickedNumbers\r\n    }\r\n}\r\n\r\nexport function setLotteryData(payload) {\r\n    return {\r\n        type: SET_LOTTERY_DATA,\r\n        payload\r\n    }\r\n}","import {\r\n    ADD_TO_ROOT_CSS_CLASS_LIST,\r\n    REMOVE_FROM_ROOT_CSS_CLASS_LIST,\r\n    SET_APP_SETTINGS,\r\n    SET_CURRENCIES,\r\n    SET_EVENTS,\r\n    SET_MODAL,\r\n    SET_SETTINGS,\r\n    UPDATE_BROWSE_HISTORY,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport function setEvents(events) {\r\n    return {\r\n        type: SET_EVENTS,\r\n        events\r\n    }\r\n}\r\n\r\nexport function setAppSettings(settings) {\r\n    return {\r\n        type: SET_APP_SETTINGS,\r\n        settings\r\n    }\r\n}\r\n\r\nexport function setModal(modal) {\r\n    return {\r\n        type: SET_MODAL,\r\n        modal\r\n    }\r\n}\r\n\r\nexport function setCurrencies(currencies) {\r\n    return {\r\n        type: SET_CURRENCIES,\r\n        currencies\r\n    }\r\n}\r\n\r\nexport function setSettings(settings) {\r\n    return {\r\n        type: SET_SETTINGS,\r\n        settings\r\n    }\r\n}\r\n\r\nexport function addToRootCssClassList(cssClass) {\r\n\r\n    return {\r\n        type: ADD_TO_ROOT_CSS_CLASS_LIST,\r\n        payload: cssClass\r\n    }\r\n}\r\n\r\nexport function removeFromRootCssClassList(cssClass) {\r\n\r\n    return {\r\n        type: REMOVE_FROM_ROOT_CSS_CLASS_LIST,\r\n        payload: cssClass\r\n    }\r\n}\r\n\r\nexport function updateBrowseHistory(data) {\r\n\r\n    return {\r\n        type: UPDATE_BROWSE_HISTORY,\r\n        payload: data\r\n    }\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst LoadingMessage = (props) => {\r\n    const {isLoading = false, loadingMessage = null} = props;\r\n    const content = loadingMessage ? loadingMessage : 'Loading...';\r\n    return (\r\n        isLoading &&\r\n        <div className=\"loading-spinner-wrapper\">\r\n            <ReactLoading type='spin' color='lightgrey' height='40px' width='40px' delay={200}\r\n                          className=\"loading-spinner\"/>\r\n            {/*<div className=\"content\">{content}</div>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nLoadingMessage.propTypes = {\r\n    isLoading: PropTypes.bool,\r\n    loadingMessage: PropTypes.string,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isLoading: state.loadingMessageReducer.isLoading,\r\n        loadingMessage: state.loadingMessageReducer.loadingMessage,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(LoadingMessage);","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nclass FlashMessage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        setTimeout(() => {\r\n            this.props.deleteFlashMessage(this.props.message.id);\r\n        }, 4000);\r\n    }\r\n\r\n    render() {\r\n        const {type, text} = this.props.message;\r\n        return (\r\n            <div className={classnames(\"alert alert-sticky custom-alert\", {\r\n                \"alert-success\": type === \"success\",\r\n                \"alert-danger\": type === \"error\"\r\n            })}>\r\n                {text}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nFlashMessage.propTypes = {\r\n    message: PropTypes.object.isRequired,\r\n    deleteFlashMessage: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FlashMessage;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport FlashMessage from \"./FlashMessage\";\r\nimport {deleteFlashMessage} from \"../../../actions/flashMessageAction\";\r\n\r\nclass FlashMessageList extends Component {\r\n    render() {\r\n        const messages = this.props.messages.map(message =>\r\n            <FlashMessage key={message.id} message={message} deleteFlashMessage={this.props.deleteFlashMessage}/>\r\n        );\r\n\r\n        return (\r\n            <div className=\"flash-message\">{messages}</div>\r\n        )\r\n    }\r\n}\r\n\r\nFlashMessageList.propTypes = {\r\n    messages: PropTypes.array.isRequired,\r\n    deleteFlashMessage: PropTypes.func.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        messages: state.flashMessageReducer\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {deleteFlashMessage})(FlashMessageList);","import {Redirect, Route, withRouter} from 'react-router-dom';\r\nimport React, {Component, Fragment, lazy, Suspense} from 'react';\r\nimport Loader from 'react-loaders'\r\nimport {connect} from \"react-redux\";\r\nimport {makeRequest} from \"../../actions/requestAction\";\r\nimport request from \"../../services/request\";\r\nimport {MESSAGES} from \"../../constants/messages\";\r\nimport {setLastSlot, setLotteryPlayers, setLotterySlot, setLotteryWinners} from \"../../actions/lotteryActions\";\r\nimport {setCurrencies, setSettings, updateBrowseHistory} from \"../../actions/appStatusAction\";\r\nimport LoadingMessage from \"../../Components/AppCommon/loading/LoadingMessage\";\r\nimport FlashMessageList from \"../../Components/AppCommon/flash/FlashMessageList\";\r\n\r\n\r\nconst Home = lazy(() => import('../../Components/Home'));\r\nconst My = lazy(() => import('../../Components/My'));\r\nconst Page = lazy(() => import('../../Components/Page'));\r\n\r\nclass AppMain extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.setState({isLoading: true});\r\n        this._isMounted && this.bootstrap();\r\n\r\n        //Listen to browser history\r\n        this.unlisten = this.props.history.listen((location, action) => {\r\n            this.props.updateBrowseHistory({\r\n                location: location,\r\n            })\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unlisten();\r\n    }\r\n\r\n    bootstrap() {\r\n        // Get settings\r\n        this.props.makeRequest(request.Settings.all, {query: ''}, {message: MESSAGES.LOGGING}).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    this.props.setSettings(res.data);\r\n                }\r\n                this.setState({isLoading: false});\r\n            },\r\n            (errorData) => {\r\n                this.setState({isLoading: false});\r\n            }\r\n        );\r\n\r\n        // Get currencies\r\n        this.props.makeRequest(request.Currencies.all, {query: ''}, {message: MESSAGES.LOGGING}).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    this.props.setCurrencies(res.data);\r\n                }\r\n                this.setState({isLoading: false});\r\n            },\r\n            (errorData) => {\r\n                this.setState({isLoading: false});\r\n            }\r\n        );\r\n\r\n        // Get Last slot\r\n        this.props.makeRequest(request.Lottery.slots.last, {}, {message: MESSAGES.LOGGING}).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    this.props.setLastSlot(res.data);\r\n                }\r\n                this.setState({isLoading: false});\r\n            },\r\n            (errorData) => {\r\n                this.setState({isLoading: false});\r\n            }\r\n        );\r\n\r\n        // Get Winners\r\n        this.props.makeRequest(request.Lottery.slots.winners, {query: 'limit=12'}, {message: MESSAGES.LOGGING}).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    this.props.setLotteryWinners(res);\r\n                } else {\r\n                }\r\n            },\r\n            (errorData) => {\r\n                this.setState({isLoading: false});\r\n            }\r\n        );\r\n\r\n        // Get Active Slot\r\n        this.props.makeRequest(request.Lottery.slots.getActive, {}, {message: MESSAGES.LOGGING}).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    this.props.setLotterySlot(res.data);\r\n                    this.props.setLotteryPlayers(res.data.participants);\r\n                }\r\n            },\r\n            (errorData) => {\r\n                this.setState({isLoading: false});\r\n            }\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render () {\r\n        const {rootCssClassList} = this.props.appStatus;\r\n        return (\r\n            <Fragment>\r\n                <div className={rootCssClassList.join(' ')}>\r\n                <Suspense fallback={\r\n                    <div className=\"loader-container\">\r\n                        <div className=\"loader-container-inner\">\r\n                            <div className=\"text-center\">\r\n                                <Loader type=\"ball-grid-beat\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }>\r\n                    <Route exact path=\"/\" component={Home}/>\r\n                    <Route exact path=\"/my/:slug?/:slug?\" component={My}/>\r\n                    <Route exact path=\"/:slug\" component={Page}/>\r\n                </Suspense>\r\n                    <LoadingMessage/>\r\n                    {/*<FlashMessageList/>*/}\r\n            </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.authReducer,\r\n        appStatus: state.appStatusReducer\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, {\r\n    makeRequest, setLastSlot, setCurrencies, setSettings, setLotteryWinners, setLotterySlot, setLotteryPlayers,\r\n    updateBrowseHistory\r\n})(AppMain));","import {SET_AUTH, SET_USER} from \"../constants/actionTypes\";\r\nimport {isEmpty} from \"lodash\";\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case SET_AUTH:\r\n            const user = action.payload && action.payload.user ? action.payload.user : {};\r\n            const scope = action.payload && action.payload.scope ? action.payload.scope : {};\r\n            const isVerified = user.verified ? user.verified : 0;\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            return {\r\n                isAuthenticated: !isEmpty(user),\r\n                isVerified: !!isVerified,\r\n                user: user,\r\n                scope: scope\r\n            };\r\n        case SET_USER:\r\n            localStorage.setItem(\"user\", JSON.stringify(action.user));\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","export const DEFAULT_APP_STATUS = {\r\n    modal: null,\r\n    settings: [{}],\r\n    currencies: [{}],\r\n    rootCssClassList: [],\r\n    browseHistory: {\r\n        locations: [],\r\n        autoTasks: []\r\n    }\r\n};\r\n\r\nexport const DEFAULT_LOTTERY_STATE = {\r\n    winners: {\r\n        data: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\" ],\r\n        meta: {},\r\n        links: {}\r\n    },\r\n    slot: {\r\n    },\r\n    lastSlot: {\r\n        winners: []\r\n    },\r\n    players: {\r\n        data: []\r\n    },\r\n    result: []\r\n};\r\n\r\nexport const DEFAULT_MY_STATE = {\r\n    playedGames: {},\r\n    transactions: {},\r\n    profile: {},\r\n    withdrawRequests: {}\r\n};\r\n\r\nexport const DEFAULT_PAGE_STATE = {\r\n    pages: []\r\n};","import {combineReducers} from \"redux\";\r\nimport flashMessageReducer from \"./reducers/flashMessageReducer\";\r\nimport authReducer from \"./reducers/authReducer\";\r\nimport appStatusReducer from \"./reducers/appStatusReducer\";\r\nimport loadingMessageReducer from \"./reducers/loadingMessageReducer\";\r\nimport lotteryReducer from \"./reducers/lotteryReducer\";\r\nimport myReducer from \"./reducers/myReducer\";\r\nimport pageReducer from \"./reducers/pageReducer\";\r\n\r\nexport default combineReducers({\r\n    authReducer,\r\n    appStatusReducer,\r\n    lotteryReducer,\r\n    myReducer,\r\n    pageReducer,\r\n    flashMessageReducer,\r\n    loadingMessageReducer,\r\n});","import {DEFAULT_APP_STATUS} from \"../data/default\";\r\nimport {\r\n    ADD_TO_ROOT_CSS_CLASS_LIST, REMOVE_FROM_ROOT_CSS_CLASS_LIST, SET_CURRENCIES, SET_MODAL, SET_SETTINGS,\r\n    UPDATE_BROWSE_HISTORY,\r\n} from \"../constants/actionTypes\";\r\nimport * as _ from \"lodash\";\r\n\r\nexport default (state = DEFAULT_APP_STATUS, action = {}) => {\r\n    switch (action.type) {\r\n        case `${SET_MODAL}` :\r\n            return {\r\n                ...state,\r\n                modal: action.modal\r\n            };\r\n        case `${SET_CURRENCIES}` :\r\n            localStorage.setItem(\"currencies\", JSON.stringify(action.currencies));\r\n            return {\r\n                ...state,\r\n                currencies: action.currencies\r\n            };\r\n        case `${SET_SETTINGS}` :\r\n            localStorage.setItem(\"settings\", JSON.stringify(action.settings));\r\n            return {\r\n                ...state,\r\n                settings: action.settings\r\n            };\r\n        case `${ADD_TO_ROOT_CSS_CLASS_LIST}` :\r\n            return {\r\n                ...state,\r\n                rootCssClassList: [\r\n                    ...state.rootCssClassList,\r\n                    action.payload\r\n                ]\r\n            };\r\n        case `${REMOVE_FROM_ROOT_CSS_CLASS_LIST}` :\r\n            let newClassList = [...state.rootCssClassList];\r\n            let index = newClassList.indexOf(action.payload);\r\n\r\n            if (index > -1) {\r\n                newClassList.splice(index, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                rootCssClassList: newClassList\r\n            };\r\n        case `${UPDATE_BROWSE_HISTORY}` :\r\n            // update locations\r\n            let locations = [...state.browseHistory.locations];\r\n\r\n            if (locations.length > 15) {\r\n                locations.shift();\r\n            }\r\n\r\n            if (action.payload && action.payload.location) {\r\n                locations = locations.concat([action.payload.location]);\r\n            }\r\n\r\n            // update autoTasks\r\n            let autoTasks = [...state.browseHistory.autoTasks];\r\n            if (action.payload && action.payload.autoTasks) {\r\n                autoTasks = action.payload.autoTasks;\r\n            }\r\n\r\n            // update state\r\n            return {\r\n                ...state,\r\n                browseHistory: {\r\n                    locations: locations,\r\n                    autoTasks: autoTasks\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {DEFAULT_LOTTERY_STATE} from \"../data/default\";\r\nimport {\r\n    ADD_LOTTERY_PLAYER, SET_LOTTERY_PLAYERS, SET_LOTTERY_SLOT, SET_LOTTERY_WINNERS,\r\n    SET_LOTTERY_DATA, SET_LAST_SLOT, SET_LOTTERY_PICKED_NUMBERS\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default (state = DEFAULT_LOTTERY_STATE, action = {}) => {\r\n    switch (action.type) {\r\n        case `${SET_LOTTERY_WINNERS}` :\r\n            return {\r\n                ...state,\r\n                winners: action.payload\r\n            };\r\n        case `${SET_LOTTERY_SLOT}` :\r\n            return {\r\n                ...state,\r\n                slot: action.payload\r\n            };\r\n        case `${SET_LOTTERY_PLAYERS}` :\r\n            return {\r\n                ...state,\r\n                players: action.payload\r\n            };\r\n        case `${ADD_LOTTERY_PLAYER}` :\r\n            return {\r\n                ...state,\r\n                players: {\r\n                    ...state.players,\r\n                    data: [\r\n                        action.payload,\r\n                        ...state.players.data\r\n                    ]\r\n                }\r\n            };\r\n        case `${SET_LOTTERY_DATA}` :\r\n            let data = {};\r\n\r\n            if (action.payload.lastSlot) {\r\n                data.lastSlot = action.payload.lastSlot;\r\n            }\r\n\r\n            if (action.payload.winners) {\r\n                data.winners = {\r\n                    ...state.winners,\r\n                    data: action.payload.winners\r\n                };\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ...data\r\n            };\r\n        case `${SET_LAST_SLOT}` :\r\n            return {\r\n                ...state,\r\n                lastSlot: action.lastSlot\r\n            };\r\n        case `${SET_LOTTERY_PICKED_NUMBERS}` :\r\n            return {\r\n                ...state,\r\n                pickedNumbers: action.pickedNumbers\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {DEFAULT_MY_STATE} from \"../data/default\";\r\nimport {SET_PLAYED_GAMES, SET_TRANSACTIONS, SET_WITHDRAW_REQUESTS} from \"../constants/actionTypes\";\r\n\r\nexport default (state = DEFAULT_MY_STATE, action = {}) => {\r\n    switch (action.type) {\r\n        case `${SET_PLAYED_GAMES}` :\r\n            return {\r\n                ...state,\r\n                playedGames: action.payload\r\n            };\r\n        case `${SET_TRANSACTIONS}` :\r\n            return {\r\n                ...state,\r\n                transactions: action.payload\r\n            };\r\n        case `${SET_WITHDRAW_REQUESTS}` :\r\n            return {\r\n                ...state,\r\n                withdrawRequests: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {DEFAULT_PAGE_STATE} from \"../data/default\";\r\nimport {SET_PAGE} from \"../constants/actionTypes\";\r\n\r\nexport default (state = DEFAULT_PAGE_STATE, action = {}) => {\r\n    switch (action.type) {\r\n        case `${SET_PAGE}` :\r\n            return {\r\n                ...state,\r\n                pages: [\r\n                    ...state.pages,\r\n                    action.payload.data\r\n                ]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {ADD_FLASH_MESSAGE, DELETE_FLASH_MESSAGE} from \"../constants/actionTypes\";\r\nimport shortid from \"shortid\";\r\nimport {findIndex} from \"lodash\";\r\n\r\nexport default (state = [], action = {}) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_FLASH_MESSAGE:\r\n            return [\r\n                // commenting this will show only one flash message at a time\r\n                // ...state,\r\n                {\r\n                    id: shortid.generate(),\r\n                    type: action.message.type,\r\n                    text: action.message.text\r\n                }\r\n            ];\r\n\r\n        case DELETE_FLASH_MESSAGE:\r\n            const index = findIndex(state, {id: action.id});\r\n            if (index >= 0) {\r\n                return [\r\n                    ...state.slice(0, index),\r\n                    ...state.slice(index + 1)\r\n                ];\r\n            }\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {ADD_LOADING_MESSAGE, DELETE_LOADING_MESSAGE} from \"../constants/actionTypes\";\r\n\r\nexport default (state = [], action = {}) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_LOADING_MESSAGE:\r\n            return {\r\n                isLoading: true,\r\n                loadingMessage: action.loadingMessage\r\n            };\r\n\r\n        case DELETE_LOADING_MESSAGE:\r\n            return {\r\n                isLoading: false,\r\n                loadingMessage: null\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { HashRouter } from 'react-router-dom';\r\nimport './assets/css/bootstrap.css';\r\nimport './assets/css/style.css';\r\nimport AppMain from './Layout/AppMain';\r\nimport configureStore from './config/configureStore';\r\nimport { Provider } from 'react-redux';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthorizationToken from \"./utils/axios/setAuthorizationToken\";\r\nimport {setAuth, setUser} from \"./actions/authActions\";\r\nimport Echo from 'laravel-echo';\r\nimport {\r\n    setLotterySlot, addLotterySlotPlayer, setLotteryPlayers,\r\n    setLotteryData\r\n} from \"./actions/lotteryActions\";\r\nimport {setCurrencies, setSettings} from \"./actions/appStatusAction\";\r\nimport {getEnv} from \"./utils/helper/helperFunctions\";\r\n\r\nlet jwtToken = '';\r\nexport const store = configureStore();\r\nconst rootElement = document.getElementById('root');\r\n\r\n// check if jwtToken exist in local storage and is valid\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n    try {\r\n        const decodedToken = jwt_decode(localStorage.getItem(\"jwtToken\"));\r\n        if (decodedToken.exp > (new Date().getTime() / 1000)) {\r\n            jwtToken = localStorage.getItem(\"jwtToken\");\r\n            setAuthorizationToken(jwtToken);\r\n            store.dispatch(setAuth(decodedToken));\r\n        } else {\r\n            localStorage.removeItem(\"jwtToken\");\r\n            setAuthorizationToken(false);\r\n            store.dispatch(setAuth({}));\r\n        }\r\n    } catch (err) {\r\n        localStorage.removeItem(\"jwtToken\");\r\n        setAuthorizationToken(false);\r\n        store.dispatch(setAuth({}));\r\n    }\r\n}\r\n\r\n// set user\r\nlet userId = null;\r\nif (localStorage.getItem(\"user\")) {\r\n    try {\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        userId = user.id;\r\n        store.dispatch(setUser(user));\r\n    } catch (err) {\r\n    }\r\n}\r\n\r\n// set currencies\r\nif (localStorage.getItem(\"currencies\")) {\r\n    try {\r\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\r\n        store.dispatch(setCurrencies(currencies));\r\n    } catch (err) {\r\n    }\r\n}\r\n\r\n// set settings\r\nif (localStorage.getItem(\"settings\")) {\r\n    try {\r\n        const settings = JSON.parse(localStorage.getItem(\"settings\"));\r\n        store.dispatch(setSettings(settings));\r\n    } catch (err) {\r\n    }\r\n}\r\n\r\n\r\n\r\nconst renderApp = Component => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <Component />\r\n            </HashRouter>\r\n        </Provider>,\r\n        rootElement\r\n    );\r\n};\r\n\r\nrenderApp(AppMain);\r\n\r\nwindow.io = require('socket.io-client');\r\nwindow.Echo = new Echo({\r\n    broadcaster: 'socket.io',\r\n    host: getEnv('APP_SOCKET_URL'),\r\n    // host: window.location.hostname + ':6001',\r\n    auth: {\r\n        headers: {\r\n            'Authorization' : 'Bearer ' + jwtToken\r\n        }\r\n    }\r\n});\r\n\r\nwindow.Echo.channel('lottery')\r\n    .listen('LotterySlotCreatedEvent', (e) => {\r\n        store.dispatch(setLotterySlot(e.data));\r\n        store.dispatch(setLotteryPlayers({data: []}));\r\n    }).listen('LotterySlotClosedEvent', (e) => {\r\n        store.dispatch(setLotteryData(e));\r\n    }).listen('ParticipantAddedEvent', (e) => {\r\n        let slot = e.data;\r\n        let participant = e.participant;\r\n        store.dispatch(setLotterySlot(slot));\r\n        store.dispatch(addLotterySlotPlayer(participant));\r\n    });\r\n\r\nwindow.Echo.private('App.User.' + userId)\r\n    .listen('UserUpdateEvent', (e) => {\r\n        if (e.data && e.data.id) {\r\n            store.dispatch(setUser(e.data));\r\n        }\r\n    });","import {applyMiddleware, compose, createStore} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../rootReducer\";\r\n\r\nexport default function configureStore() {\r\n  return createStore(\r\n    rootReducer,\r\n      compose(\r\n          applyMiddleware(thunk),\r\n          window.devToolsExtension ? window.devToolsExtension() : f => f\r\n      ),\r\n  );\r\n}","import setAuthorizationToken from \"../utils/axios/setAuthorizationToken\";\r\nimport {SET_AUTH, SET_USER} from \"../constants/actionTypes\";\r\nimport {makeRequest} from \"./requestAction\";\r\nimport request from \"../services/request\";\r\nimport {addFlashMessage} from \"./flashMessageAction\";\r\nimport {getCodeMessage} from \"../utils/helper/helperFunctions\";\r\nimport {MESSAGES} from \"../constants/messages\";\r\n\r\nexport function setAuth(payload) {\r\n    return {\r\n        type: SET_AUTH,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setUser(user) {\r\n    return {\r\n        type: SET_USER,\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport function logout() {\r\n    return dispatch => {\r\n        dispatch(makeRequest(request.Auth.logout, {}, { isSilent: true }));\r\n\r\n        localStorage.removeItem(\"jwtToken\");\r\n        setAuthorizationToken(false);\r\n        dispatch(setAuth({}));\r\n        dispatch(addFlashMessage({type: \"success\", text: getCodeMessage(MESSAGES.LOGOUT_SUCCESS)}));\r\n    }\r\n}","import * as axios from \"axios\";\r\nimport {getEnv} from \"../utils/helper/helperFunctions\";\r\n\r\nconst API_BASE_URL = getEnv('API_BASE_URL');\r\n/**\r\n * This handles all the api request. If REACT_APP_ENV = mock-api, then the data\r\n * is faked and returned as async promise object using mock data.\r\n *\r\n * To know what type of data is expected by the application, look at the mock data.\r\n *\r\n * @param type\r\n * @param url\r\n * @param userData\r\n */\r\nconst requests = (type, url, userData = {}) => {\r\n    if (getEnv('ENV') === 'mock-api') {\r\n        // return mockApi(type, url, userData = {});\r\n    } else {\r\n        return axios({\r\n            method: type,\r\n            url: url,\r\n            data: userData,\r\n            crossDomain: true,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * Handles all Auth related requests\r\n */\r\nconst Auth = {\r\n    login: (data) =>\r\n        requests('POST', API_BASE_URL + \"/login\", data),\r\n    loginAsGuest: (data) =>\r\n        requests('POST', API_BASE_URL + \"/register-as-guest\", data),\r\n    logout: () =>\r\n        requests('PUT', API_BASE_URL + \"/logout\"),\r\n    register: (data) =>\r\n        requests('POST', API_BASE_URL + \"/register\", data),\r\n    forgotPassword: (data) =>\r\n        requests('POST', API_BASE_URL + \"/forgot-password\", data),\r\n    resetPassword: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/reset-password\", data),\r\n};\r\n\r\n/**\r\n * Handles all Business related requests\r\n */\r\nconst Users = {\r\n    all: (query) =>\r\n        requests('GET', API_BASE_URL + \"/users?\" + query),\r\n    get: (id) =>\r\n        requests('GET',API_BASE_URL + `/users/${id}`),\r\n    create: (data) =>\r\n        requests('POST', API_BASE_URL + \"/users\", data),\r\n    update: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/users/\" + data.id, data),\r\n    updateMultiple: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/users\", data),\r\n    deleteMultiple: (data) =>\r\n        requests('DELETE', API_BASE_URL + \"/users\", data),\r\n};\r\n\r\n/**\r\n * Handles all Permissions related requests\r\n */\r\nconst Permissions = {\r\n    all: (query) =>\r\n        requests('GET', API_BASE_URL + \"/permissions?\" + query),\r\n    get: (id) =>\r\n        requests('GET',API_BASE_URL + `/permissions/${id}`),\r\n    create: (data) =>\r\n        requests('POST', API_BASE_URL + \"/permissions\", data),\r\n    update: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/permissions/\" + data.id, data),\r\n    deleteMultiple: (data) =>\r\n        requests('DELETE', API_BASE_URL + \"/permissions\", data),\r\n};\r\n\r\n/**\r\n * Handles all Business related requests\r\n */\r\nconst Roles = {\r\n    all: (query) =>\r\n        requests('GET', API_BASE_URL + \"/roles?\" + query),\r\n    get: (id) =>\r\n        requests('GET',API_BASE_URL + `/roles/${id}`),\r\n    create: (data) =>\r\n        requests('POST', API_BASE_URL + \"/roles\", data),\r\n    update: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/roles/\" + data.id, data),\r\n    deleteMultiple: (data) =>\r\n        requests('DELETE', API_BASE_URL + \"/roles\", data),\r\n};\r\n\r\n/**\r\n * Handles all Settings related requests\r\n */\r\nconst Settings = {\r\n    all: (data) =>\r\n        requests('GET', API_BASE_URL + \"/settings?\" + data.query),\r\n};\r\n\r\n/**\r\n * Handles all Currencies related requests\r\n */\r\nconst Currencies = {\r\n    all: (data) =>\r\n        requests('GET', API_BASE_URL + \"/currencies?\" + data.query),\r\n};\r\n\r\n/**\r\n * Handles all Currencies related requests\r\n */\r\nconst Me = {\r\n    get: (data) =>\r\n        requests('GET', API_BASE_URL + \"/me\"),\r\n    updateProfile: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/me/profile/update\", data),\r\n    play: (data) =>\r\n        requests('POST', API_BASE_URL + \"/me/play\", data),\r\n    getPlayedGames: (data) =>\r\n        requests('GET', API_BASE_URL + \"/me/played-games\"),\r\n    getTransactions: (data) =>\r\n        requests('GET', API_BASE_URL + \"/me/transactions\"),\r\n    getWithdrawRequests: (data) =>\r\n        requests('GET', API_BASE_URL + \"/me/withdraw-requests\"),\r\n    createWithdrawRequest: (data) =>\r\n        requests('POST', API_BASE_URL + \"/me/create-withdraw-request\", data),\r\n    cancelWithdrawRequest: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/me/cancel-withdraw-request/\" + data.id),\r\n};\r\n\r\n/**\r\n * Handles all Coinbase related requests\r\n */\r\nconst Coinbase = {\r\n    createCharge: (data) =>\r\n        requests('POST', API_BASE_URL + \"/coinbase/create-charge\", data),\r\n};\r\n\r\n/**\r\n * Handles all Lottery related requests\r\n */\r\nconst Lottery = {\r\n    slots: {\r\n        all: (query) =>\r\n            requests('GET', API_BASE_URL + \"/lottery/slots?\" + query),\r\n        get: (data) =>\r\n            requests('GET',API_BASE_URL + `/lottery/slots/${data.id}?` + data.query),\r\n        create: (data) =>\r\n            requests('POST', API_BASE_URL + \"/lottery/slots\", data),\r\n        update: (data) =>\r\n            requests('PUT', API_BASE_URL + \"/lottery/slots/\" + data.id, data),\r\n        winners: (data) =>\r\n            requests('GET',API_BASE_URL + `/lottery/slots/winners?` + data.query),\r\n        getActive: (data) =>\r\n            requests('GET', API_BASE_URL + `/lottery/slots/3?with=participants&is_active=true`),\r\n        last: (data) =>\r\n            requests('GET',API_BASE_URL + `/lottery/slots/last`),\r\n    }\r\n};\r\n\r\n/**\r\n * Handles all pages related requests\r\n */\r\nconst Pages = {\r\n    get: (data) =>\r\n        requests('GET', API_BASE_URL + \"/pages\"),\r\n    show: (data) =>\r\n        requests('GET', API_BASE_URL + '/pages/' + data.slug)\r\n};\r\n\r\n/**\r\n * Handles all Contact form related requests\r\n */\r\nconst ContactFormEntry = {\r\n    create: (data) =>\r\n        requests('POST', API_BASE_URL + \"/contact\", data),\r\n};\r\n\r\nexport default {\r\n    Auth,\r\n    Users,\r\n    Permissions,\r\n    Me,\r\n    Coinbase,\r\n    Settings,\r\n    Currencies,\r\n    Lottery,\r\n    Pages,\r\n    ContactFormEntry\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport default function setAuthorizationToken(token) {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n}","import {ADD_FLASH_MESSAGE, DELETE_FLASH_MESSAGE} from \"../constants/actionTypes\";\r\n\r\nexport function addFlashMessage(message) {\r\n    return {\r\n        type: ADD_FLASH_MESSAGE,\r\n        message\r\n    }\r\n}\r\n\r\nexport function deleteFlashMessage(id) {\r\n    return {\r\n        type: DELETE_FLASH_MESSAGE,\r\n        id\r\n    }\r\n}","import {ADD_LOADING_MESSAGE, DELETE_LOADING_MESSAGE} from \"../constants/actionTypes\";\r\n\r\nexport function addLoadingMessage(loadingMessage = null) {\r\n    return {\r\n        type: ADD_LOADING_MESSAGE,\r\n        loadingMessage\r\n    }\r\n}\r\n\r\nexport function deleteLoadingMessage() {\r\n    return {\r\n        type: DELETE_LOADING_MESSAGE\r\n    }\r\n}","import setAuthorizationToken from \"../utils/axios/setAuthorizationToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n    setEvents, setAppSettings\r\n} from \"./appStatusAction\";\r\nimport {addFlashMessage} from \"./flashMessageAction\";\r\nimport {logout, setAuth} from \"./authActions\";\r\nimport {getCodeMessage} from \"../utils/helper/helperFunctions\";\r\nimport {MESSAGES} from \"../constants/messages\";\r\nimport {addLoadingMessage, deleteLoadingMessage} from \"./loadingMessageAction\";\r\n\r\n\r\nexport function makeRequest(apiCallFunction, data = {}, options={isSilent: false, message: 'Loading...'}) {\r\n    return dispatch => {\r\n        if (! options.isSilent) dispatch(addLoadingMessage(options.message));\r\n        return new Promise((resolve, reject) => {\r\n\r\n            apiCallFunction(data).then(\r\n                (response) => {\r\n                    if (! options.isSilent) dispatch(deleteLoadingMessage());\r\n                    if (response && response.data) {\r\n                        handleSuccessResponseData(dispatch, response.data, options.isSilent);\r\n                        resolve(response.data);\r\n                    }\r\n                    if (response) {\r\n                        resolve(response.data);\r\n                    }\r\n                },\r\n                (error) => {\r\n                    if (! options.isSilent) dispatch(deleteLoadingMessage());\r\n                    if (error && error.response && error.response.data) {\r\n                        handleErrorResponseData(dispatch, error.response.data, options.isSilent);\r\n                        reject(error.response.data)\r\n                    }\r\n                }\r\n            );\r\n\r\n        });\r\n    }\r\n}\r\n\r\nexport function handleSuccessResponseData(dispatch, responseData, isSilent) {\r\n    const token = responseData.token;\r\n    if (token) {\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        setAuthorizationToken(token);\r\n        dispatch(setAuth(jwt_decode(token)));\r\n    }\r\n\r\n    if (responseData.events) dispatch(setEvents(responseData.events));\r\n\r\n    if (responseData.settings) dispatch(setAppSettings(responseData.settings));\r\n\r\n    if (responseData.successCode && responseData.successCode !== 'FETCHED' && responseData.successCode !== 'TRACKED' && !isSilent) {\r\n        dispatch(addFlashMessage({type: \"success\", text: getCodeMessage(responseData.successCode)}))\r\n    }\r\n}\r\n\r\nexport function handleErrorResponseData(dispatch, errorData, isSilent) {\r\n    if (errorData.errorCode) {\r\n        if (\r\n            getCodeMessage(errorData.errorCode) === MESSAGES.ERR_TOKEN_EXPIRED ||\r\n            getCodeMessage(errorData.errorCode) === MESSAGES.ERR_TOKEN_INVALID ||\r\n            getCodeMessage(errorData.errorCode) === MESSAGES.ERR_TOKEN_USER_NOT_FOUND\r\n        ) {\r\n            dispatch(logout());\r\n        }\r\n\r\n        if (!isSilent) {\r\n            dispatch(addFlashMessage({type: \"error\", text: getCodeMessage(errorData.errorCode)}));\r\n        }\r\n    }\r\n}\r\n","//Form Validation Error Codes\r\nexport const MESSAGES = {\r\n    // Loading Message\r\n    LOADING_USER_CHECK: \"Checking if user already exist...\",\r\n    UPDATING: \"Updating...\",\r\n    SAVING: \"Saving...\",\r\n    REFRESHING: \"Refreshing...\",\r\n    REGISTERING: \"Creating your account...\",\r\n    LOGGING: \"Logging...\",\r\n    VERIFYING: \"Verifying...\",\r\n    SENDING_EMAIL: \"Sending email...\",\r\n\r\n    // Success Message\r\n    LOGIN_SUCCESS: \"Logged in successfully\",\r\n    LOGOUT_SUCCESS: \"Logged out successfully\",\r\n    SAVED: \"Saved\",\r\n    UPDATED: \"Updated\",\r\n    VERIFIED: \"User verified successfully\",\r\n    FORGOT_EMAIL_SENT: \"Forgot password email sent\",\r\n    PASSWORD_UPDATED: \"Password updated successfully\",\r\n    USER_REGISTERED: \"Registered successfully\",\r\n    VERIFICATION_EMAIL_SENT: \"Verification email sent\",\r\n\r\n    // Error Messages\r\n    ERR_VALIDATION_FAILED: \"Validation Failed\",\r\n    ERR_ABN_INVALID: \"ABN is invalid\",\r\n    ERR_ABN_REQUIRED: \"ABN is required\",\r\n    ERR_BUSINESS_NAME_REQUIRED: \"Business name is required\",\r\n    ERR_EMAIL_ALREADY_EXIST: \"User with given email is already registered\",\r\n    ERR_EMAIL_INVALID: \"Invalid Email\",\r\n    ERR_EMAIL_REQUIRED: \"Email is required\",\r\n    ERR_FIRST_NAME_REQUIRED: \"First Name is required\",\r\n    ERR_LAST_NAME_REQUIRED: \"Last Name is required\",\r\n    ERR_PASSWORD_CONFIRM_NOT_MATCHING: \"Password and Confirm Password must match\",\r\n    ERR_PASSWORD_INVALID: \"Password is invalid\",\r\n    ERR_PASSWORD_REQUIRED: \"Password is required\",\r\n    ERR_PHONE_NUMBER_REQUIRED: \"Phone Number is required\",\r\n    ERR_PHONE_NUMBER_INVALID: \"Phone Number is invalid\",\r\n    ERR_URL_INVALID: \"Url is invalid\",\r\n    ERR_URL_REQUIRED: \"Url is required\",\r\n\r\n    //Login Error Codes\r\n    ERR_INVALID_CREDENTIALS: \"Invalid Credentials\",\r\n    ERR_TOKEN_EXPIRED: \"User has been logged out due to inactivity\",\r\n    ERR_TOKEN_INVALID: \"Token invalid\",\r\n    ERR_TOKEN_NOT_PROVIDED: \"Token not provided\",\r\n    ERR_TOKEN_USER_NOT_FOUND: \"User not found\",\r\n\r\n    //Page Error Codes\r\n    ERR_INVALID_REQUEST: \"Invalid Request\",\r\n    ERR_DATABASE: \"Database error\",\r\n    ERR_MODEL_NOT_FOUND: \"Couldn't find the user\",\r\n    ERR_METHOD_NOT_ALLOWED: \"Request method not allowed\",\r\n    ERR_NOT_FOUND: \"Couldn't find the page\",\r\n    ERR_RESTRICTED: \"You don't have enough permission to view this page\",\r\n    ERR_MULTIPLE_BUSINESS: \"You can't have multiple business\",\r\n\r\n    //Unknown Error Codes\r\n    ERR_UNKNOWN: \"Something went wrong\",\r\n    ERR_LOGOUT: \"Failed to logout\",\r\n    ERR_LOCKED: \"Locked\",\r\n};","import {MESSAGES} from \"../../constants/messages\";\r\nimport Cookies from 'universal-cookie';\r\nimport * as _ from \"lodash\";\r\n\r\n/*\r\n==========================================================================\r\nApp Helper Functions\r\n==========================================================================\r\n */\r\n/**\r\n * This is a wrapper function to get the env variable without using the\r\n * prefix REACT_APP_\r\n *\r\n * @param key\r\n * @return {string}\r\n */\r\nexport function getEnv(key) {\r\n    return process.env['REACT_APP_' + key];\r\n}\r\n\r\n/**\r\n * Transform 'slug_string' or 'camelCaseString' or 'any type of string' to 'Capitalized Words'\r\n *\r\n * @param string\r\n * @returns {string}\r\n */\r\nexport function toCapitalizedWords(string) {\r\n    const newString = string.replace(/([A-Z])/g, ' $1')\r\n        .replace(/([_])/g, ' ');\r\n\r\n    return firstOfEachWordToUppercase(newString);\r\n}\r\n\r\n/**\r\n * Capitalize first letter of each words in a string\r\n *\r\n * @param str\r\n * @returns {string}\r\n */\r\nexport function firstOfEachWordToUppercase(str) {\r\n    let array = str.split(' ');\r\n    let newArray = [];\r\n\r\n    for (let x = 0; x < array.length; x++) {\r\n        newArray.push(array[x].charAt(0).toUpperCase() + array[x].slice(1));\r\n    }\r\n\r\n    return newArray.join(' ');\r\n}\r\n\r\n/**\r\n * Format Date to user friendly string\r\n *\r\n * @param dateString\r\n * @returns {string}\r\n */\r\nexport function formatDate(dateString) {\r\n    let options = {day: 'numeric', month: 'long', year: 'numeric'};\r\n    let date = new Date(dateString.replace(' ', 'T'));\r\n\r\n    // return dateString;\r\n    return date.toLocaleString(\"en-US\", options);\r\n}\r\n\r\n/*\r\n==========================================================================\r\nData Handling Helper Functions\r\n==========================================================================\r\n */\r\n/**\r\n * Use error code to get error message\r\n *\r\n * @param errorCode\r\n * @return {string}\r\n */\r\nexport function getCodeMessage(errorCode) {\r\n    return MESSAGES[errorCode] ? MESSAGES[errorCode] : MESSAGES.ERR_UNKNOWN;\r\n}\r\n\r\n/*\r\n==========================================================================\r\nExtra Helper Functions\r\n==========================================================================\r\n */\r\n\r\nexport function getCookie(name, options = {}) {\r\n    const cookies = new Cookies();\r\n    return cookies.get(name, options);\r\n}\r\n\r\nexport function setCookie(name, value, options = {}) {\r\n    const cookies = new Cookies();\r\n    cookies.set(name, value, options);\r\n}\r\n\r\nexport function generateRandomLotteryNumber() {\r\n    let lotteryNumber = [];\r\n\r\n    while (lotteryNumber.length < 6) {\r\n        let randNumber = Math.floor(Math.random() * 100) + 1;\r\n\r\n        if (randNumber !== 100 && lotteryNumber.indexOf(randNumber) === -1) {\r\n            lotteryNumber.push(randNumber);\r\n        }\r\n    }\r\n\r\n    return lotteryNumber;\r\n}\r\n\r\nexport function getLotteryNumbersOnly(pickedNumbers) {\r\n    let arr = [];\r\n\r\n    _.forEach(pickedNumbers, function (item, key) {\r\n        if (typeof item === \"number\") {\r\n            arr.push(item);\r\n        }\r\n    });\r\n\r\n    return arr;\r\n}\r\n\r\nexport function inPickedNumbers(pickedNumbers, number) {\r\n    let numberKey = \"\";\r\n\r\n    _.forEach(pickedNumbers, function (item, key) {\r\n        if (item === number) {\r\n            return key;\r\n        }\r\n    });\r\n\r\n    return numberKey;\r\n}\r\n\r\nexport function getFirstEmptyPosition(pickedNumbers) {\r\n    let firstEmptyKey;\r\n\r\n    _.forEach(pickedNumbers, function (item, key) {\r\n        if (typeof item === 'undefined') {\r\n            if (typeof firstEmptyKey === 'undefined') {\r\n                firstEmptyKey = key;\r\n            }\r\n        }\r\n    });\r\n\r\n    return firstEmptyKey;\r\n}\r\n\r\nexport function isNumberPickedCorrectly(pickedNumbers) {\r\n    let bool = true;\r\n    _.forEach(pickedNumbers, function (item, key) {\r\n        if (bool) {\r\n            if (typeof item !== 'number') {\r\n                bool = false;\r\n            }\r\n        }\r\n    });\r\n\r\n    return bool;\r\n}\r\n\r\nexport function findSetting(settings, key) {\r\n    return _.find(settings, {key: key});\r\n}\r\n\r\nexport function checkIfWinner(lastWinners, id) {\r\n    return _.find(lastWinners, {id: id});\r\n}\r\n\r\nexport function isItemLoaded(item) {\r\n    if (typeof item === 'undefined' || item === null) {\r\n        return false;\r\n    }\r\n\r\n    return !!(Object.keys(item).length > 0);\r\n}\r\n\r\nexport function inAppCoin(coins, withUnit = true) {\r\n    let amountInCurrency = parseFloat(coins) + \" coins\";\r\n\r\n    // If coin not set or undefined or empty. Skip for 0\r\n    if (! coins && coins !== 0) {\r\n        return \"\";\r\n    }\r\n\r\n    return amountInCurrency;\r\n\r\n}\r\n\r\nexport function inCurrency(coins, withUnit = true) {\r\n    let amountInCurrency = 0;\r\n\r\n    // If coin not set or undefined or empty. Skip for 0\r\n    if (! coins && coins !== 0) {\r\n        return \"\";\r\n    }\r\n\r\n    try {\r\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\r\n        const settings = JSON.parse(localStorage.getItem(\"settings\"));\r\n        const appCurrency = _.find(settings, function(o) { return o.key === \"app_currency\"; });\r\n        const appCurrencyDetail = _.find(currencies, {currency: appCurrency.value});\r\n\r\n        amountInCurrency =  parseFloat((coins / appCurrencyDetail.value_in_app_coin).toFixed(9));\r\n        if (withUnit) {\r\n            amountInCurrency += \" \" + appCurrency.value;\r\n        }\r\n    } catch (err) {\r\n        // console.log('currency conversion error', err);\r\n    }\r\n\r\n\r\n    return amountInCurrency;\r\n\r\n}\r\n\r\nexport function inCoin(currency, withUnit = true) {\r\n    let amountInCoin = 0;\r\n\r\n    // If currency not set or undefined or empty. Skip for 0\r\n    if (! currency && currency !== 0) {\r\n        return \"\";\r\n    }\r\n\r\n\r\n    if (! currency) {\r\n        return \"\";\r\n    }\r\n\r\n    try {\r\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\r\n        const settings = JSON.parse(localStorage.getItem(\"settings\"));\r\n        const appCurrency = _.find(settings, function(o) { return o.key === \"app_currency\"; });\r\n        const appCurrencyDetail = _.find(currencies, {currency: appCurrency.value});\r\n\r\n        amountInCoin = (currency * appCurrencyDetail.value_in_app_coin);\r\n\r\n        if (withUnit) {\r\n            amountInCoin += \" coins\";\r\n        }\r\n    } catch (err) {\r\n        // console.log('currency conversion error', err);\r\n    }\r\n\r\n\r\n    return amountInCoin;\r\n\r\n}\r\n\r\n// stripslashes\r\nexport function stripslashes(str) {\r\n    return str.replace(/\\\\'/g,'\\'').replace(/\\\"/g,'\"').replace(/\\\\\\\\/g,'\\\\').replace(/\\\\0/g,'\\0');\r\n}\r\n\r\n// get by slug\r\nexport function getBySlug(collection, slug) {\r\n    let item = _.find(collection, {slug: slug});\r\n    return item ? item : {};\r\n}\r\n\r\nexport function toggleItemInArray(itemsArray, item) {\r\n    let arr = itemsArray && itemsArray.length > 0 ? itemsArray : [];\r\n\r\n    let index = arr.indexOf(item);\r\n    if (index > -1) {\r\n        arr.splice(index, 1);\r\n    } else {\r\n        arr.push(item);\r\n    }\r\n\r\n    return arr;\r\n}\r\n"],"sourceRoot":""}