{"version":3,"sources":["constants/actionTypes.js","actions/lotteryActions.js","actions/appStatusAction.js","Components/AppCommon/loading/LoadingMessage.js","Layout/AppMain/index.js","reducers/authReducer.js","data/default.js","rootReducer.js","reducers/appStatusReducer.js","reducers/lotteryReducer.js","reducers/myReducer.js","reducers/pageReducer.js","reducers/flashMessageReducer.js","reducers/loadingMessageReducer.js","index.js","config/configureStore.js","services/request.js","utils/axios/setAuthorizationToken.js","actions/authActions.js","actions/flashMessageAction.js","actions/loadingMessageAction.js","actions/requestAction.js","constants/messages.js","actions/pageActions.js","utils/helper/helperFunctions.js"],"names":["__webpack_require__","d","__webpack_exports__","ADD_FLASH_MESSAGE","DELETE_FLASH_MESSAGE","ADD_LOADING_MESSAGE","DELETE_LOADING_MESSAGE","SET_AUTH","SET_EVENTS","SET_APP_SETTINGS","SET_LOTTERY_WINNERS","SET_LOTTERY_SLOT","SET_LOTTERY_PLAYERS","ADD_LOTTERY_PLAYER","SET_LOTTERY_DATA","SET_MODAL","SET_SETTINGS","SET_CURRENCIES","SET_USER","SET_LOTTERY_PICKED_NUMBERS","SET_LAST_SLOT","SET_PLAYED_GAMES","SET_TRANSACTIONS","SET_WITHDRAW_REQUESTS","SET_PAGE","ADD_TO_ROOT_CSS_CLASS_LIST","REMOVE_FROM_ROOT_CSS_CLASS_LIST","UPDATE_BROWSE_HISTORY","setLotteryWinners","setLotterySlot","setLotteryPlayers","addLotterySlotPlayer","setLastSlot","setLotteryPickedNumbers","setLotteryData","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_0__","payload","type","lastSlot","pickedNumbers","setEvents","setAppSettings","setModal","setCurrencies","setSettings","addToRootCssClassList","removeFromRootCssClassList","updateBrowseHistory","events","settings","modal","currencies","cssClass","data","connect","state","isLoading","loadingMessageReducer","loadingMessage","props","_props$isLoading","react_default","a","createElement","className","react_loading_default","color","height","width","delay","Home","lazy","Promise","all","e","then","bind","My","Page","AppMain","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this2","_isMounted","setState","bootstrap","unlisten","history","listen","location","action","_this3","makeRequest","request","Settings","query","message","MESSAGES","LOGGING","res","errorData","Currencies","Lottery","slots","last","winners","getActive","participants","Pages","show","slug","setPage","rootCssClassList","appStatus","react","join","fallback","react_loaders_default","react_router","exact","path","component","loading_LoadingMessage","Component","withRouter","auth","authReducer","appStatusReducer","initialState","isAuthenticated","user","DEFAULT_APP_STATUS","browseHistory","locations","autoTasks","DEFAULT_LOTTERY_STATE","meta","links","slot","players","result","DEFAULT_MY_STATE","playedGames","transactions","profile","withdrawRequests","DEFAULT_PAGE_STATE","pages","combineReducers","arguments","length","undefined","scope","isVerified","verified","localStorage","setItem","JSON","stringify","isEmpty","objectSpread","concat","toConsumableArray","newClassList","index","indexOf","splice","shift","lotteryReducer","myReducer","pageReducer","flashMessageReducer","id","shortid","generate","text","findIndex","slice","jwtToken","store","createStore","rootReducer","compose","applyMiddleware","thunk","window","devToolsExtension","f","rootElement","document","getElementById","getItem","decodedToken","jwt_decode","exp","Date","getTime","setAuthorizationToken","dispatch","setAuth","removeItem","err","userId","parse","setUser","ReactDOM","render","es","react_router_dom","io","require","Echo","broadcaster","host","getEnv","headers","Authorization","channel","participant","private","console","log","token","src_this","axios__WEBPACK_IMPORTED_MODULE_0__","_utils_helper_helperFunctions__WEBPACK_IMPORTED_MODULE_1__","API_BASE_URL","requests","url","userData","axios","method","crossDomain","Content-Type","Accept","Auth","login","loginAsGuest","logout","register","forgotPassword","resetPassword","verifyEmail","verificationCode","resendVerificationCode","Users","get","create","update","updateMultiple","deleteMultiple","Permissions","Me","updateProfile","play","getPlayedGames","getTransactions","getWithdrawRequests","createWithdrawRequest","cancelWithdrawRequest","Coinbase","createCharge","Seo","ContactFormEntry","axios__WEBPACK_IMPORTED_MODULE_0___default","n","defaults","common","_utils_axios_setAuthorizationToken__WEBPACK_IMPORTED_MODULE_0__","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_1__","_requestAction__WEBPACK_IMPORTED_MODULE_2__","_services_request__WEBPACK_IMPORTED_MODULE_3__","_flashMessageAction__WEBPACK_IMPORTED_MODULE_4__","_utils_helper_helperFunctions__WEBPACK_IMPORTED_MODULE_5__","_constants_messages__WEBPACK_IMPORTED_MODULE_6__","isSilent","addFlashMessage","getCodeMessage","LOGOUT_SUCCESS","deleteLoadingMessage","apiCallFunction","options","addLoadingMessage","resolve","reject","response","responseData","successCode","handleSuccessResponseData","error","errorCode","ERR_TOKEN_EXPIRED","ERR_TOKEN_INVALID","ERR_TOKEN_USER_NOT_FOUND","handleErrorResponseData","LOADING_USER_CHECK","UPDATING","SAVING","REFRESHING","REGISTERING","VERIFYING","SENDING_EMAIL","LOGIN_SUCCESS","SAVED","UPDATED","VERIFIED","FORGOT_EMAIL_SENT","PASSWORD_UPDATED","USER_REGISTERED","VERIFICATION_EMAIL_SENT","ERR_VALIDATION_FAILED","ERR_ABN_INVALID","ERR_ABN_REQUIRED","ERR_BUSINESS_NAME_REQUIRED","ERR_EMAIL_ALREADY_EXIST","ERR_EMAIL_INVALID","ERR_EMAIL_REQUIRED","ERR_FIRST_NAME_REQUIRED","ERR_LAST_NAME_REQUIRED","ERR_PASSWORD_CONFIRM_NOT_MATCHING","ERR_PASSWORD_INVALID","ERR_PASSWORD_REQUIRED","ERR_PHONE_NUMBER_REQUIRED","ERR_PHONE_NUMBER_INVALID","ERR_URL_INVALID","ERR_URL_REQUIRED","ERR_INVALID_CREDENTIALS","ERR_TOKEN_NOT_PROVIDED","ERR_INVALID_REQUEST","ERR_DATABASE","ERR_MODEL_NOT_FOUND","ERR_METHOD_NOT_ALLOWED","ERR_NOT_FOUND","ERR_RESTRICTED","ERR_MULTIPLE_BUSINESS","ERR_UNKNOWN","ERR_LOGOUT","ERR_LOCKED","generateRandomLotteryNumber","getFirstEmptyPosition","isNumberPickedCorrectly","findSetting","bitsToBtc","btcToBits","bitsToCoin","coinToBtc","getBySlug","getPlayerDisplayName","getWinningTypeIcon","getWinningTypeClass","getTitleFromSlug","_constants_messages__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_2__","key","process","lotteryNumber","randNumber","Math","floor","random","max","push","firstEmptyKey","_","item","bool","amount","withUnit","amountInCoin","coinData","currency","parseFloat","value_in_bits","toFixed","amountInBits","coinToBits","collection","player","nickname","username","full_name","winner","icon","lottery_winner_type_id","pivot","str","splitStr","toLowerCase","split","i","charAt","toUpperCase","substring","titleCase","replace"],"mappings":"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","file":"static/js/main.04cefba1.chunk.js","sourcesContent":["export const ADD_FLASH_MESSAGE = \"ADD_FLASH_MESSAGE\";\r\nexport const DELETE_FLASH_MESSAGE = \"DELETE_FLASH_MESSAGE\";\r\nexport const ADD_LOADING_MESSAGE = \"ADD_LOADING_MESSAGE\";\r\nexport const DELETE_LOADING_MESSAGE = \"DELETE_LOADING_MESSAGE\";\r\n\r\nexport const SET_AUTH = \"SET_AUTH\";\r\nexport const SET_EVENTS = \"SET_EVENTS\";\r\nexport const SET_APP_SETTINGS = \"SET_APP_SETTINGS\";\r\nexport const SET_LOTTERY_WINNERS = \"SET_LOTTERY_WINNERS\";\r\nexport const SET_LOTTERY_SLOT = \"SET_LOTTERY_SLOT\";\r\nexport const SET_LOTTERY_PLAYERS = \"SET_LOTTERY_PLAYERS\";\r\nexport const ADD_LOTTERY_PLAYER = \"ADD_LOTTERY_PLAYER\";\r\nexport const SET_LOTTERY_DATA = \"SET_LOTTERY_DATA\";\r\nexport const SET_MODAL = \"SET_MODAL\";\r\nexport const SET_SETTINGS = \"SET_SETTINGS\";\r\nexport const SET_CURRENCIES = \"SET_CURRENCIES\";\r\nexport const SET_USER = \"SET_USER\";\r\nexport const SET_LOTTERY_PICKED_NUMBERS = \"SET_LOTTERY_PICKED_NUMBERS\";\r\nexport const SET_LAST_SLOT = \"SET_LAST_SLOT\";\r\nexport const SET_PLAYED_GAMES = \"SET_PLAYED_GAMES\";\r\nexport const SET_TRANSACTIONS = \"SET_TRANSACTIONS\";\r\nexport const SET_WITHDRAW_REQUESTS = \"SET_WITHDRAW_REQUESTS\";\r\nexport const SET_PAGE = \"SET_PAGE\";\r\nexport const ADD_TO_ROOT_CSS_CLASS_LIST = \"ADD_TO_ROOT_CSS_CLASS_LIST\";\r\nexport const REMOVE_FROM_ROOT_CSS_CLASS_LIST = \"REMOVE_FROM_ROOT_CSS_CLASS_LIST\";\r\nexport const UPDATE_BROWSE_HISTORY = \"UPDATE_BROWSE_HISTORY\";\r\n\r\n","import {\r\n    ADD_LOTTERY_PLAYER, SET_LAST_SLOT, SET_LOTTERY_DATA, SET_LOTTERY_PICKED_NUMBERS,\r\n    SET_LOTTERY_PLAYERS, SET_LOTTERY_RESULT,\r\n    SET_LOTTERY_SLOT,\r\n    SET_LOTTERY_WINNERS,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport function setLotteryWinners(payload) {\r\n    return {\r\n        type: SET_LOTTERY_WINNERS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setLotterySlot(payload) {\r\n    return {\r\n        type: SET_LOTTERY_SLOT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setLotteryPlayers(payload) {\r\n    return {\r\n        type: SET_LOTTERY_PLAYERS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function addLotterySlotPlayer(payload) {\r\n    return {\r\n        type: ADD_LOTTERY_PLAYER,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setLastSlot(lastSlot) {\r\n    return {\r\n        type: SET_LAST_SLOT,\r\n        lastSlot\r\n    }\r\n}\r\n\r\nexport function setLotteryPickedNumbers(pickedNumbers) {\r\n    return {\r\n        type: SET_LOTTERY_PICKED_NUMBERS,\r\n        pickedNumbers\r\n    }\r\n}\r\n\r\nexport function setLotteryData(payload) {\r\n    return {\r\n        type: SET_LOTTERY_DATA,\r\n        payload\r\n    }\r\n}","import {\r\n    ADD_TO_ROOT_CSS_CLASS_LIST,\r\n    REMOVE_FROM_ROOT_CSS_CLASS_LIST,\r\n    SET_APP_SETTINGS,\r\n    SET_CURRENCIES,\r\n    SET_EVENTS,\r\n    SET_MODAL,\r\n    SET_SETTINGS,\r\n    UPDATE_BROWSE_HISTORY,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport function setEvents(events) {\r\n    return {\r\n        type: SET_EVENTS,\r\n        events\r\n    }\r\n}\r\n\r\nexport function setAppSettings(settings) {\r\n    return {\r\n        type: SET_APP_SETTINGS,\r\n        settings\r\n    }\r\n}\r\n\r\nexport function setModal(modal) {\r\n    return {\r\n        type: SET_MODAL,\r\n        modal\r\n    }\r\n}\r\n\r\nexport function setCurrencies(currencies) {\r\n    return {\r\n        type: SET_CURRENCIES,\r\n        currencies\r\n    }\r\n}\r\n\r\nexport function setSettings(settings) {\r\n    return {\r\n        type: SET_SETTINGS,\r\n        settings\r\n    }\r\n}\r\n\r\nexport function addToRootCssClassList(cssClass) {\r\n\r\n    return {\r\n        type: ADD_TO_ROOT_CSS_CLASS_LIST,\r\n        payload: cssClass\r\n    }\r\n}\r\n\r\nexport function removeFromRootCssClassList(cssClass) {\r\n\r\n    return {\r\n        type: REMOVE_FROM_ROOT_CSS_CLASS_LIST,\r\n        payload: cssClass\r\n    }\r\n}\r\n\r\nexport function updateBrowseHistory(data) {\r\n\r\n    return {\r\n        type: UPDATE_BROWSE_HISTORY,\r\n        payload: data\r\n    }\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst LoadingMessage = (props) => {\r\n    const {isLoading = false, loadingMessage = null} = props;\r\n    const content = loadingMessage ? loadingMessage : 'Loading...';\r\n    return (\r\n        isLoading &&\r\n        <div className=\"loading-spinner-wrapper\">\r\n            <ReactLoading type='spin' color=\"rgb(77, 97, 171, 0.7)\" height='40px' width='40px' delay={200}\r\n                          className=\"loading-spinner\"/>\r\n            {/*<div className=\"content\">{content}</div>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nLoadingMessage.propTypes = {\r\n    isLoading: PropTypes.bool,\r\n    loadingMessage: PropTypes.string,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isLoading: state.loadingMessageReducer.isLoading,\r\n        loadingMessage: state.loadingMessageReducer.loadingMessage,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(LoadingMessage);","import {Redirect, Route, withRouter} from 'react-router-dom';\r\nimport React, {Component, Fragment, lazy, Suspense} from 'react';\r\nimport Loader from 'react-loaders'\r\nimport {connect} from \"react-redux\";\r\nimport {makeRequest} from \"../../actions/requestAction\";\r\nimport request from \"../../services/request\";\r\nimport {MESSAGES} from \"../../constants/messages\";\r\nimport {setLastSlot, setLotteryPlayers, setLotterySlot, setLotteryWinners} from \"../../actions/lotteryActions\";\r\nimport {setCurrencies, setSettings, updateBrowseHistory} from \"../../actions/appStatusAction\";\r\nimport LoadingMessage from \"../../Components/AppCommon/loading/LoadingMessage\";\r\nimport {setPage} from \"../../actions/pageActions\";\r\n\r\n\r\nconst Home = lazy(() => import('../../Components/Home'));\r\nconst My = lazy(() => import('../../Components/My'));\r\nconst Page = lazy(() => import('../../Components/Page'));\r\n\r\nclass AppMain extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.setState({isLoading: true});\r\n        this._isMounted && this.bootstrap();\r\n\r\n        //Listen to browser history\r\n        this.unlisten = this.props.history.listen((location, action) => {\r\n            this.props.updateBrowseHistory({\r\n                location: location,\r\n            })\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unlisten();\r\n    }\r\n\r\n    bootstrap() {\r\n        // Get settings\r\n        this.props.makeRequest(request.Settings.all, {query: ''}, {message: MESSAGES.LOGGING}).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    this.props.setSettings(res.data);\r\n                }\r\n                this.setState({isLoading: false});\r\n            },\r\n            (errorData) => {\r\n                this.setState({isLoading: false});\r\n            }\r\n        );\r\n\r\n        // Get currencies\r\n        this.props.makeRequest(request.Currencies.all, {query: ''}, {message: MESSAGES.LOGGING}).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    this.props.setCurrencies(res.data);\r\n                }\r\n                this.setState({isLoading: false});\r\n            },\r\n            (errorData) => {\r\n                this.setState({isLoading: false});\r\n            }\r\n        );\r\n\r\n        // Get Last slot\r\n        this.props.makeRequest(request.Lottery.slots.last, {}, {message: MESSAGES.LOGGING}).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    this.props.setLastSlot(res.data);\r\n                }\r\n                this.setState({isLoading: false});\r\n            },\r\n            (errorData) => {\r\n                this.setState({isLoading: false});\r\n            }\r\n        );\r\n\r\n        // Get Winners\r\n        this.props.makeRequest(request.Lottery.slots.winners, {query: 'limit=8'}, {message: MESSAGES.LOGGING}).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    this.props.setLotteryWinners(res);\r\n                } else {\r\n                }\r\n            },\r\n            (errorData) => {\r\n                this.setState({isLoading: false});\r\n            }\r\n        );\r\n\r\n        // Get Active Slot\r\n        this.props.makeRequest(request.Lottery.slots.getActive, {}, {message: MESSAGES.LOGGING}).then(\r\n            (res) => {\r\n                if (res.data) {\r\n                    this.props.setLotterySlot(res.data);\r\n                    this.props.setLotteryPlayers(res.data.participants);\r\n                }\r\n            },\r\n            (errorData) => {\r\n                this.setState({isLoading: false});\r\n            }\r\n        );\r\n\r\n        // Get Home page info\r\n        this.props.makeRequest(request.Pages.show, {slug: \"home\" }, {message: MESSAGES.LOGGING}).then(\r\n            (res) => { if (res.data) { this.props.setPage(res); this.setState({isLoading: false}); } },\r\n            (errorData) => {}\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render () {\r\n        const {rootCssClassList} = this.props.appStatus;\r\n        return (\r\n            <Fragment>\r\n                <div className={rootCssClassList.join(' ')}>\r\n                <Suspense fallback={\r\n                    <div className=\"loader-container\">\r\n                        <div className=\"loader-container-inner\">\r\n                            <div className=\"text-center\">\r\n                                <Loader type=\"ball-grid-beat\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }>\r\n                    <Route exact path=\"/\" component={Home}/>\r\n                    <Route exact path=\"/my/:slug?/:slug?\" component={My}/>\r\n                    <Route exact path=\"/:slug\" component={Page}/>\r\n                </Suspense>\r\n                    <LoadingMessage/>\r\n                    {/*<FlashMessageList/>*/}\r\n            </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.authReducer,\r\n        appStatus: state.appStatusReducer\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, {\r\n    makeRequest, setLastSlot, setCurrencies, setSettings, setLotteryWinners, setLotterySlot, setLotteryPlayers,\r\n    updateBrowseHistory, setPage\r\n})(AppMain));","import {SET_AUTH, SET_USER} from \"../constants/actionTypes\";\r\nimport {isEmpty} from \"lodash\";\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n};\r\n\r\nexport default (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case SET_AUTH:\r\n            const user = action.payload && action.payload.user ? action.payload.user : {};\r\n            const scope = action.payload && action.payload.scope ? action.payload.scope : {};\r\n            const isVerified = user.verified ? user.verified : 0;\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            return {\r\n                isAuthenticated: !isEmpty(user),\r\n                isVerified: !!isVerified,\r\n                user: user,\r\n                scope: scope\r\n            };\r\n        case SET_USER:\r\n            localStorage.setItem(\"user\", JSON.stringify(action.user));\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","export const DEFAULT_APP_STATUS = {\r\n    modal: null,\r\n    settings: [{}],\r\n    currencies: [{}],\r\n    rootCssClassList: ['trans'],\r\n    browseHistory: {\r\n        locations: [],\r\n        autoTasks: []\r\n    }\r\n};\r\n\r\nexport const DEFAULT_LOTTERY_STATE = {\r\n    winners: {\r\n        data: [],\r\n        meta: {},\r\n        links: {}\r\n    },\r\n    slot: {\r\n    },\r\n    lastSlot: {\r\n        winners: []\r\n    },\r\n    players: {\r\n        data: []\r\n    },\r\n    result: []\r\n};\r\n\r\nexport const DEFAULT_MY_STATE = {\r\n    playedGames: {},\r\n    transactions: {},\r\n    profile: {},\r\n    withdrawRequests: {}\r\n};\r\n\r\nexport const DEFAULT_PAGE_STATE = {\r\n    pages: []\r\n};","import {combineReducers} from \"redux\";\r\nimport flashMessageReducer from \"./reducers/flashMessageReducer\";\r\nimport authReducer from \"./reducers/authReducer\";\r\nimport appStatusReducer from \"./reducers/appStatusReducer\";\r\nimport loadingMessageReducer from \"./reducers/loadingMessageReducer\";\r\nimport lotteryReducer from \"./reducers/lotteryReducer\";\r\nimport myReducer from \"./reducers/myReducer\";\r\nimport pageReducer from \"./reducers/pageReducer\";\r\n\r\nexport default combineReducers({\r\n    authReducer,\r\n    appStatusReducer,\r\n    lotteryReducer,\r\n    myReducer,\r\n    pageReducer,\r\n    flashMessageReducer,\r\n    loadingMessageReducer,\r\n});","import {DEFAULT_APP_STATUS} from \"../data/default\";\r\nimport {\r\n    ADD_TO_ROOT_CSS_CLASS_LIST, REMOVE_FROM_ROOT_CSS_CLASS_LIST, SET_CURRENCIES, SET_MODAL, SET_SETTINGS,\r\n    UPDATE_BROWSE_HISTORY,\r\n} from \"../constants/actionTypes\";\r\nimport * as _ from \"lodash\";\r\n\r\nexport default (state = DEFAULT_APP_STATUS, action = {}) => {\r\n    switch (action.type) {\r\n        case `${SET_MODAL}` :\r\n            return {\r\n                ...state,\r\n                modal: action.modal\r\n            };\r\n        case `${SET_CURRENCIES}` :\r\n            localStorage.setItem(\"currencies\", JSON.stringify(action.currencies));\r\n            return {\r\n                ...state,\r\n                currencies: action.currencies\r\n            };\r\n        case `${SET_SETTINGS}` :\r\n            localStorage.setItem(\"settings\", JSON.stringify(action.settings));\r\n            return {\r\n                ...state,\r\n                settings: action.settings\r\n            };\r\n        case `${ADD_TO_ROOT_CSS_CLASS_LIST}` :\r\n            return {\r\n                ...state,\r\n                rootCssClassList: [\r\n                    ...state.rootCssClassList,\r\n                    action.payload\r\n                ]\r\n            };\r\n        case `${REMOVE_FROM_ROOT_CSS_CLASS_LIST}` :\r\n            let newClassList = [...state.rootCssClassList];\r\n            let index = newClassList.indexOf(action.payload);\r\n\r\n            if (index > -1) {\r\n                newClassList.splice(index, 1);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                rootCssClassList: newClassList\r\n            };\r\n        case `${UPDATE_BROWSE_HISTORY}` :\r\n            // update locations\r\n            let locations = [...state.browseHistory.locations];\r\n\r\n            if (locations.length > 15) {\r\n                locations.shift();\r\n            }\r\n\r\n            if (action.payload && action.payload.location) {\r\n                locations = locations.concat([action.payload.location]);\r\n            }\r\n\r\n            // update autoTasks\r\n            let autoTasks = [...state.browseHistory.autoTasks];\r\n            if (action.payload && action.payload.autoTasks) {\r\n                autoTasks = action.payload.autoTasks;\r\n            }\r\n\r\n            // update state\r\n            return {\r\n                ...state,\r\n                browseHistory: {\r\n                    locations: locations,\r\n                    autoTasks: autoTasks\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {DEFAULT_LOTTERY_STATE} from \"../data/default\";\r\nimport {\r\n    ADD_LOTTERY_PLAYER, SET_LOTTERY_PLAYERS, SET_LOTTERY_SLOT, SET_LOTTERY_WINNERS,\r\n    SET_LOTTERY_DATA, SET_LAST_SLOT, SET_LOTTERY_PICKED_NUMBERS\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default (state = DEFAULT_LOTTERY_STATE, action = {}) => {\r\n    switch (action.type) {\r\n        case `${SET_LOTTERY_WINNERS}` :\r\n            return {\r\n                ...state,\r\n                winners: action.payload\r\n            };\r\n        case `${SET_LOTTERY_SLOT}` :\r\n            return {\r\n                ...state,\r\n                slot: action.payload\r\n            };\r\n        case `${SET_LOTTERY_PLAYERS}` :\r\n            return {\r\n                ...state,\r\n                players: action.payload\r\n            };\r\n        case `${ADD_LOTTERY_PLAYER}` :\r\n            return {\r\n                ...state,\r\n                players: {\r\n                    ...state.players,\r\n                    data: [\r\n                        action.payload,\r\n                        ...state.players.data\r\n                    ]\r\n                }\r\n            };\r\n        case `${SET_LOTTERY_DATA}` :\r\n            let data = {};\r\n\r\n            if (action.payload.lastSlot) {\r\n                data.lastSlot = action.payload.lastSlot;\r\n            }\r\n\r\n            if (action.payload.winners) {\r\n                data.winners = {\r\n                    ...state.winners,\r\n                    data: action.payload.winners\r\n                };\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ...data\r\n            };\r\n        case `${SET_LAST_SLOT}` :\r\n            return {\r\n                ...state,\r\n                lastSlot: action.lastSlot\r\n            };\r\n        case `${SET_LOTTERY_PICKED_NUMBERS}` :\r\n            return {\r\n                ...state,\r\n                pickedNumbers: action.pickedNumbers\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {DEFAULT_MY_STATE} from \"../data/default\";\r\nimport {SET_PLAYED_GAMES, SET_TRANSACTIONS, SET_WITHDRAW_REQUESTS} from \"../constants/actionTypes\";\r\n\r\nexport default (state = DEFAULT_MY_STATE, action = {}) => {\r\n    switch (action.type) {\r\n        case `${SET_PLAYED_GAMES}` :\r\n            return {\r\n                ...state,\r\n                playedGames: action.payload\r\n            };\r\n        case `${SET_TRANSACTIONS}` :\r\n            return {\r\n                ...state,\r\n                transactions: action.payload\r\n            };\r\n        case `${SET_WITHDRAW_REQUESTS}` :\r\n            return {\r\n                ...state,\r\n                withdrawRequests: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {DEFAULT_PAGE_STATE} from \"../data/default\";\r\nimport {SET_PAGE} from \"../constants/actionTypes\";\r\n\r\nexport default (state = DEFAULT_PAGE_STATE, action = {}) => {\r\n    switch (action.type) {\r\n        case `${SET_PAGE}` :\r\n            return {\r\n                ...state,\r\n                pages: [\r\n                    ...state.pages,\r\n                    action.payload.data\r\n                ]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {ADD_FLASH_MESSAGE, DELETE_FLASH_MESSAGE} from \"../constants/actionTypes\";\r\nimport shortid from \"shortid\";\r\nimport {findIndex} from \"lodash\";\r\n\r\nexport default (state = [], action = {}) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_FLASH_MESSAGE:\r\n            return [\r\n                // commenting this will show only one flash message at a time\r\n                // ...state,\r\n                {\r\n                    id: shortid.generate(),\r\n                    type: action.message.type,\r\n                    text: action.message.text\r\n                }\r\n            ];\r\n\r\n        case DELETE_FLASH_MESSAGE:\r\n            const index = findIndex(state, {id: action.id});\r\n            if (index >= 0) {\r\n                return [\r\n                    ...state.slice(0, index),\r\n                    ...state.slice(index + 1)\r\n                ];\r\n            }\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {ADD_LOADING_MESSAGE, DELETE_LOADING_MESSAGE} from \"../constants/actionTypes\";\r\n\r\nexport default (state = [], action = {}) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_LOADING_MESSAGE:\r\n            return {\r\n                isLoading: true,\r\n                loadingMessage: action.loadingMessage\r\n            };\r\n\r\n        case DELETE_LOADING_MESSAGE:\r\n            return {\r\n                isLoading: false,\r\n                loadingMessage: null\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { HashRouter } from 'react-router-dom';\r\nimport './assets/css/bootstrap.css';\r\nimport './assets/css/style.css';\r\nimport AppMain from './Layout/AppMain';\r\nimport configureStore from './config/configureStore';\r\nimport { Provider } from 'react-redux';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthorizationToken from \"./utils/axios/setAuthorizationToken\";\r\nimport {setAuth, setUser} from \"./actions/authActions\";\r\nimport Echo from 'laravel-echo';\r\nimport {\r\n    setLotterySlot, addLotterySlotPlayer, setLotteryPlayers,\r\n    setLotteryData\r\n} from \"./actions/lotteryActions\";\r\nimport {setCurrencies, setSettings} from \"./actions/appStatusAction\";\r\nimport {getEnv} from \"./utils/helper/helperFunctions\";\r\n\r\nlet jwtToken = '';\r\nexport const store = configureStore();\r\nconst rootElement = document.getElementById('root');\r\n\r\n// check if jwtToken exist in local storage and is valid\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n    try {\r\n        const decodedToken = jwt_decode(localStorage.getItem(\"jwtToken\"));\r\n        if (decodedToken.exp > (new Date().getTime() / 1000)) {\r\n            jwtToken = localStorage.getItem(\"jwtToken\");\r\n            setAuthorizationToken(jwtToken);\r\n            store.dispatch(setAuth(decodedToken));\r\n        } else {\r\n            localStorage.removeItem(\"jwtToken\");\r\n            setAuthorizationToken(false);\r\n            store.dispatch(setAuth({}));\r\n        }\r\n    } catch (err) {\r\n        localStorage.removeItem(\"jwtToken\");\r\n        setAuthorizationToken(false);\r\n        store.dispatch(setAuth({}));\r\n    }\r\n}\r\n\r\n// set user\r\nlet userId = null;\r\nif (localStorage.getItem(\"user\")) {\r\n    try {\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        userId = user.id;\r\n        store.dispatch(setUser(user));\r\n    } catch (err) {\r\n    }\r\n}\r\n\r\n// set currencies\r\nif (localStorage.getItem(\"currencies\")) {\r\n    try {\r\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\r\n        store.dispatch(setCurrencies(currencies));\r\n    } catch (err) {\r\n    }\r\n}\r\n\r\n// set settings\r\nif (localStorage.getItem(\"settings\")) {\r\n    try {\r\n        const settings = JSON.parse(localStorage.getItem(\"settings\"));\r\n        store.dispatch(setSettings(settings));\r\n    } catch (err) {\r\n    }\r\n}\r\n\r\n\r\n\r\nconst renderApp = Component => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <Component />\r\n            </HashRouter>\r\n        </Provider>,\r\n        rootElement\r\n    );\r\n};\r\n\r\nrenderApp(AppMain);\r\n\r\nwindow.io = require('socket.io-client');\r\nwindow.Echo = new Echo({\r\n    broadcaster: 'socket.io',\r\n    host: getEnv('APP_SOCKET_URL'),\r\n    // host: window.location.hostname + ':6001',\r\n    auth: {\r\n        headers: {\r\n            'Authorization' : 'Bearer ' + jwtToken\r\n        }\r\n    }\r\n});\r\n\r\nwindow.Echo.channel('lottery')\r\n    .listen('LotterySlotCreatedEvent', (e) => {\r\n        store.dispatch(setLotterySlot(e.data));\r\n        store.dispatch(setLotteryPlayers({data: []}));\r\n    }).listen('LotterySlotClosedEvent', (e) => {\r\n        store.dispatch(setLotteryData(e));\r\n    }).listen('ParticipantAddedEvent', (e) => {\r\n        let slot = e.data;\r\n        let participant = e.participant;\r\n        store.dispatch(setLotterySlot(slot));\r\n        store.dispatch(addLotterySlotPlayer(participant));\r\n    });\r\n\r\nwindow.Echo.private('App.User.' + userId)\r\n    .listen('UserUpdateEvent', (e) => {\r\n        console.log('UserUpdateEvent', e.token);\r\n        if (e.token) {\r\n            localStorage.setItem(\"jwtToken\", e.token);\r\n            setAuthorizationToken(e.token);\r\n            this.props.setAuth(jwt_decode(e.token));\r\n        }\r\n    });","import {applyMiddleware, compose, createStore} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../rootReducer\";\r\n\r\nexport default function configureStore() {\r\n  return createStore(\r\n    rootReducer,\r\n      compose(\r\n          applyMiddleware(thunk),\r\n          window.devToolsExtension ? window.devToolsExtension() : f => f\r\n      ),\r\n  );\r\n}","import * as axios from \"axios\";\r\nimport {getEnv} from \"../utils/helper/helperFunctions\";\r\n\r\nconst API_BASE_URL = getEnv('API_BASE_URL');\r\n/**\r\n * This handles all the api request. If REACT_APP_ENV = mock-api, then the data\r\n * is faked and returned as async promise object using mock data.\r\n *\r\n * To know what type of data is expected by the application, look at the mock data.\r\n *\r\n * @param type\r\n * @param url\r\n * @param userData\r\n */\r\nconst requests = (type, url, userData = {}) => {\r\n    if (getEnv('ENV') === 'mock-api') {\r\n        // return mockApi(type, url, userData = {});\r\n    } else {\r\n        return axios({\r\n            method: type,\r\n            url: url,\r\n            data: userData,\r\n            crossDomain: true,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * Handles all Auth related requests\r\n */\r\nconst Auth = {\r\n    login: (data) =>\r\n        requests('POST', API_BASE_URL + \"/player-login\", data),\r\n    loginAsGuest: (data) =>\r\n        requests('POST', API_BASE_URL + \"/register-as-guest\", data),\r\n    logout: () =>\r\n        requests('PUT', API_BASE_URL + \"/logout\"),\r\n    register: (data) =>\r\n        requests('POST', API_BASE_URL + \"/register\", data),\r\n    forgotPassword: (data) =>\r\n        requests('POST', API_BASE_URL + \"/forgot-password\", data),\r\n    resetPassword: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/reset-password\", data),\r\n    verifyEmail: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/verify-email/\" + data.verificationCode),\r\n    resendVerificationCode: (data) =>\r\n        requests('GET', API_BASE_URL + \"/resend-verification-code\"),\r\n};\r\n\r\n/**\r\n * Handles all Business related requests\r\n */\r\nconst Users = {\r\n    all: (query) =>\r\n        requests('GET', API_BASE_URL + \"/users?\" + query),\r\n    get: (id) =>\r\n        requests('GET',API_BASE_URL + `/users/${id}`),\r\n    create: (data) =>\r\n        requests('POST', API_BASE_URL + \"/users\", data),\r\n    update: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/users/\" + data.id, data),\r\n    updateMultiple: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/users\", data),\r\n    deleteMultiple: (data) =>\r\n        requests('DELETE', API_BASE_URL + \"/users\", data),\r\n};\r\n\r\n/**\r\n * Handles all Permissions related requests\r\n */\r\nconst Permissions = {\r\n    all: (query) =>\r\n        requests('GET', API_BASE_URL + \"/permissions?\" + query),\r\n    get: (id) =>\r\n        requests('GET',API_BASE_URL + `/permissions/${id}`),\r\n    create: (data) =>\r\n        requests('POST', API_BASE_URL + \"/permissions\", data),\r\n    update: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/permissions/\" + data.id, data),\r\n    deleteMultiple: (data) =>\r\n        requests('DELETE', API_BASE_URL + \"/permissions\", data),\r\n};\r\n\r\n/**\r\n * Handles all Business related requests\r\n */\r\nconst Roles = {\r\n    all: (query) =>\r\n        requests('GET', API_BASE_URL + \"/roles?\" + query),\r\n    get: (id) =>\r\n        requests('GET',API_BASE_URL + `/roles/${id}`),\r\n    create: (data) =>\r\n        requests('POST', API_BASE_URL + \"/roles\", data),\r\n    update: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/roles/\" + data.id, data),\r\n    deleteMultiple: (data) =>\r\n        requests('DELETE', API_BASE_URL + \"/roles\", data),\r\n};\r\n\r\n/**\r\n * Handles all Settings related requests\r\n */\r\nconst Settings = {\r\n    all: (data) =>\r\n        requests('GET', API_BASE_URL + \"/settings?\" + data.query),\r\n};\r\n\r\n/**\r\n * Handles all Currencies related requests\r\n */\r\nconst Currencies = {\r\n    all: (data) =>\r\n        requests('GET', API_BASE_URL + \"/currencies?\" + data.query),\r\n};\r\n\r\n/**\r\n * Handles all Currencies related requests\r\n */\r\nconst Me = {\r\n    get: (data) =>\r\n        requests('GET', API_BASE_URL + \"/me\"),\r\n    updateProfile: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/me/profile/update\", data),\r\n    play: (data) =>\r\n        requests('POST', API_BASE_URL + \"/me/play\", data),\r\n    getPlayedGames: (data) =>\r\n        requests('GET', API_BASE_URL + \"/me/played-games\"),\r\n    getTransactions: (data) =>\r\n        requests('GET', API_BASE_URL + \"/me/transactions\"),\r\n    getWithdrawRequests: (data) =>\r\n        requests('GET', API_BASE_URL + \"/me/withdraw-requests\"),\r\n    createWithdrawRequest: (data) =>\r\n        requests('POST', API_BASE_URL + \"/me/create-withdraw-request\", data),\r\n    cancelWithdrawRequest: (data) =>\r\n        requests('PUT', API_BASE_URL + \"/me/cancel-withdraw-request/\" + data.id),\r\n};\r\n\r\n/**\r\n * Handles all Coinbase related requests\r\n */\r\nconst Coinbase = {\r\n    createCharge: (data) =>\r\n        requests('POST', API_BASE_URL + \"/coinbase/create-charge\", data),\r\n};\r\n\r\n/**\r\n * Handles all Lottery related requests\r\n */\r\nconst Lottery = {\r\n    slots: {\r\n        all: (query) =>\r\n            requests('GET', API_BASE_URL + \"/lottery/slots?\" + query),\r\n        get: (data) =>\r\n            requests('GET',API_BASE_URL + `/lottery/slots/${data.id}?` + data.query),\r\n        create: (data) =>\r\n            requests('POST', API_BASE_URL + \"/lottery/slots\", data),\r\n        update: (data) =>\r\n            requests('PUT', API_BASE_URL + \"/lottery/slots/\" + data.id, data),\r\n        winners: (data) =>\r\n            requests('GET',API_BASE_URL + `/lottery/slots/winners?` + data.query),\r\n        getActive: (data) =>\r\n            requests('GET', API_BASE_URL + `/lottery/slots/3?with=participants&is_active=true`),\r\n        last: (data) =>\r\n            requests('GET',API_BASE_URL + `/lottery/slots/last`),\r\n    }\r\n};\r\n\r\n/**\r\n * Handles all pages related requests\r\n */\r\nconst Pages = {\r\n    get: (data) =>\r\n        requests('GET', API_BASE_URL + \"/pages\"),\r\n    show: (data) =>\r\n        requests('GET', API_BASE_URL + '/pages/' + data.slug)\r\n};\r\n\r\n/**\r\n * Handles all SEO related requests\r\n */\r\nconst Seo = {\r\n    get: (id) =>\r\n        requests('GET', API_BASE_URL + \"/seo/\" + id),\r\n};\r\n\r\n\r\n/**\r\n * Handles all Contact form related requests\r\n */\r\nconst ContactFormEntry = {\r\n    create: (data) =>\r\n        requests('POST', API_BASE_URL + \"/contact\", data),\r\n};\r\n\r\nexport default {\r\n    Auth,\r\n    Users,\r\n    Permissions,\r\n    Me,\r\n    Coinbase,\r\n    Settings,\r\n    Currencies,\r\n    Lottery,\r\n    Pages,\r\n    ContactFormEntry,\r\n    Seo\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport default function setAuthorizationToken(token) {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n}","import setAuthorizationToken from \"../utils/axios/setAuthorizationToken\";\r\nimport {SET_AUTH, SET_USER} from \"../constants/actionTypes\";\r\nimport {makeRequest} from \"./requestAction\";\r\nimport request from \"../services/request\";\r\nimport {addFlashMessage} from \"./flashMessageAction\";\r\nimport {getCodeMessage} from \"../utils/helper/helperFunctions\";\r\nimport {MESSAGES} from \"../constants/messages\";\r\n\r\nexport function setAuth(payload) {\r\n    return {\r\n        type: SET_AUTH,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setUser(user) {\r\n    return {\r\n        type: SET_USER,\r\n        user\r\n    }\r\n}\r\n\r\n\r\nexport function logout() {\r\n    return dispatch => {\r\n        dispatch(makeRequest(request.Auth.logout, {}, { isSilent: true }));\r\n\r\n        localStorage.removeItem(\"jwtToken\");\r\n        setAuthorizationToken(false);\r\n        dispatch(setAuth({}));\r\n        dispatch(addFlashMessage({type: \"success\", text: getCodeMessage(MESSAGES.LOGOUT_SUCCESS)}));\r\n    }\r\n}","import {ADD_FLASH_MESSAGE, DELETE_FLASH_MESSAGE} from \"../constants/actionTypes\";\r\n\r\nexport function addFlashMessage(message) {\r\n    return {\r\n        type: ADD_FLASH_MESSAGE,\r\n        message\r\n    }\r\n}\r\n\r\nexport function deleteFlashMessage(id) {\r\n    return {\r\n        type: DELETE_FLASH_MESSAGE,\r\n        id\r\n    }\r\n}","import {ADD_LOADING_MESSAGE, DELETE_LOADING_MESSAGE} from \"../constants/actionTypes\";\r\n\r\nexport function addLoadingMessage(loadingMessage = null) {\r\n    return {\r\n        type: ADD_LOADING_MESSAGE,\r\n        loadingMessage\r\n    }\r\n}\r\n\r\nexport function deleteLoadingMessage() {\r\n    return {\r\n        type: DELETE_LOADING_MESSAGE\r\n    }\r\n}","import setAuthorizationToken from \"../utils/axios/setAuthorizationToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n    setEvents, setAppSettings\r\n} from \"./appStatusAction\";\r\nimport {addFlashMessage} from \"./flashMessageAction\";\r\nimport {logout, setAuth} from \"./authActions\";\r\nimport {getCodeMessage} from \"../utils/helper/helperFunctions\";\r\nimport {MESSAGES} from \"../constants/messages\";\r\nimport {addLoadingMessage, deleteLoadingMessage} from \"./loadingMessageAction\";\r\n\r\n\r\nexport function makeRequest(apiCallFunction, data = {}, options={isSilent: false, message: 'Loading...'}) {\r\n    return dispatch => {\r\n        if (! options.isSilent) dispatch(addLoadingMessage(options.message));\r\n        return new Promise((resolve, reject) => {\r\n\r\n            apiCallFunction(data).then(\r\n                (response) => {\r\n                    if (! options.isSilent) dispatch(deleteLoadingMessage());\r\n                    if (response && response.data) {\r\n                        handleSuccessResponseData(dispatch, response.data, options.isSilent);\r\n                        resolve(response.data);\r\n                    }\r\n                    if (response) {\r\n                        resolve(response.data);\r\n                    }\r\n                },\r\n                (error) => {\r\n                    if (! options.isSilent) dispatch(deleteLoadingMessage());\r\n                    if (error && error.response && error.response.data) {\r\n                        handleErrorResponseData(dispatch, error.response.data, options.isSilent);\r\n                        reject(error.response.data)\r\n                    }\r\n                }\r\n            );\r\n\r\n        });\r\n    }\r\n}\r\n\r\nexport function handleSuccessResponseData(dispatch, responseData, isSilent) {\r\n    const token = responseData.token;\r\n    if (token) {\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        setAuthorizationToken(token);\r\n        dispatch(setAuth(jwt_decode(token)));\r\n    }\r\n\r\n    if (responseData.events) dispatch(setEvents(responseData.events));\r\n\r\n    if (responseData.settings) dispatch(setAppSettings(responseData.settings));\r\n\r\n    if (responseData.successCode && responseData.successCode !== 'FETCHED' && responseData.successCode !== 'TRACKED' && !isSilent) {\r\n        dispatch(addFlashMessage({type: \"success\", text: getCodeMessage(responseData.successCode)}))\r\n    }\r\n}\r\n\r\nexport function handleErrorResponseData(dispatch, errorData, isSilent) {\r\n    if (errorData.errorCode) {\r\n        if (\r\n            getCodeMessage(errorData.errorCode) === MESSAGES.ERR_TOKEN_EXPIRED ||\r\n            getCodeMessage(errorData.errorCode) === MESSAGES.ERR_TOKEN_INVALID ||\r\n            getCodeMessage(errorData.errorCode) === MESSAGES.ERR_TOKEN_USER_NOT_FOUND\r\n        ) {\r\n            dispatch(logout());\r\n        }\r\n\r\n        if (!isSilent) {\r\n            dispatch(addFlashMessage({type: \"error\", text: getCodeMessage(errorData.errorCode)}));\r\n        }\r\n    }\r\n}\r\n","//Form Validation Error Codes\r\nexport const MESSAGES = {\r\n    // Loading Message\r\n    LOADING_USER_CHECK: \"Checking if user already exist...\",\r\n    UPDATING: \"Updating...\",\r\n    SAVING: \"Saving...\",\r\n    REFRESHING: \"Refreshing...\",\r\n    REGISTERING: \"Creating your account...\",\r\n    LOGGING: \"Logging...\",\r\n    VERIFYING: \"Verifying...\",\r\n    SENDING_EMAIL: \"Sending email...\",\r\n\r\n    // Success Message\r\n    LOGIN_SUCCESS: \"Logged in successfully\",\r\n    LOGOUT_SUCCESS: \"Logged out successfully\",\r\n    SAVED: \"Saved\",\r\n    UPDATED: \"Updated\",\r\n    VERIFIED: \"User verified successfully\",\r\n    FORGOT_EMAIL_SENT: \"Forgot password email sent\",\r\n    PASSWORD_UPDATED: \"Password updated successfully\",\r\n    USER_REGISTERED: \"Registered successfully\",\r\n    VERIFICATION_EMAIL_SENT: \"Verification email sent\",\r\n\r\n    // Error Messages\r\n    ERR_VALIDATION_FAILED: \"Validation Failed\",\r\n    ERR_ABN_INVALID: \"ABN is invalid\",\r\n    ERR_ABN_REQUIRED: \"ABN is required\",\r\n    ERR_BUSINESS_NAME_REQUIRED: \"Business name is required\",\r\n    ERR_EMAIL_ALREADY_EXIST: \"User with given email is already registered\",\r\n    ERR_EMAIL_INVALID: \"Invalid Email\",\r\n    ERR_EMAIL_REQUIRED: \"Email is required\",\r\n    ERR_FIRST_NAME_REQUIRED: \"First Name is required\",\r\n    ERR_LAST_NAME_REQUIRED: \"Last Name is required\",\r\n    ERR_PASSWORD_CONFIRM_NOT_MATCHING: \"Password and Confirm Password must match\",\r\n    ERR_PASSWORD_INVALID: \"Password is invalid\",\r\n    ERR_PASSWORD_REQUIRED: \"Password is required\",\r\n    ERR_PHONE_NUMBER_REQUIRED: \"Phone Number is required\",\r\n    ERR_PHONE_NUMBER_INVALID: \"Phone Number is invalid\",\r\n    ERR_URL_INVALID: \"Url is invalid\",\r\n    ERR_URL_REQUIRED: \"Url is required\",\r\n\r\n    //Login Error Codes\r\n    ERR_INVALID_CREDENTIALS: \"Invalid Credentials\",\r\n    ERR_TOKEN_EXPIRED: \"User has been logged out due to inactivity\",\r\n    ERR_TOKEN_INVALID: \"Token invalid\",\r\n    ERR_TOKEN_NOT_PROVIDED: \"Token not provided\",\r\n    ERR_TOKEN_USER_NOT_FOUND: \"User not found\",\r\n\r\n    //Page Error Codes\r\n    ERR_INVALID_REQUEST: \"Invalid Request\",\r\n    ERR_DATABASE: \"Database error\",\r\n    ERR_MODEL_NOT_FOUND: \"Couldn't find the user\",\r\n    ERR_METHOD_NOT_ALLOWED: \"Request method not allowed\",\r\n    ERR_NOT_FOUND: \"Couldn't find the page\",\r\n    ERR_RESTRICTED: \"You don't have enough permission to view this page\",\r\n    ERR_MULTIPLE_BUSINESS: \"You can't have multiple business\",\r\n\r\n    //Unknown Error Codes\r\n    ERR_UNKNOWN: \"Something went wrong\",\r\n    ERR_LOGOUT: \"Failed to logout\",\r\n    ERR_LOCKED: \"Locked\",\r\n};","import {SET_PAGE} from \"../constants/actionTypes\";\r\n\r\nexport function setPage(payload) {\r\n    return {\r\n        type: SET_PAGE,\r\n        payload\r\n    }\r\n}","import {MESSAGES} from \"../../constants/messages\";\r\nimport Cookies from 'universal-cookie';\r\nimport * as _ from \"lodash\";\r\nimport {isEmpty} from \"lodash\";\r\n\r\n/*\r\n==========================================================================\r\nApp Helper Functions\r\n==========================================================================\r\n */\r\n/**\r\n * This is a wrapper function to get the env variable without using the\r\n * prefix REACT_APP_\r\n *\r\n * @param key\r\n * @return {string}\r\n */\r\nexport function getEnv(key) {\r\n    return process.env['REACT_APP_' + key];\r\n}\r\n\r\n/**\r\n * Transform 'slug_string' or 'camelCaseString' or 'any type of string' to 'Capitalized Words'\r\n *\r\n * @param string\r\n * @returns {string}\r\n */\r\nexport function toCapitalizedWords(string) {\r\n    const newString = string.replace(/([A-Z])/g, ' $1')\r\n        .replace(/([_])/g, ' ');\r\n\r\n    return firstOfEachWordToUppercase(newString);\r\n}\r\n\r\n/**\r\n * Capitalize first letter of each words in a string\r\n *\r\n * @param str\r\n * @returns {string}\r\n */\r\nexport function firstOfEachWordToUppercase(str) {\r\n    let array = str.split(' ');\r\n    let newArray = [];\r\n\r\n    for (let x = 0; x < array.length; x++) {\r\n        newArray.push(array[x].charAt(0).toUpperCase() + array[x].slice(1));\r\n    }\r\n\r\n    return newArray.join(' ');\r\n}\r\n\r\n/**\r\n * Format Date to user friendly string\r\n *\r\n * @param dateString\r\n * @returns {string}\r\n */\r\nexport function formatDate(dateString) {\r\n    let options = {day: 'numeric', month: 'long', year: 'numeric'};\r\n    let date = new Date(dateString.replace(' ', 'T'));\r\n\r\n    // return dateString;\r\n    return date.toLocaleString(\"en-US\", options);\r\n}\r\n\r\n/*\r\n==========================================================================\r\nData Handling Helper Functions\r\n==========================================================================\r\n */\r\n/**\r\n * Use error code to get error message\r\n *\r\n * @param errorCode\r\n * @return {string}\r\n */\r\nexport function getCodeMessage(errorCode) {\r\n    return MESSAGES[errorCode] ? MESSAGES[errorCode] : MESSAGES.ERR_UNKNOWN;\r\n}\r\n\r\n/*\r\n==========================================================================\r\nExtra Helper Functions\r\n==========================================================================\r\n */\r\n\r\nexport function getCookie(name, options = {}) {\r\n    const cookies = new Cookies();\r\n    return cookies.get(name, options);\r\n}\r\n\r\nexport function setCookie(name, value, options = {}) {\r\n    const cookies = new Cookies();\r\n    cookies.set(name, value, options);\r\n}\r\n\r\nexport function generateRandomLotteryNumber() {\r\n    let lotteryNumber = [];\r\n    let max = 45;\r\n\r\n    while (lotteryNumber.length < 6) {\r\n        let randNumber = Math.floor(Math.random() * 100) + 1;\r\n\r\n        if (randNumber < (max + 1) && lotteryNumber.indexOf(randNumber) === -1) {\r\n            lotteryNumber.push(randNumber);\r\n        }\r\n    }\r\n\r\n    return lotteryNumber;\r\n}\r\n\r\nexport function getLotteryNumbersOnly(pickedNumbers) {\r\n    let arr = [];\r\n\r\n    _.forEach(pickedNumbers, function (item, key) {\r\n        if (typeof item === \"number\") {\r\n            arr.push(item);\r\n        }\r\n    });\r\n\r\n    return arr;\r\n}\r\n\r\nexport function inPickedNumbers(pickedNumbers, number) {\r\n    let numberKey = \"\";\r\n\r\n    _.forEach(pickedNumbers, function (item, key) {\r\n        if (item === number) {\r\n            return key;\r\n        }\r\n    });\r\n\r\n    return numberKey;\r\n}\r\n\r\nexport function getFirstEmptyPosition(pickedNumbers) {\r\n    let firstEmptyKey;\r\n\r\n    _.forEach(pickedNumbers, function (item, key) {\r\n        if (typeof item === 'undefined') {\r\n            if (typeof firstEmptyKey === 'undefined') {\r\n                firstEmptyKey = key;\r\n            }\r\n        }\r\n    });\r\n\r\n    return firstEmptyKey;\r\n}\r\n\r\nexport function isNumberPickedCorrectly(pickedNumbers) {\r\n    let bool = true;\r\n    _.forEach(pickedNumbers, function (item, key) {\r\n        if (bool) {\r\n            if (typeof item !== 'number') {\r\n                bool = false;\r\n            }\r\n        }\r\n    });\r\n\r\n    return bool;\r\n}\r\n\r\nexport function findSetting(settings, key) {\r\n    return _.find(settings, {key: key}) ? _.find(settings, {key: key}) : {};\r\n}\r\n\r\nexport function checkIfWinner(lastWinners, id) {\r\n    return _.find(lastWinners, {id: id});\r\n}\r\n\r\nexport function isItemLoaded(item) {\r\n    if (typeof item === 'undefined' || item === null) {\r\n        return false;\r\n    }\r\n\r\n    return !!(Object.keys(item).length > 0);\r\n}\r\n\r\nexport function inAppCoin(coins, withUnit = true) {\r\n    let amountInCurrency = parseFloat(coins) + \" coins\";\r\n\r\n    // If coin not set or undefined or empty. Skip for 0\r\n    if (! coins && coins !== 0) {\r\n        return \"\";\r\n    }\r\n\r\n    return amountInCurrency;\r\n\r\n}\r\n\r\nexport function bitsToBtc(amount, withUnit = true) {\r\n    let amountInCoin = 0;\r\n\r\n    // If amount not set or undefined or empty. Skip for 0\r\n    if (! amount && amount !== 0) {\r\n        return \"\";\r\n    }\r\n\r\n\r\n    if (! amount) {\r\n        return \"\";\r\n    }\r\n\r\n    try {\r\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\r\n        const coinData = _.find(currencies, {currency: \"BTC\"});\r\n\r\n        amountInCoin = parseFloat((amount / coinData.value_in_bits).toFixed(6));\r\n\r\n        if (withUnit) {\r\n            let suffix = \" BTC\";\r\n            amountInCoin += suffix;\r\n        }\r\n    } catch (err) {\r\n        // console.log('amount conversion error', err);\r\n    }\r\n\r\n    return amountInCoin;\r\n}\r\n\r\nexport function btcToBits(amount, withUnit = true) {\r\n    let amountInBits = 0;\r\n\r\n    // If amount not set or undefined or empty. Skip for 0\r\n    if (! amount && amount !== 0) {\r\n        return \"\";\r\n    }\r\n\r\n\r\n    if (! amount) {\r\n        return \"\";\r\n    }\r\n\r\n    try {\r\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\r\n        const coinData = _.find(currencies, {currency: \"BTC\"});\r\n\r\n        amountInBits = parseFloat((amount * coinData.value_in_bits).toFixed(6));\r\n\r\n        if (withUnit) {\r\n            let suffix = \" Bits\";\r\n            amountInBits += suffix;\r\n        }\r\n    } catch (err) {\r\n        // console.log('amount conversion error', err);\r\n    }\r\n\r\n    return amountInBits;\r\n}\r\n\r\nexport function bitsToCoin(amount, withUnit = true) {\r\n    let amountInCoin = 0;\r\n\r\n    // If amount not set or undefined or empty. Skip for 0\r\n    if (! amount && amount !== 0) {\r\n        return \"\";\r\n    }\r\n\r\n\r\n    if (! amount) {\r\n        return \"\";\r\n    }\r\n\r\n    try {\r\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\r\n        const coinData = _.find(currencies, {currency: \"Coin\"});\r\n\r\n        amountInCoin = parseFloat((amount / coinData.value_in_bits).toFixed(6));\r\n\r\n        if (withUnit) {\r\n            let suffix = amountInCoin > 1 ? \" coins\" : \" coin\";\r\n            amountInCoin += suffix;\r\n        }\r\n    } catch (err) {\r\n        // console.log('amount conversion error', err);\r\n    }\r\n\r\n    return amountInCoin;\r\n}\r\n\r\nexport function coinToBits(amount, withUnit = true) {\r\n    let amountInBits = 0;\r\n\r\n    // If amount not set or undefined or empty. Skip for 0\r\n    if (! amount && amount !== 0) {\r\n        return \"\";\r\n    }\r\n\r\n\r\n    if (! amount) {\r\n        return \"\";\r\n    }\r\n\r\n    try {\r\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\r\n        const coinData = _.find(currencies, {currency: \"Coin\"});\r\n\r\n        amountInBits = parseFloat((amount * coinData.value_in_bits));\r\n\r\n        if (withUnit) {\r\n            amountInBits += amountInBits > 1 ? \" coins\" : \" coin\";\r\n        }\r\n    } catch (err) {\r\n        // console.log('amount conversion error', err);\r\n    }\r\n\r\n    return amountInBits;\r\n}\r\n\r\nexport function coinToBtc(amount, withUnit = true) {\r\n    return bitsToBtc(coinToBits(amount, false));\r\n}\r\n\r\n\r\n// stripslashes\r\nexport function stripslashes(str) {\r\n    return str.replace(/\\\\'/g,'\\'').replace(/\\\"/g,'\"').replace(/\\\\\\\\/g,'\\\\').replace(/\\\\0/g,'\\0');\r\n}\r\n\r\n// get by slug\r\nexport function getBySlug(collection, slug) {\r\n    let item = _.find(collection, {slug: slug});\r\n    return item ? item : {};\r\n}\r\n\r\nexport function toggleItemInArray(itemsArray, item) {\r\n    let arr = itemsArray && itemsArray.length > 0 ? itemsArray : [];\r\n\r\n    let index = arr.indexOf(item);\r\n    if (index > -1) {\r\n        arr.splice(index, 1);\r\n    } else {\r\n        arr.push(item);\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nexport function getPlayerDisplayName(player) {\r\n    if (! isEmpty(player.nickname)) {\r\n        return player.nickname;\r\n    }\r\n\r\n    if (! isEmpty(player.username)) {\r\n        return player.username;\r\n    }\r\n\r\n    if (! isEmpty(player.full_name)) {\r\n        return player.full_name;\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nexport function getWinningTypeIcon(winner) {\r\n    let icon = '';\r\n\r\n    if (\r\n        (winner && winner.lottery_winner_type_id === 1) ||\r\n        (winner && winner.pivot && winner.pivot.lottery_winner_type_id === 1)\r\n    ) {\r\n        icon = 'J';\r\n    }\r\n\r\n    if (\r\n        (winner && winner.lottery_winner_type_id === 2) ||\r\n        (winner && winner.pivot && winner.pivot.lottery_winner_type_id === 2)\r\n    ) {\r\n        icon = 'S';\r\n    }\r\n\r\n    if (\r\n        (winner && winner.lottery_winner_type_id === 3) ||\r\n        (winner && winner.pivot && winner.pivot.lottery_winner_type_id === 3)\r\n    ) {\r\n        icon = 'B';\r\n    }\r\n\r\n    return icon;\r\n}\r\n\r\nexport function getWinningTypeClass(winner) {\r\n    let icon = '';\r\n\r\n    if (\r\n        (winner && winner.lottery_winner_type_id === 1) ||\r\n        (winner && winner.pivot && winner.pivot.lottery_winner_type_id === 1)\r\n    ) {\r\n        icon = 'jackpot';\r\n    }\r\n\r\n    if (\r\n        (winner && winner.lottery_winner_type_id === 2) ||\r\n        (winner && winner.pivot && winner.pivot.lottery_winner_type_id === 2)\r\n    ) {\r\n        icon = 'five-digit';\r\n    }\r\n\r\n    if (\r\n        (winner && winner.lottery_winner_type_id === 3) ||\r\n        (winner && winner.pivot && winner.pivot.lottery_winner_type_id === 3)\r\n    ) {\r\n        icon = 'four-digit';\r\n    }\r\n\r\n    return icon;\r\n}\r\n\r\nexport function getTitleFromSlug(slug)\r\n{\r\n    // Remove \"my\" for dashboard routes\r\n    slug = slug.replace(\"/my/\", '');\r\n\r\n    let title = slug\r\n        .toLowerCase()\r\n        .replace(/-/g,' ')\r\n        .replace(/[^\\w-]+/g,'')\r\n        ;\r\n\r\n    return titleCase(title);\r\n}\r\n\r\nfunction titleCase(str) {\r\n    let splitStr = str.toLowerCase().split(' ');\r\n    for (let i = 0; i < splitStr.length; i++) {\r\n        // You do not need to check if i is larger than splitStr length, as your for does that for you\r\n        // Assign it back to the array\r\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\r\n    }\r\n    // Directly return the joined string\r\n    return splitStr.join(' ');\r\n}\r\n"],"sourceRoot":""}