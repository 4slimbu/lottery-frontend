{"version":3,"sources":["Components/AppCommon/LotteryWinnerList.js","Components/Home/Winners/index.js","Components/Home/LotteryPicker/index.js","Components/AppCommon/GameInfo.js","Components/AppCommon/PlayersList.js","Components/Home/Players/index.js","Components/Home/index.js"],"names":["LotteryWinnerList","props","ulClass","liClass","winners","react_default","a","createElement","className","classnames","_","winner","key","getPlayerDisplayName","inCurrency","won_amount","service_charge","Winners","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","lottery","react","AppCommon_LotteryWinnerList","data","react_router_dom","exact","to","Component","withRouter","connect","auth","authReducer","appStatus","appStatusReducer","lotteryReducer","makeRequest","LotteryPicker","numbers","pickedNumbers","randomPick","bind","assertThisInitialized","handleNumberClick","playLottery","number","index","indexOf","firstEmptyKey","getFirstEmptyPosition","setState","setLotteryPickedNumbers","pick","arguments","length","undefined","that","theLoop","i","setTimeout","generateRandomLotteryNumber","noPick","isAuthenticated","setModal","_this$state","PickedNumbers","handleClick","LotteryNumberList","activeNumbers","onClick","React","setUser","GameInfo","gameStatus","result","timer","days","hours","minutes","seconds","miliSeconds","deciSeconds","_this$props$lottery","slot","id","setTimer","countDownDate","Date","end_time","getTime","x","setInterval","now","distance","Math","floor","clearInterval","user","lastSlot","full_name","pivot","PlayersList","players","player","Players","total","AppCommon_PlayersList","Home","lotterySlotParticipantsCount","total_participants","Home_Winners","Home_LotteryPicker","AppCommon_GameInfo","Home_Players","withLayout"],"mappings":"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","file":"static/js/9.f3713380.chunk.js","sourcesContent":["import React from \"react\";\r\nimport * as _ from \"lodash\";\r\nimport * as classnames from \"classnames\";\r\nimport {getPlayerDisplayName, inCurrency} from \"../../utils/helper/helperFunctions\";\r\n\r\nconst LotteryWinnerList = (props) => {\r\n    const {ulClass, liClass, winners} = props;\r\n    return (\r\n        <ol className={classnames(\"list-group list-group-flush\", ulClass)}>\r\n            {\r\n                _.map(winners, (winner, key) => {\r\n                    return (\r\n                        <li key={key} className={classnames(\"list-group-item\", liClass)}>\r\n                            {\r\n                                winner ?\r\n                                    <div>\r\n                                        <span className=\"player-name\">{getPlayerDisplayName(winner)}</span>\r\n                                            <span className=\"player-lottery-amount\">\r\n                                                {/*<FontAwesomeIcon icon={faBtc}/>*/}\r\n                                            { inCurrency(winner.won_amount * 1 + winner.service_charge * 1)}\r\n                                        </span>\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"placeholder-div\">\r\n                                    </div>\r\n                            }\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n        </ol>\r\n    )\r\n};\r\n\r\nexport default LotteryWinnerList;","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {makeRequest} from \"../../../actions/requestAction\";\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\nimport LotteryWinnerList from \"../../AppCommon/LotteryWinnerList\";\r\n\r\nclass Winners extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            winners: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {winners} = this.props.lottery;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"winners-table card\">\r\n                    <h4 className=\"card-header\">\r\n                        Recent Winners\r\n                    </h4>\r\n                    <LotteryWinnerList winners={winners.data}/>\r\n                    <div className=\"card-body\">\r\n                        <NavLink exact={true} className='card-link'\r\n                                 to='/winners'>View Past Winners</NavLink>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.authReducer,\r\n        appStatus: state.appStatusReducer,\r\n        lottery: state.lotteryReducer\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, {\r\n    makeRequest,\r\n})(Winners));","import React, {Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport LotteryNumberList from \"../../AppCommon/LotteryNumberList\";\r\nimport {\r\n    findSetting, generateRandomLotteryNumber, getFirstEmptyPosition,\r\n    isNumberPickedCorrectly,\r\n} from \"../../../utils/helper/helperFunctions\";\r\nimport PickedNumbers from \"../../AppCommon/PickedNumbers\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {setModal} from \"../../../actions/appStatusAction\";\r\nimport {makeRequest} from \"../../../actions/requestAction\";\r\nimport {setUser} from \"../../../actions/authActions\";\r\nimport {setLotteryPickedNumbers} from \"../../../actions/lotteryActions\";\r\n\r\nclass LotteryPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            numbers: [\r\n                1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n                11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\r\n                21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\r\n                31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\r\n                41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\r\n                51, 52, 53, 54,\r\n                //55, 56, 57, 58, 59, 60,\r\n                // 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,\r\n                // 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\r\n                // 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,\r\n                // 91, 92, 93, 94, 95, 96, 97, 98, 99\r\n            ],\r\n            pickedNumbers: [],\r\n        };\r\n\r\n        this.randomPick = this.randomPick.bind(this);\r\n        this.handleNumberClick = this.handleNumberClick.bind(this);\r\n        this.playLottery = this.playLottery.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.randomPick(false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    handleNumberClick(number) {\r\n        let {pickedNumbers} = this.state;\r\n\r\n        let index = pickedNumbers.indexOf(number);\r\n\r\n        if (index !== -1) {\r\n            delete pickedNumbers[index];\r\n        } else {\r\n            let firstEmptyKey = getFirstEmptyPosition(pickedNumbers);\r\n            if (typeof firstEmptyKey === 'number') {\r\n                pickedNumbers[firstEmptyKey] = number;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            pickedNumbers: pickedNumbers,\r\n        });\r\n        this.props.setLotteryPickedNumbers(pickedNumbers);\r\n    }\r\n\r\n    randomPick(pick = true) {\r\n        let that = this;\r\n        (function theLoop(i) {\r\n            setTimeout(function () {\r\n                let randomPick = generateRandomLotteryNumber();\r\n\r\n                that.setState({\r\n                    pickedNumbers: randomPick,\r\n                });\r\n\r\n                that.props.setLotteryPickedNumbers(randomPick);\r\n\r\n                if (--i) {          // If i > 0, keep going\r\n                    theLoop(i);       // Call the loop again, and pass it the current value of i\r\n                } else {\r\n                    // Reset to blank after random number shuffle\r\n                    if (! pick) {\r\n                        let noPick = [undefined, undefined, undefined, undefined, undefined, undefined];\r\n                        that.setState({\r\n                            pickedNumbers: noPick\r\n                        });\r\n                        that.props.setLotteryPickedNumbers(noPick);\r\n                    }\r\n                }\r\n            }, 150);\r\n        })(10);\r\n    }\r\n\r\n    playLottery() {\r\n        const {isAuthenticated} = this.props.auth;\r\n\r\n        // check if authenticated\r\n        if (! isAuthenticated) {\r\n            this.props.setModal('login');\r\n            return;\r\n        }\r\n\r\n        this.props.setModal('playLottery');\r\n    }\r\n\r\n    render() {\r\n        const {numbers, pickedNumbers} = this.state;\r\n        let firstEmptyKey = getFirstEmptyPosition(pickedNumbers);\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"lottery-table card focusable\">\r\n                    <h4 className=\"card-header\">\r\n                        <span>{ typeof firstEmptyKey !== 'undefined' ? 'Pick Numbers' : 'Picked Numbers' }</span>\r\n                        <PickedNumbers\r\n                            liClass=\"picked-number\"\r\n                            numbers={pickedNumbers}\r\n                            handleClick={this.handleNumberClick}\r\n                        />\r\n                    </h4>\r\n                    <div className=\"card-body\">\r\n                        <LotteryNumberList\r\n                            ulClass=\"lottery-table-numbers\"\r\n                            liClass=\"lottery-table-number\"\r\n                            numbers={numbers}\r\n                            activeNumbers={pickedNumbers}\r\n                            handleClick={this.handleNumberClick}\r\n                        />\r\n                        <div className=\"buttons\">\r\n                            <button className=\"btn btn-info\" onClick={this.randomPick}>Random Pick</button>\r\n                            <button className=\"btn btn-primary\" onClick={this.playLottery}>Play Now</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.authReducer,\r\n        appStatus: state.appStatusReducer\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, {\r\n    setModal,\r\n    makeRequest,\r\n    setUser,\r\n    setLotteryPickedNumbers\r\n})(LotteryPicker));","import React, {Component, Fragment} from 'react';\r\nimport LotteryNumberList from \"./LotteryNumberList\";\r\nimport {checkIfWinner, inCurrency, isItemLoaded} from \"../../utils/helper/helperFunctions\";\r\nimport * as _ from \"lodash\";\r\n\r\nclass GameInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            gameStatus: \"\",\r\n            result: null,\r\n            timer: {\r\n                days: '00',\r\n                hours: '00',\r\n                minutes: '00',\r\n                seconds: '00',\r\n                miliSeconds: '000',\r\n                deciSeconds: '00'\r\n            }\r\n\r\n        };\r\n\r\n        this.handleNumberClick = this.handleNumberClick.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        const {slot, result} = this.props.lottery;\r\n        this.setState({\r\n            slot: slot,\r\n            result: result\r\n        });\r\n\r\n        slot && slot.id && this.setTimer();\r\n    }\r\n\r\n    setTimer() {\r\n        let that = this;\r\n        const {slot} = this.props.lottery;\r\n        // Set the date we're counting down to\r\n        let countDownDate = new Date(slot.end_time).getTime();\r\n\r\n        // Update the count down every 1 second\r\n        let x = setInterval(function() {\r\n\r\n            // Get today's date and time\r\n            let now = new Date().getTime();\r\n\r\n            // Find the distance between now and the count down date\r\n            let distance = countDownDate - now;\r\n\r\n            // Time calculations for days, hours, minutes, seconds and mili seconds\r\n            let days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n            let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n            let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n            let seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n            let miliSeconds = Math.floor(distance % (1000));\r\n            let deciSeconds = Math.floor(distance % (100));\r\n\r\n            // set timer values\r\n            that.setState({\r\n                timer: {\r\n                    days: days < 10 ? '0' + days: days,\r\n                    hours: hours < 10 ? '0' + hours: hours,\r\n                    minutes: minutes < 10 ? '0' + minutes: minutes,\r\n                    seconds: seconds < 10 ? '0' + seconds: seconds,\r\n                    miliSeconds: miliSeconds < 10 ? '00' + miliSeconds : (miliSeconds < 100 ? '0' + miliSeconds : miliSeconds),\r\n                    deciSeconds: deciSeconds < 10 ? '0' + deciSeconds: deciSeconds,\r\n                }\r\n            });\r\n\r\n            // If the count down is finished, write some text\r\n            if (distance < 0) {\r\n                clearInterval(x);\r\n                that.setState({\r\n                    gameStatus: \"processing\",\r\n                })\r\n            } else {\r\n                that.setState({\r\n                    gameStatus: \"running\"\r\n                })\r\n            }\r\n        }, 1);\r\n    }\r\n\r\n    handleNumberClick() {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {user} = this.props.auth;\r\n        const {lastSlot} = this.props.lottery;\r\n        const {gameStatus, timer, result} = this.state;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"count-down-table card\">\r\n                    {\r\n                        gameStatus === \"running\" &&\r\n                        <div className=\"card-body\">\r\n                            <h4>Next Game On</h4>\r\n                            <div className=\"countdown\">\r\n                                <h3 className=\"countdown-text\">\r\n                                    <span>{ timer.minutes }</span> : <span>{ timer.seconds }</span> : <span>{ timer.deciSeconds }</span>\r\n                                </h3>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        gameStatus === \"processing\" &&\r\n                        <div className=\"card-body\">\r\n                            <h4>Result Processing ...</h4>\r\n                            <div className=\"countdown\">\r\n                                <h3 className=\"countdown-text\">\r\n                                    <span>&nbsp;</span>\r\n                                </h3>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        lastSlot && lastSlot.id &&\r\n                        <div className=\"card-body\">\r\n                            {\r\n                                lastSlot.winners.length > 0 ?\r\n                                    <div className=\"congratulation-note\">\r\n                                        <div className=\"text-center\"><strong>Congratulation to Winners</strong></div>\r\n                                        {\r\n                                            _.map(lastSlot.winners, function (winner, key) {\r\n                                                return <div key={key} className=\"winner-sec text-center\">{winner.full_name} : { inCurrency(winner.pivot.won_amount * 1 + winner.pivot.service_charge * 1) }</div>\r\n                                            })\r\n                                        }\r\n                                    </div> :\r\n                                    <div></div>\r\n                            }\r\n\r\n                            <div className=\"countdown\">\r\n                                <h5 className=\"counter-title text-center\">Last Winning Numbers</h5>\r\n                                <LotteryNumberList\r\n                                    ulClass=\"lottery-table-numbers result\"\r\n                                    liClass=\"lottery-table-number\"\r\n                                    numbers={lastSlot.result}\r\n                                    activeNumbers={lastSlot.result}\r\n                                    handleClick={this.handleNumberClick}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"text-center no-winners\">No Winners so pool prize has been added to next game.</div>\r\n\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default GameInfo","import React from \"react\";\r\nimport * as _ from \"lodash\";\r\nimport * as classnames from \"classnames\";\r\nimport {getPlayerDisplayName} from \"../../utils/helper/helperFunctions\";\r\n\r\nconst PlayersList = (props) => {\r\n    const {ulClass, liClass, players} = props;\r\n    return (\r\n        <ul className={classnames(\"players-list\", ulClass)}>\r\n            {\r\n                _.map(players, (player, key) => {\r\n                    return (\r\n                        <li key={key} className={classnames(liClass)}>\r\n                            {\r\n                                player ?\r\n                                    <div>\r\n                                        <span className=\"player-name\">{getPlayerDisplayName(player)} <small>joined the Game.</small></span>\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"placeholder-div-sm\">\r\n                                    </div>\r\n                            }\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default PlayersList;","import React, {Fragment} from 'react';\r\n\r\nimport PlayersList from \"../../AppCommon/PlayersList\";\r\n\r\nconst Players = (props) => {\r\n    const {players, total} = props;\r\n    return (\r\n        <Fragment>\r\n            <div className=\"wining-numbers-table card\">\r\n                <div className=\"card-body\">\r\n                    <h4>Active Players : {total}</h4>\r\n                    <PlayersList players={players}/>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Players;\r\n","import React, {Component, Fragment} from 'react'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Winners from \"./Winners\";\r\nimport LotteryPicker from \"./LotteryPicker\";\r\nimport GameInfo from \"../../Components/AppCommon/GameInfo\";\r\nimport Players from \"./Players\";\r\nimport withLayout from \"../HOC/withLayout\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {slot, players} = this.props.lottery;\r\n        const lotterySlotParticipantsCount = slot && slot.total_participants;\r\n        return (\r\n            <div className=\"section-bottom\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12 col-md-5 col-lg-4\">\r\n                            <Winners/>\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-md-7 col-lg-5\">\r\n                            <LotteryPicker/>\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-md-12 col-lg-3\">\r\n                            <GameInfo lottery={this.props.lottery} auth={this.props.auth}/>\r\n                            <Players players={players.data} total={lotterySlotParticipantsCount}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withLayout(Home);"],"sourceRoot":""}