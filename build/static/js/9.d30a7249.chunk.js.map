{"version":3,"sources":["../node_modules/dompurify/dist/purify.js","../node_modules/react-google-recaptcha/lib/esm/recaptcha.js","../node_modules/react-async-script/lib/esm/async-script-loader.js","../node_modules/react-google-recaptcha/lib/esm/recaptcha-wrapper.js","../node_modules/react-google-recaptcha/lib/esm/index.js"],"names":["module","exports","hasOwnProperty","Object","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","_ref","Reflect","apply","construct","fun","thisValue","args","x","Func","Function","prototype","bind","concat","arr","Array","isArray","i","arr2","length","from","_toConsumableArray","func","arrayForEach","unapply","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","regExpTest","RegExp","test","typeErrorCreate","TypeError","_len2","arguments","_key2","thisArg","_len","_key","addToSet","set","array","l","element","lcElement","clone","object","newObject","property","lookupGetter","prop","desc","get","value","console","warn","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","html$1","svg$1","mathMl$1","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","_typeof","Symbol","iterator","obj","constructor","_toConsumableArray$1","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","currentScript","hasAttribute","getAttribute","policyName","createHTML","html$$1","_","createDOMPurify","undefined","DOMPurify","root","version","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","RETURN_TRUSTED_TYPE","_document","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","documentMode","hooks","createHTMLDocument","MUSTACHE_EXPR$$1","ERB_EXPR$$1","DATA_ATTR$$1","ARIA_ATTR$$1","IS_SCRIPT_OR_DATA$$1","ATTR_WHITESPACE$$1","IS_ALLOWED_URI$$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","CONFIG","formElement","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_forceRemove","node","parentNode","removeChild","outerHTML","remove","_removeAttribute","name","attribute","getAttributeNode","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isNode","nodeName","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","elm","textContent","attributes","namespaceURI","tagName","allowedTags","firstElementChild","childCount","parent","parentTagName","Boolean","commonSvgAndHTMLElements","_checkValidNamespace","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","forceKeepAttr","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","oldNode","returnNode","toString","toStaticHTML","appendChild","firstChild","nodeIterator","serializedHTML","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","factory","_extends","assign","target","source","key","this","_assertThisInitialized","self","ReferenceError","recaptcha_ReCAPTCHA","_React$Component","subClass","superClass","ReCAPTCHA","_this","handleExpired","handleErrored","handleRecaptchaRef","__proto__","_proto","getValue","props","grecaptcha","_widgetId","getResponse","getWidgetId","execute","_executeRequested","reset","onExpired","onChange","onErrored","explicitRender","render","wrapper","sitekey","callback","theme","type","tabindex","expired-callback","error-callback","size","stoken","hl","badge","captcha","componentDidMount","componentDidUpdate","componentWillUnmount","delayOfCaptchaIframeRemoving","temporaryNode","style","display","setTimeout","elem","_this$props","childProps","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","react_default","a","ref","Component","displayName","propTypes","prop_types_default","string","isRequired","oneOf","number","defaultProps","async_script_loader_extends","SCRIPT_MAP","idCount","getOptions","recaptchaOptions","getScriptURL","options","callbackName","initialOptions","recaptcha_wrapper","dynamicOptions","lang","useRecaptchaNet","globalName","removeOnUnmount","WrappedComponent","wrappedComponentName","AsyncScriptLoader","_Component","context","state","__scriptURL","asyncScriptLoaderGetScriptLoaderID","__scriptLoaderID","setupScriptURL","asyncScriptLoaderHandleLoad","_this2","setState","asyncScriptOnLoad","asyncScriptLoaderTriggerOnScriptLoaded","mapEntry","loaded","Error","obsKey","observers","_this3","scriptURL","_options","scriptId","entry","errored","script","src","async","id","callObserverFuncAndRemoveObserver","observersMap","onload","observer","onerror","allScripts","forwardedRef","async_script_loader_objectWithoutPropertiesLoose","react","ForwardedComponent","hoist_non_react_statics_cjs_default","__webpack_exports__"],"mappings":"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","file":"static/js/9.d30a7249.chunk.js","sourcesContent":["/*! @license DOMPurify 2.3.0 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.0/LICENSE */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.DOMPurify = factory());\n})(this, function () {\n  'use strict';\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  var hasOwnProperty = Object.hasOwnProperty,\n      setPrototypeOf = Object.setPrototypeOf,\n      isFrozen = Object.isFrozen,\n      getPrototypeOf = Object.getPrototypeOf,\n      getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n  var freeze = Object.freeze,\n      seal = Object.seal,\n      create = Object.create; // eslint-disable-line import/no-mutable-exports\n\n  var _ref = typeof Reflect !== 'undefined' && Reflect,\n      apply = _ref.apply,\n      construct = _ref.construct;\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();\n    };\n  }\n\n  var arrayForEach = unapply(Array.prototype.forEach);\n  var arrayPop = unapply(Array.prototype.pop);\n  var arrayPush = unapply(Array.prototype.push);\n  var stringToLowerCase = unapply(String.prototype.toLowerCase);\n  var stringMatch = unapply(String.prototype.match);\n  var stringReplace = unapply(String.prototype.replace);\n  var stringIndexOf = unapply(String.prototype.indexOf);\n  var stringTrim = unapply(String.prototype.trim);\n  var regExpTest = unapply(RegExp.prototype.test);\n  var typeErrorCreate = unconstruct(TypeError);\n\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n  /* Add properties to a lookup table */\n\n\n  function addToSet(set, array) {\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    var l = array.length;\n\n    while (l--) {\n      var element = array[l];\n\n      if (typeof element === 'string') {\n        var lcElement = stringToLowerCase(element);\n\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n  /* Shallow clone an object */\n\n\n  function clone(object) {\n    var newObject = create(null);\n    var property = void 0;\n\n    for (property in object) {\n      if (apply(hasOwnProperty, object, [property])) {\n        newObject[property] = object[property];\n      }\n    }\n\n    return newObject;\n  }\n  /* IE10 doesn't support __lookupGetter__ so lets'\n   * simulate it. It also automatically checks\n   * if the prop is function or getter and behaves\n   * accordingly. */\n\n\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      var desc = getOwnPropertyDescriptor(object, prop);\n\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n\n      object = getPrototypeOf(object);\n    }\n\n    function fallbackValue(element) {\n      console.warn('fallback value for', element);\n      return null;\n    }\n\n    return fallbackValue;\n  }\n\n  var html = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']); // SVG\n\n  var svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']); // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n\n  var svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'feimage', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  var mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']); // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n\n  var mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  var text = freeze(['#text']);\n  var html$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n  var svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  var mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']); // eslint-disable-next-line unicorn/better-regex\n\n  var MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n\n  var ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\n  var DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n\n  var ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n\n  var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  var IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  var ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  function _toConsumableArray$1(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  var getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {Document} document The document object (to determine policy name suffix)\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported).\n   */\n\n\n  var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n    if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    } // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n\n\n    var suffix = null;\n    var ATTR_NAME = 'data-tt-policy-suffix';\n\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\n    }\n\n    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML: function createHTML(html$$1) {\n          return html$$1;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    var DOMPurify = function DOMPurify(root) {\n      return createDOMPurify(root);\n    };\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n\n\n    DOMPurify.version = '2.3.0';\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n\n    var originalDocument = window.document;\n    var document = window.document;\n    var DocumentFragment = window.DocumentFragment,\n        HTMLTemplateElement = window.HTMLTemplateElement,\n        Node = window.Node,\n        Element = window.Element,\n        NodeFilter = window.NodeFilter,\n        _window$NamedNodeMap = window.NamedNodeMap,\n        NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n        Text = window.Text,\n        Comment = window.Comment,\n        DOMParser = window.DOMParser,\n        trustedTypes = window.trustedTypes;\n    var ElementPrototype = Element.prototype;\n    var cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    var getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    var getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    var getParentNode = lookupGetter(ElementPrototype, 'parentNode'); // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n\n    if (typeof HTMLTemplateElement === 'function') {\n      var template = document.createElement('template');\n\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n\n    var emptyHTML = trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML('') : '';\n    var _document = document,\n        implementation = _document.implementation,\n        createNodeIterator = _document.createNodeIterator,\n        createDocumentFragment = _document.createDocumentFragment,\n        getElementsByTagName = _document.getElementsByTagName;\n    var importNode = originalDocument.importNode;\n    var documentMode = {};\n\n    try {\n      documentMode = clone(document).documentMode ? document.documentMode : {};\n    } catch (_) {}\n\n    var hooks = {};\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n\n    DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;\n    var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n        ERB_EXPR$$1 = ERB_EXPR,\n        DATA_ATTR$$1 = DATA_ATTR,\n        ARIA_ATTR$$1 = ARIA_ATTR,\n        IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n        ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n    var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    var ALLOWED_TAGS = null;\n    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));\n    /* Allowed attribute names */\n\n    var ALLOWED_ATTR = null;\n    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n\n    var FORBID_TAGS = null;\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n\n    var FORBID_ATTR = null;\n    /* Decide if ARIA attributes are okay */\n\n    var ALLOW_ARIA_ATTR = true;\n    /* Decide if custom data attributes are okay */\n\n    var ALLOW_DATA_ATTR = true;\n    /* Decide if unknown protocols are okay */\n\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n\n    var SAFE_FOR_TEMPLATES = false;\n    /* Decide if document with <html>... should be returned */\n\n    var WHOLE_DOCUMENT = false;\n    /* Track whether config is already set on this instance of DOMPurify. */\n\n    var SET_CONFIG = false;\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n\n    var FORCE_BODY = false;\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n\n    var RETURN_DOM = false;\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n\n    var RETURN_DOM_FRAGMENT = false;\n    /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n     * `Node` is imported into the current `Document`. If this flag is not enabled the\n     * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n     * DOMPurify.\n     *\n     * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`\n     * might cause XSS from attacks hidden in closed shadowroots in case the browser\n     * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/\n     */\n\n    var RETURN_DOM_IMPORT = true;\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n\n    var RETURN_TRUSTED_TYPE = false;\n    /* Output should be free from DOM clobbering attacks? */\n\n    var SANITIZE_DOM = true;\n    /* Keep element content when removing element? */\n\n    var KEEP_CONTENT = true;\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n\n    var IN_PLACE = false;\n    /* Allow usage of profiles like html, svg and mathMl */\n\n    var USE_PROFILES = {};\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n\n    var FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n    /* Tags that are safe for data: URIs */\n\n    var DATA_URI_TAGS = null;\n    var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n    /* Attributes safe for values like \"javascript:\" */\n\n    var URI_SAFE_ATTRIBUTES = null;\n    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\n    var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n\n    var NAMESPACE = HTML_NAMESPACE;\n    var IS_EMPTY_INPUT = false;\n    /* Keep a reference to config to pass to hooks */\n\n    var CONFIG = null;\n    /* Ideally, do not touch anything below this line */\n\n    /* ______________________________________________ */\n\n    var formElement = document.createElement('form');\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n\n    var _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n      /* Shield configuration object from tampering */\n\n\n      if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n        cfg = {};\n      }\n      /* Shield configuration object from prototype pollution */\n\n\n      cfg = clone(cfg);\n      /* Set configuration parameters */\n\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n\n      RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT !== false; // Default true\n\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n      IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n      /* Parse profile info */\n\n\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));\n        ALLOWED_ATTR = [];\n\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html);\n          addToSet(ALLOWED_ATTR, html$1);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl);\n          addToSet(ALLOWED_ATTR, mathMl$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n      /* Merge configuration parameters */\n\n\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n      }\n      /* Add #text in case KEEP_CONTENT is set to true */\n\n\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n\n\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n\n\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      } // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n\n\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    var HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']);\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n\n    var ALL_SVG_TAGS = addToSet({}, svg);\n    addToSet(ALL_SVG_TAGS, svgFilters);\n    addToSet(ALL_SVG_TAGS, svgDisallowed);\n    var ALL_MATHML_TAGS = addToSet({}, mathMl);\n    addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n    /**\n     *\n     *\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n\n    var _checkValidNamespace = function _checkValidNamespace(element) {\n      var parent = getParentNode(element); // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: HTML_NAMESPACE,\n          tagName: 'template'\n        };\n      }\n\n      var tagName = stringToLowerCase(element.tagName);\n      var parentTagName = stringToLowerCase(parent.tagName);\n\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        } // The only way to switch from MathML to SVG is via\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n\n\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        } // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n\n\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        } // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n\n\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        } // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n\n\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        } // Certain elements are allowed in both SVG and HTML\n        // namespace. We need to specify them explicitly\n        // so that they don't get erronously deleted from\n        // HTML namespace.\n\n\n        var commonSvgAndHTMLElements = addToSet({}, ['title', 'style', 'font', 'a', 'script']); // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n\n        return !ALL_MATHML_TAGS[tagName] && (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName]);\n      } // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG or MathML). Return false just in case.\n\n\n      return false;\n    };\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n\n\n    var _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        try {\n          node.outerHTML = emptyHTML;\n        } catch (_) {\n          node.remove();\n        }\n      }\n    };\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n\n\n    var _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name); // We void attribute values for unremovable \"is\"\" attributes\n\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n\n\n    var _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      var doc = void 0;\n      var leadingWhitespace = void 0;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, 'text/html');\n        } catch (_) {}\n      }\n      /* Use createHTMLDocument in case DOMParser is not available */\n\n\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n        } catch (_) {// Syntax error if dirtyPayload is invalid xml\n        }\n      }\n\n      var body = doc.body || doc.documentElement;\n\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n      /* Work on whole document or just its body */\n\n\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n    /**\n     * _createIterator\n     *\n     * @param  {Document} root document/fragment to create iterator for\n     * @return {Iterator} iterator instance\n     */\n\n\n    var _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n    };\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n\n\n    var _isClobbered = function _isClobbered(elm) {\n      if (elm instanceof Text || elm instanceof Comment) {\n        return false;\n      }\n\n      if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function') {\n        return true;\n      }\n\n      return false;\n    };\n    /**\n     * _isNode\n     *\n     * @param  {Node} obj object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n\n\n    var _isNode = function _isNode(object) {\n      return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n\n\n    var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], function (hook) {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n\n\n    var _sanitizeElements = function _sanitizeElements(currentNode) {\n      var content = void 0;\n      /* Execute a hook if present */\n\n      _executeHook('beforeSanitizeElements', currentNode, null);\n      /* Check if element is clobbered or can clobber */\n\n\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Check if tagname contains Unicode */\n\n\n      if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Now let's check the element's type and name */\n\n\n      var tagName = stringToLowerCase(currentNode.nodeName);\n      /* Execute a hook if present */\n\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName: tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n      /* Detect mXSS attempts abusing namespace confusion */\n\n\n      if (!_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Remove element if anything forbids its presence */\n\n\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          var parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          var childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n          if (childNodes && parentNode) {\n            var childCount = childNodes.length;\n\n            for (var i = childCount - 1; i >= 0; --i) {\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n            }\n          }\n        }\n\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Check whether element has a valid namespace */\n\n\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n\n      if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Sanitize element content to be template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');\n        content = stringReplace(content, ERB_EXPR$$1, ' ');\n\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n\n\n    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n\n\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$$1, lcName)) ;else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ;else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        return false;\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ;else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ;else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ;else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ;else if (!value) ;else {\n        return false;\n      }\n      return true;\n    };\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n\n\n    var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      var attr = void 0;\n      var value = void 0;\n      var lcName = void 0;\n      var l = void 0;\n      /* Execute a hook if present */\n\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      var attributes = currentNode.attributes;\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      var hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n      /* Go backwards over all attributes; safely remove bad ones */\n\n      while (l--) {\n        attr = attributes[l];\n        var _attr = attr,\n            name = _attr.name,\n            namespaceURI = _attr.namespaceURI;\n        value = stringTrim(attr.value);\n        lcName = stringToLowerCase(name);\n        /* Execute a hook if present */\n\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n        /* Remove attribute */\n\n\n        _removeAttribute(name, currentNode);\n        /* Did the hooks approve of the attribute? */\n\n\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n        /* Work around a security issue in jQuery 3.0 */\n\n\n        if (regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n\n          continue;\n        }\n        /* Sanitize attribute content to be template-safe */\n\n\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');\n          value = stringReplace(value, ERB_EXPR$$1, ' ');\n        }\n        /* Is `value` valid for this attribute? */\n\n\n        var lcTag = currentNode.nodeName.toLowerCase();\n\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n        /* Handle invalid data-* attribute set by try-catching it */\n\n\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n\n\n    var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      var shadowNode = void 0;\n\n      var shadowIterator = _createIterator(fragment);\n      /* Execute a hook if present */\n\n\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n        /* Sanitize tags and elements */\n\n\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n        /* Deep shadow DOM detected */\n\n\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n        /* Check attributes, sanitize if necessary */\n\n\n        _sanitizeAttributes(shadowNode);\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    // eslint-disable-next-line complexity\n\n\n    DOMPurify.sanitize = function (dirty, cfg) {\n      var body = void 0;\n      var importedNode = void 0;\n      var currentNode = void 0;\n      var oldNode = void 0;\n      var returnNode = void 0;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n\n      IS_EMPTY_INPUT = !dirty;\n\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n      /* Stringify, in case dirty is an object */\n\n\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof dirty.toString !== 'function') {\n          throw typeErrorCreate('toString is not a function');\n        } else {\n          dirty = dirty.toString();\n\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        }\n      }\n      /* Check we can run. Otherwise fall back or ignore */\n\n\n      if (!DOMPurify.isSupported) {\n        if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n          if (typeof dirty === 'string') {\n            return window.toStaticHTML(dirty);\n          }\n\n          if (_isNode(dirty)) {\n            return window.toStaticHTML(dirty.outerHTML);\n          }\n        }\n\n        return dirty;\n      }\n      /* Assign config vars */\n\n\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n      /* Clean up removed elements */\n\n\n      DOMPurify.removed = [];\n      /* Check if dirty is correctly typed for IN_PLACE */\n\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) ;else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n        /* Initialize the document to work on */\n\n\n        body = _initDocument(dirty);\n        /* Check we have a DOM node from the data */\n\n        if (!body) {\n          return RETURN_DOM ? null : emptyHTML;\n        }\n      }\n      /* Remove first element node (ours) if FORCE_BODY is set */\n\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n      /* Get node iterator */\n\n\n      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n      /* Now start iterating over the created document */\n\n\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Fix IE's strange behavior with manipulated textNodes #89 */\n        if (currentNode.nodeType === 3 && currentNode === oldNode) {\n          continue;\n        }\n        /* Sanitize tags and elements */\n\n\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n        /* Shadow DOM detected, sanitize it */\n\n\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n        /* Check attributes, sanitize if necessary */\n\n\n        _sanitizeAttributes(currentNode);\n\n        oldNode = currentNode;\n      }\n\n      oldNode = null;\n      /* If we sanitized `dirty` in-place, return it. */\n\n      if (IN_PLACE) {\n        return dirty;\n      }\n      /* Return sanitized string or DOM */\n\n\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (RETURN_DOM_IMPORT) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n      /* Sanitize final string template-safe */\n\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n\n\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n\n      SET_CONFIG = true;\n    };\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n\n\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {string} tag Tag name of containing element.\n     * @param  {string} attr Attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n\n\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      var lcTag = stringToLowerCase(tag);\n      var lcName = stringToLowerCase(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n\n\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     */\n\n\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        arrayPop(hooks[entryPoint]);\n      }\n    };\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n\n\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     */\n\n\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n  return purify;\n});","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar ReCAPTCHA =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ReCAPTCHA, _React$Component);\n\n  function ReCAPTCHA() {\n    var _this;\n\n    _this = _React$Component.call(this) || this;\n    _this.handleExpired = _this.handleExpired.bind(_assertThisInitialized(_this));\n    _this.handleErrored = _this.handleErrored.bind(_assertThisInitialized(_this));\n    _this.handleRecaptchaRef = _this.handleRecaptchaRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = ReCAPTCHA.prototype;\n\n  _proto.getValue = function getValue() {\n    if (this.props.grecaptcha && this._widgetId !== undefined) {\n      return this.props.grecaptcha.getResponse(this._widgetId);\n    }\n\n    return null;\n  };\n\n  _proto.getWidgetId = function getWidgetId() {\n    if (this.props.grecaptcha && this._widgetId !== undefined) {\n      return this._widgetId;\n    }\n\n    return null;\n  };\n\n  _proto.execute = function execute() {\n    var grecaptcha = this.props.grecaptcha;\n\n    if (grecaptcha && this._widgetId !== undefined) {\n      return grecaptcha.execute(this._widgetId);\n    } else {\n      this._executeRequested = true;\n    }\n  };\n\n  _proto.reset = function reset() {\n    if (this.props.grecaptcha && this._widgetId !== undefined) {\n      this.props.grecaptcha.reset(this._widgetId);\n    }\n  };\n\n  _proto.handleExpired = function handleExpired() {\n    if (this.props.onExpired) {\n      this.props.onExpired();\n    } else if (this.props.onChange) {\n      this.props.onChange(null);\n    }\n  };\n\n  _proto.handleErrored = function handleErrored() {\n    if (this.props.onErrored) this.props.onErrored();\n  };\n\n  _proto.explicitRender = function explicitRender() {\n    if (this.props.grecaptcha && this.props.grecaptcha.render && this._widgetId === undefined) {\n      var wrapper = document.createElement(\"div\");\n      this._widgetId = this.props.grecaptcha.render(wrapper, {\n        sitekey: this.props.sitekey,\n        callback: this.props.onChange,\n        theme: this.props.theme,\n        type: this.props.type,\n        tabindex: this.props.tabindex,\n        \"expired-callback\": this.handleExpired,\n        \"error-callback\": this.handleErrored,\n        size: this.props.size,\n        stoken: this.props.stoken,\n        hl: this.props.hl,\n        badge: this.props.badge\n      });\n      this.captcha.appendChild(wrapper);\n    }\n\n    if (this._executeRequested && this.props.grecaptcha && this._widgetId !== undefined) {\n      this._executeRequested = false;\n      this.execute();\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.explicitRender();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.explicitRender();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this._widgetId !== undefined) {\n      this.delayOfCaptchaIframeRemoving();\n      this.reset();\n    }\n  };\n\n  _proto.delayOfCaptchaIframeRemoving = function delayOfCaptchaIframeRemoving() {\n    var temporaryNode = document.createElement(\"div\");\n    document.body.appendChild(temporaryNode);\n    temporaryNode.style.display = \"none\"; // move of the recaptcha to a temporary node\n\n    while (this.captcha.firstChild) {\n      temporaryNode.appendChild(this.captcha.firstChild);\n    } // delete the temporary node after reset will be done\n\n\n    setTimeout(function () {\n      document.body.removeChild(temporaryNode);\n    }, 5000);\n  };\n\n  _proto.handleRecaptchaRef = function handleRecaptchaRef(elem) {\n    this.captcha = elem;\n  };\n\n  _proto.render = function render() {\n    // consume properties owned by the reCATPCHA, pass the rest to the div so the user can style it.\n\n    /* eslint-disable no-unused-vars */\n    var _this$props = this.props,\n        sitekey = _this$props.sitekey,\n        onChange = _this$props.onChange,\n        theme = _this$props.theme,\n        type = _this$props.type,\n        tabindex = _this$props.tabindex,\n        onExpired = _this$props.onExpired,\n        onErrored = _this$props.onErrored,\n        size = _this$props.size,\n        stoken = _this$props.stoken,\n        grecaptcha = _this$props.grecaptcha,\n        badge = _this$props.badge,\n        hl = _this$props.hl,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"sitekey\", \"onChange\", \"theme\", \"type\", \"tabindex\", \"onExpired\", \"onErrored\", \"size\", \"stoken\", \"grecaptcha\", \"badge\", \"hl\"]);\n    /* eslint-enable no-unused-vars */\n\n\n    return React.createElement(\"div\", _extends({}, childProps, {\n      ref: this.handleRecaptchaRef\n    }));\n  };\n\n  return ReCAPTCHA;\n}(React.Component);\n\nexport { ReCAPTCHA as default };\nReCAPTCHA.displayName = \"ReCAPTCHA\";\nReCAPTCHA.propTypes = {\n  sitekey: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  grecaptcha: PropTypes.object,\n  theme: PropTypes.oneOf([\"dark\", \"light\"]),\n  type: PropTypes.oneOf([\"image\", \"audio\"]),\n  tabindex: PropTypes.number,\n  onExpired: PropTypes.func,\n  onErrored: PropTypes.func,\n  size: PropTypes.oneOf([\"compact\", \"normal\", \"invisible\"]),\n  stoken: PropTypes.string,\n  hl: PropTypes.string,\n  badge: PropTypes.oneOf([\"bottomright\", \"bottomleft\", \"inline\"])\n};\nReCAPTCHA.defaultProps = {\n  onChange: function onChange() {},\n  theme: \"light\",\n  type: \"image\",\n  tabindex: 0,\n  size: \"normal\",\n  badge: \"bottomright\"\n};","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nimport { Component, createElement, forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistStatics from \"hoist-non-react-statics\";\nvar SCRIPT_MAP = {}; // A counter used to generate a unique id for each component that uses the function\n\nvar idCount = 0;\nexport default function makeAsyncScript(getScriptURL, options) {\n  options = options || {};\n  return function wrapWithAsyncScript(WrappedComponent) {\n    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n\n    var AsyncScriptLoader =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(AsyncScriptLoader, _Component);\n\n      function AsyncScriptLoader(props, context) {\n        var _this;\n\n        _this = _Component.call(this, props, context) || this;\n        _this.state = {};\n        _this.__scriptURL = \"\";\n        return _this;\n      }\n\n      var _proto = AsyncScriptLoader.prototype;\n\n      _proto.asyncScriptLoaderGetScriptLoaderID = function asyncScriptLoaderGetScriptLoaderID() {\n        if (!this.__scriptLoaderID) {\n          this.__scriptLoaderID = \"async-script-loader-\" + idCount++;\n        }\n\n        return this.__scriptLoaderID;\n      };\n\n      _proto.setupScriptURL = function setupScriptURL() {\n        this.__scriptURL = typeof getScriptURL === \"function\" ? getScriptURL() : getScriptURL;\n        return this.__scriptURL;\n      };\n\n      _proto.asyncScriptLoaderHandleLoad = function asyncScriptLoaderHandleLoad(state) {\n        var _this2 = this; // use reacts setState callback to fire props.asyncScriptOnLoad with new state/entry\n\n\n        this.setState(state, function () {\n          return _this2.props.asyncScriptOnLoad && _this2.props.asyncScriptOnLoad(_this2.state);\n        });\n      };\n\n      _proto.asyncScriptLoaderTriggerOnScriptLoaded = function asyncScriptLoaderTriggerOnScriptLoaded() {\n        var mapEntry = SCRIPT_MAP[this.__scriptURL];\n\n        if (!mapEntry || !mapEntry.loaded) {\n          throw new Error(\"Script is not loaded.\");\n        }\n\n        for (var obsKey in mapEntry.observers) {\n          mapEntry.observers[obsKey](mapEntry);\n        }\n\n        delete window[options.callbackName];\n      };\n\n      _proto.componentDidMount = function componentDidMount() {\n        var _this3 = this;\n\n        var scriptURL = this.setupScriptURL();\n        var key = this.asyncScriptLoaderGetScriptLoaderID();\n        var _options = options,\n            globalName = _options.globalName,\n            callbackName = _options.callbackName,\n            scriptId = _options.scriptId; // check if global object already attached to window\n\n        if (globalName && typeof window[globalName] !== \"undefined\") {\n          SCRIPT_MAP[scriptURL] = {\n            loaded: true,\n            observers: {}\n          };\n        } // check if script loading already\n\n\n        if (SCRIPT_MAP[scriptURL]) {\n          var entry = SCRIPT_MAP[scriptURL]; // if loaded or errored then \"finish\"\n\n          if (entry && (entry.loaded || entry.errored)) {\n            this.asyncScriptLoaderHandleLoad(entry);\n            return;\n          } // if still loading then callback to observer queue\n\n\n          entry.observers[key] = function (entry) {\n            return _this3.asyncScriptLoaderHandleLoad(entry);\n          };\n\n          return;\n        }\n        /*\n         * hasn't started loading\n         * start the \"magic\"\n         * setup script to load and observers\n         */\n\n\n        var observers = {};\n\n        observers[key] = function (entry) {\n          return _this3.asyncScriptLoaderHandleLoad(entry);\n        };\n\n        SCRIPT_MAP[scriptURL] = {\n          loaded: false,\n          observers: observers\n        };\n        var script = document.createElement(\"script\");\n        script.src = scriptURL;\n        script.async = true;\n\n        if (scriptId) {\n          script.id = scriptId;\n        }\n\n        var callObserverFuncAndRemoveObserver = function callObserverFuncAndRemoveObserver(func) {\n          if (SCRIPT_MAP[scriptURL]) {\n            var mapEntry = SCRIPT_MAP[scriptURL];\n            var observersMap = mapEntry.observers;\n\n            for (var obsKey in observersMap) {\n              if (func(observersMap[obsKey])) {\n                delete observersMap[obsKey];\n              }\n            }\n          }\n        };\n\n        if (callbackName && typeof window !== \"undefined\") {\n          window[callbackName] = function () {\n            return _this3.asyncScriptLoaderTriggerOnScriptLoaded();\n          };\n        }\n\n        script.onload = function () {\n          var mapEntry = SCRIPT_MAP[scriptURL];\n\n          if (mapEntry) {\n            mapEntry.loaded = true;\n            callObserverFuncAndRemoveObserver(function (observer) {\n              if (callbackName) {\n                return false;\n              }\n\n              observer(mapEntry);\n              return true;\n            });\n          }\n        };\n\n        script.onerror = function () {\n          var mapEntry = SCRIPT_MAP[scriptURL];\n\n          if (mapEntry) {\n            mapEntry.errored = true;\n            callObserverFuncAndRemoveObserver(function (observer) {\n              observer(mapEntry);\n              return true;\n            });\n          }\n        };\n\n        document.body.appendChild(script);\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        // Remove tag script\n        var scriptURL = this.__scriptURL;\n\n        if (options.removeOnUnmount === true) {\n          var allScripts = document.getElementsByTagName(\"script\");\n\n          for (var i = 0; i < allScripts.length; i += 1) {\n            if (allScripts[i].src.indexOf(scriptURL) > -1) {\n              if (allScripts[i].parentNode) {\n                allScripts[i].parentNode.removeChild(allScripts[i]);\n              }\n            }\n          }\n        } // Clean the observer entry\n\n\n        var mapEntry = SCRIPT_MAP[scriptURL];\n\n        if (mapEntry) {\n          delete mapEntry.observers[this.asyncScriptLoaderGetScriptLoaderID()];\n\n          if (options.removeOnUnmount === true) {\n            delete SCRIPT_MAP[scriptURL];\n          }\n        }\n      };\n\n      _proto.render = function render() {\n        var globalName = options.globalName; // remove asyncScriptOnLoad from childProps\n\n        var _this$props = this.props,\n            asyncScriptOnLoad = _this$props.asyncScriptOnLoad,\n            forwardedRef = _this$props.forwardedRef,\n            childProps = _objectWithoutPropertiesLoose(_this$props, [\"asyncScriptOnLoad\", \"forwardedRef\"]); // eslint-disable-line no-unused-vars\n\n\n        if (globalName && typeof window !== \"undefined\") {\n          childProps[globalName] = typeof window[globalName] !== \"undefined\" ? window[globalName] : undefined;\n        }\n\n        childProps.ref = forwardedRef;\n        return createElement(WrappedComponent, childProps);\n      };\n\n      return AsyncScriptLoader;\n    }(Component); // Note the second param \"ref\" provided by React.forwardRef.\n    // We can pass it along to AsyncScriptLoader as a regular prop, e.g. \"forwardedRef\"\n    // And it can then be attached to the Component.\n\n\n    var ForwardedComponent = forwardRef(function (props, ref) {\n      return createElement(AsyncScriptLoader, _extends({}, props, {\n        forwardedRef: ref\n      }));\n    });\n    ForwardedComponent.displayName = \"AsyncScriptLoader(\" + wrappedComponentName + \")\";\n    ForwardedComponent.propTypes = {\n      asyncScriptOnLoad: PropTypes.func\n    };\n    return hoistStatics(ForwardedComponent, WrappedComponent);\n  };\n}","import ReCAPTCHA from \"./recaptcha\";\nimport makeAsyncScriptLoader from \"react-async-script\";\n\nfunction getOptions() {\n  return typeof window !== \"undefined\" && window.recaptchaOptions || {};\n}\n\nfunction getURL() {\n  var dynamicOptions = getOptions();\n  var lang = dynamicOptions.lang ? \"&hl=\" + dynamicOptions.lang : \"\";\n  var hostname = dynamicOptions.useRecaptchaNet ? \"recaptcha.net\" : \"www.google.com\";\n  return \"https://\" + hostname + \"/recaptcha/api.js?onload=\" + callbackName + \"&render=explicit\" + lang;\n}\n\nvar callbackName = \"onloadcallback\";\nvar globalName = \"grecaptcha\";\nvar initialOptions = getOptions();\nexport default makeAsyncScriptLoader(getURL, {\n  callbackName: callbackName,\n  globalName: globalName,\n  removeOnUnmount: initialOptions.removeOnUnmount || false\n})(ReCAPTCHA);","import RecaptchaWrapper from \"./recaptcha-wrapper\";\nimport ReCAPTCHA from \"./recaptcha\";\nexport default RecaptchaWrapper;\nexport { ReCAPTCHA };"],"sourceRoot":""}