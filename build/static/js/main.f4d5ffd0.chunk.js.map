{"version":3,"sources":["constants/actionTypes.js","utils/helper/helperFunctions.js","actions/lotteryActions.js","actions/appStatusAction.js","Components/AppCommon/loading/LoadingMessage.js","Components/AppCommon/flash/FlashMessage.js","Components/AppCommon/flash/FlashMessageList.js","Layout/AppMain/index.js","reducers/authReducer.js","data/default.js","rootReducer.js","reducers/appStatusReducer.js","reducers/lotteryReducer.js","reducers/myReducer.js","reducers/pageReducer.js","reducers/flashMessageReducer.js","reducers/loadingMessageReducer.js","index.js","config/configureStore.js","actions/authActions.js","services/request.js","utils/axios/setAuthorizationToken.js","actions/flashMessageAction.js","actions/loadingMessageAction.js","actions/requestAction.js","constants/messages.js"],"names":["__webpack_require__","d","__webpack_exports__","ADD_FLASH_MESSAGE","DELETE_FLASH_MESSAGE","ADD_LOADING_MESSAGE","DELETE_LOADING_MESSAGE","SET_AUTH","SET_EVENTS","SET_APP_SETTINGS","SET_LOTTERY_WINNERS","SET_LOTTERY_SLOT","SET_LOTTERY_PLAYERS","ADD_LOTTERY_PLAYER","SET_LOTTERY_DATA","SET_MODAL","SET_SETTINGS","SET_CURRENCIES","SET_USER","SET_LOTTERY_PICKED_NUMBERS","SET_LAST_SLOT","SET_PLAYED_GAMES","SET_TRANSACTIONS","SET_WITHDRAW_REQUESTS","SET_PAGE","ADD_TO_ROOT_CSS_CLASS_LIST","REMOVE_FROM_ROOT_CSS_CLASS_LIST","UPDATE_BROWSE_HISTORY","getEnv","getCodeMessage","generateRandomLotteryNumber","getFirstEmptyPosition","isNumberPickedCorrectly","findSetting","inAppCoin","inCurrency","inCoin","getBySlug","_constants_messages__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_2__","key","process","errorCode","MESSAGES","ERR_UNKNOWN","lotteryNumber","length","randNumber","Math","floor","random","indexOf","push","pickedNumbers","firstEmptyKey","_","item","bool","settings","coins","arguments","undefined","amountInCurrency","parseFloat","withUnit","currencies","JSON","parse","localStorage","getItem","appCurrency","o","appCurrencyDetail","currency","value","value_in_app_coin","toFixed","err","amountInCoin","collection","slug","setLotteryWinners","setLotterySlot","setLotteryPlayers","addLotterySlotPlayer","setLastSlot","setLotteryPickedNumbers","setLotteryData","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_0__","payload","type","lastSlot","setEvents","setAppSettings","setModal","setCurrencies","setSettings","addToRootCssClassList","removeFromRootCssClassList","updateBrowseHistory","events","modal","cssClass","data","connect","state","isLoading","loadingMessageReducer","loadingMessage","props","_props$isLoading","react_default","a","createElement","className","react_loading_default","color","height","width","delay","FlashMessage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setTimeout","deleteFlashMessage","message","id","_this$props$message","text","classnames","alert-success","alert-danger","Component","FlashMessageList","messages","map","flash_FlashMessage","flashMessageReducer","Home","lazy","Promise","all","e","then","bind","My","Page","AppMain","_this2","_isMounted","setState","bootstrap","unlisten","history","listen","location","action","_this3","makeRequest","request","Settings","query","LOGGING","res","errorData","Currencies","Lottery","slots","last","winners","getActive","participants","rootCssClassList","appStatus","react","join","fallback","react_loaders_default","react_router","exact","path","component","loading_LoadingMessage","withRouter","auth","authReducer","appStatusReducer","initialState","isAuthenticated","user","DEFAULT_APP_STATUS","browseHistory","locations","autoTasks","DEFAULT_LOTTERY_STATE","meta","links","slot","players","result","DEFAULT_MY_STATE","playedGames","transactions","profile","withdrawRequests","DEFAULT_PAGE_STATE","pages","combineReducers","scope","isVerified","verified","setItem","stringify","isEmpty","objectSpread","concat","toConsumableArray","newClassList","index","splice","shift","lotteryReducer","myReducer","pageReducer","shortid","generate","findIndex","slice","store","jwtToken","createStore","rootReducer","compose","applyMiddleware","thunk","window","devToolsExtension","f","rootElement","document","getElementById","decodedToken","jwt_decode","exp","Date","getTime","setAuthorizationToken","dispatch","setAuth","removeItem","userId","setUser","ReactDOM","render","es","react_router_dom","io","require","Echo","broadcaster","host","headers","Authorization","channel","console","log","participant","private","logout","_utils_axios_setAuthorizationToken__WEBPACK_IMPORTED_MODULE_0__","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_1__","_requestAction__WEBPACK_IMPORTED_MODULE_2__","_services_request__WEBPACK_IMPORTED_MODULE_3__","_flashMessageAction__WEBPACK_IMPORTED_MODULE_4__","_utils_helper_helperFunctions__WEBPACK_IMPORTED_MODULE_5__","_constants_messages__WEBPACK_IMPORTED_MODULE_6__","Auth","isSilent","addFlashMessage","LOGOUT_SUCCESS","axios__WEBPACK_IMPORTED_MODULE_0__","_utils_helper_helperFunctions__WEBPACK_IMPORTED_MODULE_1__","API_BASE_URL","requests","url","userData","axios","method","crossDomain","Content-Type","Accept","login","loginAsGuest","register","forgotPassword","resetPassword","Users","get","create","update","updateMultiple","deleteMultiple","Permissions","Me","updateProfile","play","getPlayedGames","getTransactions","getWithdrawRequests","createWithdrawRequest","cancelWithdrawRequest","Coinbase","createCharge","Pages","show","ContactFormEntry","axios__WEBPACK_IMPORTED_MODULE_0___default","n","token","defaults","common","deleteLoadingMessage","apiCallFunction","options","addLoadingMessage","resolve","reject","response","responseData","successCode","handleSuccessResponseData","error","ERR_TOKEN_EXPIRED","ERR_TOKEN_INVALID","ERR_TOKEN_USER_NOT_FOUND","handleErrorResponseData","LOADING_USER_CHECK","UPDATING","SAVING","REFRESHING","REGISTERING","VERIFYING","SENDING_EMAIL","LOGIN_SUCCESS","SAVED","UPDATED","VERIFIED","FORGOT_EMAIL_SENT","PASSWORD_UPDATED","USER_REGISTERED","VERIFICATION_EMAIL_SENT","ERR_VALIDATION_FAILED","ERR_ABN_INVALID","ERR_ABN_REQUIRED","ERR_BUSINESS_NAME_REQUIRED","ERR_EMAIL_ALREADY_EXIST","ERR_EMAIL_INVALID","ERR_EMAIL_REQUIRED","ERR_FIRST_NAME_REQUIRED","ERR_LAST_NAME_REQUIRED","ERR_PASSWORD_CONFIRM_NOT_MATCHING","ERR_PASSWORD_INVALID","ERR_PASSWORD_REQUIRED","ERR_PHONE_NUMBER_REQUIRED","ERR_PHONE_NUMBER_INVALID","ERR_URL_INVALID","ERR_URL_REQUIRED","ERR_INVALID_CREDENTIALS","ERR_TOKEN_NOT_PROVIDED","ERR_INVALID_REQUEST","ERR_DATABASE","ERR_MODEL_NOT_FOUND","ERR_METHOD_NOT_ALLOWED","ERR_NOT_FOUND","ERR_RESTRICTED","ERR_MULTIPLE_BUSINESS","ERR_LOGOUT","ERR_LOCKED"],"mappings":"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","file":"static/js/main.f4d5ffd0.chunk.js","sourcesContent":["export const ADD_FLASH_MESSAGE = \"ADD_FLASH_MESSAGE\";\nexport const DELETE_FLASH_MESSAGE = \"DELETE_FLASH_MESSAGE\";\nexport const ADD_LOADING_MESSAGE = \"ADD_LOADING_MESSAGE\";\nexport const DELETE_LOADING_MESSAGE = \"DELETE_LOADING_MESSAGE\";\n\nexport const SET_AUTH = \"SET_AUTH\";\nexport const SET_EVENTS = \"SET_EVENTS\";\nexport const SET_APP_SETTINGS = \"SET_APP_SETTINGS\";\nexport const SET_LOTTERY_WINNERS = \"SET_LOTTERY_WINNERS\";\nexport const SET_LOTTERY_SLOT = \"SET_LOTTERY_SLOT\";\nexport const SET_LOTTERY_PLAYERS = \"SET_LOTTERY_PLAYERS\";\nexport const ADD_LOTTERY_PLAYER = \"ADD_LOTTERY_PLAYER\";\nexport const SET_LOTTERY_DATA = \"SET_LOTTERY_DATA\";\nexport const SET_MODAL = \"SET_MODAL\";\nexport const SET_SETTINGS = \"SET_SETTINGS\";\nexport const SET_CURRENCIES = \"SET_CURRENCIES\";\nexport const SET_USER = \"SET_USER\";\nexport const SET_LOTTERY_PICKED_NUMBERS = \"SET_LOTTERY_PICKED_NUMBERS\";\nexport const SET_LAST_SLOT = \"SET_LAST_SLOT\";\nexport const SET_PLAYED_GAMES = \"SET_PLAYED_GAMES\";\nexport const SET_TRANSACTIONS = \"SET_TRANSACTIONS\";\nexport const SET_WITHDRAW_REQUESTS = \"SET_WITHDRAW_REQUESTS\";\nexport const SET_PAGE = \"SET_PAGE\";\nexport const ADD_TO_ROOT_CSS_CLASS_LIST = \"ADD_TO_ROOT_CSS_CLASS_LIST\";\nexport const REMOVE_FROM_ROOT_CSS_CLASS_LIST = \"REMOVE_FROM_ROOT_CSS_CLASS_LIST\";\nexport const UPDATE_BROWSE_HISTORY = \"UPDATE_BROWSE_HISTORY\";\n\n","import {MESSAGES} from \"../../constants/messages\";\nimport Cookies from 'universal-cookie';\nimport * as _ from \"lodash\";\n\n/*\n==========================================================================\nApp Helper Functions\n==========================================================================\n */\n/**\n * This is a wrapper function to get the env variable without using the\n * prefix REACT_APP_\n *\n * @param key\n * @return {string}\n */\nexport function getEnv(key) {\n    return process.env['REACT_APP_' + key];\n}\n\n/**\n * Transform 'slug_string' or 'camelCaseString' or 'any type of string' to 'Capitalized Words'\n *\n * @param string\n * @returns {string}\n */\nexport function toCapitalizedWords(string) {\n    const newString = string.replace(/([A-Z])/g, ' $1')\n        .replace(/([_])/g, ' ');\n\n    return firstOfEachWordToUppercase(newString);\n}\n\n/**\n * Capitalize first letter of each words in a string\n *\n * @param str\n * @returns {string}\n */\nexport function firstOfEachWordToUppercase(str) {\n    let array = str.split(' ');\n    let newArray = [];\n\n    for (let x = 0; x < array.length; x++) {\n        newArray.push(array[x].charAt(0).toUpperCase() + array[x].slice(1));\n    }\n\n    return newArray.join(' ');\n}\n\n/**\n * Format Date to user friendly string\n *\n * @param dateString\n * @returns {string}\n */\nexport function formatDate(dateString) {\n    let options = {day: 'numeric', month: 'long', year: 'numeric'};\n    let date = new Date(dateString.replace(' ', 'T'));\n\n    // return dateString;\n    return date.toLocaleString(\"en-US\", options);\n}\n\n/*\n==========================================================================\nData Handling Helper Functions\n==========================================================================\n */\n/**\n * Use error code to get error message\n *\n * @param errorCode\n * @return {string}\n */\nexport function getCodeMessage(errorCode) {\n    return MESSAGES[errorCode] ? MESSAGES[errorCode] : MESSAGES.ERR_UNKNOWN;\n}\n\n/*\n==========================================================================\nExtra Helper Functions\n==========================================================================\n */\n\nexport function getCookie(name, options = {}) {\n    const cookies = new Cookies();\n    return cookies.get(name, options);\n}\n\nexport function setCookie(name, value, options = {}) {\n    const cookies = new Cookies();\n    cookies.set(name, value, options);\n}\n\nexport function generateRandomLotteryNumber() {\n    let lotteryNumber = [];\n\n    while (lotteryNumber.length < 6) {\n        let randNumber = Math.floor(Math.random() * 100) + 1;\n\n        if (randNumber !== 100 && lotteryNumber.indexOf(randNumber) === -1) {\n            lotteryNumber.push(randNumber);\n        }\n    }\n\n    return lotteryNumber;\n}\n\nexport function getLotteryNumbersOnly(pickedNumbers) {\n    let arr = [];\n\n    _.forEach(pickedNumbers, function (item, key) {\n        if (typeof item === \"number\") {\n            arr.push(item);\n        }\n    });\n\n    return arr;\n}\n\nexport function inPickedNumbers(pickedNumbers, number) {\n    let numberKey = \"\";\n\n    _.forEach(pickedNumbers, function (item, key) {\n        if (item === number) {\n            return key;\n        }\n    });\n\n    return numberKey;\n}\n\nexport function getFirstEmptyPosition(pickedNumbers) {\n    let firstEmptyKey;\n\n    _.forEach(pickedNumbers, function (item, key) {\n        if (typeof item === 'undefined') {\n            if (typeof firstEmptyKey === 'undefined') {\n                firstEmptyKey = key;\n            }\n        }\n    });\n\n    return firstEmptyKey;\n}\n\nexport function isNumberPickedCorrectly(pickedNumbers) {\n    let bool = true;\n    _.forEach(pickedNumbers, function (item, key) {\n        if (bool) {\n            if (typeof item !== 'number') {\n                bool = false;\n            }\n        }\n    });\n\n    return bool;\n}\n\nexport function findSetting(settings, key) {\n    return _.find(settings, {key: key});\n}\n\nexport function checkIfWinner(lastWinners, id) {\n    return _.find(lastWinners, {id: id});\n}\n\nexport function isItemLoaded(item) {\n    if (typeof item === 'undefined' || item === null) {\n        return false;\n    }\n\n    return !!(Object.keys(item).length > 0);\n}\n\nexport function inAppCoin(coins, withUnit = true) {\n    let amountInCurrency = parseFloat(coins) + \" coins\";\n\n    // If coin not set or undefined or empty. Skip for 0\n    if (! coins && coins !== 0) {\n        return \"\";\n    }\n\n    return amountInCurrency;\n\n}\n\nexport function inCurrency(coins, withUnit = true) {\n    let amountInCurrency = 0;\n\n    // If coin not set or undefined or empty. Skip for 0\n    if (! coins && coins !== 0) {\n        return \"\";\n    }\n\n    try {\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\n        const settings = JSON.parse(localStorage.getItem(\"settings\"));\n        const appCurrency = _.find(settings, function(o) { return o.key === \"app_currency\"; });\n        const appCurrencyDetail = _.find(currencies, {currency: appCurrency.value});\n\n        amountInCurrency =  parseFloat((coins / appCurrencyDetail.value_in_app_coin).toFixed(9));\n        if (withUnit) {\n            amountInCurrency += \" \" + appCurrency.value;\n        }\n    } catch (err) {\n        // console.log('currency conversion error', err);\n    }\n\n\n    return amountInCurrency;\n\n}\n\nexport function inCoin(currency, withUnit = true) {\n    let amountInCoin = 0;\n\n    // If currency not set or undefined or empty. Skip for 0\n    if (! currency && currency !== 0) {\n        return \"\";\n    }\n\n\n    if (! currency) {\n        return \"\";\n    }\n\n    try {\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\n        const settings = JSON.parse(localStorage.getItem(\"settings\"));\n        const appCurrency = _.find(settings, function(o) { return o.key === \"app_currency\"; });\n        const appCurrencyDetail = _.find(currencies, {currency: appCurrency.value});\n\n        amountInCoin = (currency * appCurrencyDetail.value_in_app_coin);\n\n        if (withUnit) {\n            amountInCoin += \" coins\";\n        }\n    } catch (err) {\n        // console.log('currency conversion error', err);\n    }\n\n\n    return amountInCoin;\n\n}\n\n// stripslashes\nexport function stripslashes(str) {\n    return str.replace(/\\\\'/g,'\\'').replace(/\\\"/g,'\"').replace(/\\\\\\\\/g,'\\\\').replace(/\\\\0/g,'\\0');\n}\n\n// get by slug\nexport function getBySlug(collection, slug) {\n    let item = _.find(collection, {slug: slug});\n    return item ? item : {};\n}\n\nexport function toggleItemInArray(itemsArray, item) {\n    let arr = itemsArray && itemsArray.length > 0 ? itemsArray : [];\n\n    let index = arr.indexOf(item);\n    if (index > -1) {\n        arr.splice(index, 1);\n    } else {\n        arr.push(item);\n    }\n\n    return arr;\n}\n","import {\n    ADD_LOTTERY_PLAYER, SET_LAST_SLOT, SET_LOTTERY_DATA, SET_LOTTERY_PICKED_NUMBERS,\n    SET_LOTTERY_PLAYERS, SET_LOTTERY_RESULT,\n    SET_LOTTERY_SLOT,\n    SET_LOTTERY_WINNERS,\n} from \"../constants/actionTypes\";\n\nexport function setLotteryWinners(payload) {\n    return {\n        type: SET_LOTTERY_WINNERS,\n        payload\n    }\n}\n\nexport function setLotterySlot(payload) {\n    return {\n        type: SET_LOTTERY_SLOT,\n        payload\n    }\n}\n\nexport function setLotteryPlayers(payload) {\n    return {\n        type: SET_LOTTERY_PLAYERS,\n        payload\n    }\n}\n\nexport function addLotterySlotPlayer(payload) {\n    return {\n        type: ADD_LOTTERY_PLAYER,\n        payload\n    }\n}\n\nexport function setLastSlot(lastSlot) {\n    return {\n        type: SET_LAST_SLOT,\n        lastSlot\n    }\n}\n\nexport function setLotteryPickedNumbers(pickedNumbers) {\n    return {\n        type: SET_LOTTERY_PICKED_NUMBERS,\n        pickedNumbers\n    }\n}\n\nexport function setLotteryData(payload) {\n    return {\n        type: SET_LOTTERY_DATA,\n        payload\n    }\n}","import {\n    ADD_TO_ROOT_CSS_CLASS_LIST,\n    REMOVE_FROM_ROOT_CSS_CLASS_LIST,\n    SET_APP_SETTINGS,\n    SET_CURRENCIES,\n    SET_EVENTS,\n    SET_MODAL,\n    SET_SETTINGS,\n    UPDATE_BROWSE_HISTORY,\n} from \"../constants/actionTypes\";\n\nexport function setEvents(events) {\n    return {\n        type: SET_EVENTS,\n        events\n    }\n}\n\nexport function setAppSettings(settings) {\n    return {\n        type: SET_APP_SETTINGS,\n        settings\n    }\n}\n\nexport function setModal(modal) {\n    return {\n        type: SET_MODAL,\n        modal\n    }\n}\n\nexport function setCurrencies(currencies) {\n    return {\n        type: SET_CURRENCIES,\n        currencies\n    }\n}\n\nexport function setSettings(settings) {\n    return {\n        type: SET_SETTINGS,\n        settings\n    }\n}\n\nexport function addToRootCssClassList(cssClass) {\n\n    return {\n        type: ADD_TO_ROOT_CSS_CLASS_LIST,\n        payload: cssClass\n    }\n}\n\nexport function removeFromRootCssClassList(cssClass) {\n\n    return {\n        type: REMOVE_FROM_ROOT_CSS_CLASS_LIST,\n        payload: cssClass\n    }\n}\n\nexport function updateBrowseHistory(data) {\n\n    return {\n        type: UPDATE_BROWSE_HISTORY,\n        payload: data\n    }\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ReactLoading from \"react-loading\";\n\nconst LoadingMessage = (props) => {\n    const {isLoading = false, loadingMessage = null} = props;\n    const content = loadingMessage ? loadingMessage : 'Loading...';\n    return (\n        isLoading &&\n        <div className=\"loading-spinner-wrapper\">\n            <ReactLoading type='spin' color='lightgrey' height='40px' width='40px' delay={200}\n                          className=\"loading-spinner\"/>\n            {/*<div className=\"content\">{content}</div>*/}\n        </div>\n    );\n};\n\nLoadingMessage.propTypes = {\n    isLoading: PropTypes.bool,\n    loadingMessage: PropTypes.string,\n};\n\nfunction mapStateToProps(state) {\n    return {\n        isLoading: state.loadingMessageReducer.isLoading,\n        loadingMessage: state.loadingMessageReducer.loadingMessage,\n    }\n}\n\nexport default connect(mapStateToProps, {})(LoadingMessage);","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass FlashMessage extends Component {\n    constructor(props) {\n        super(props);\n        setTimeout(() => {\n            this.props.deleteFlashMessage(this.props.message.id);\n        }, 4000);\n    }\n\n    render() {\n        const {type, text} = this.props.message;\n        return (\n            <div className={classnames(\"alert alert-sticky custom-alert\", {\n                \"alert-success\": type === \"success\",\n                \"alert-danger\": type === \"error\"\n            })}>\n                {text}\n            </div>\n        )\n    }\n}\n\nFlashMessage.propTypes = {\n    message: PropTypes.object.isRequired,\n    deleteFlashMessage: PropTypes.func.isRequired\n};\n\nexport default FlashMessage;","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport FlashMessage from \"./FlashMessage\";\nimport {deleteFlashMessage} from \"../../../actions/flashMessageAction\";\n\nclass FlashMessageList extends Component {\n    render() {\n        const messages = this.props.messages.map(message =>\n            <FlashMessage key={message.id} message={message} deleteFlashMessage={this.props.deleteFlashMessage}/>\n        );\n\n        return (\n            <div className=\"flash-message\">{messages}</div>\n        )\n    }\n}\n\nFlashMessageList.propTypes = {\n    messages: PropTypes.array.isRequired,\n    deleteFlashMessage: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n        messages: state.flashMessageReducer\n    }\n}\n\nexport default connect(mapStateToProps, {deleteFlashMessage})(FlashMessageList);","import {Redirect, Route, withRouter} from 'react-router-dom';\nimport React, {Component, Fragment, lazy, Suspense} from 'react';\nimport Loader from 'react-loaders'\nimport {connect} from \"react-redux\";\nimport {makeRequest} from \"../../actions/requestAction\";\nimport request from \"../../services/request\";\nimport {MESSAGES} from \"../../constants/messages\";\nimport {setLastSlot, setLotteryPlayers, setLotterySlot, setLotteryWinners} from \"../../actions/lotteryActions\";\nimport {setCurrencies, setSettings, updateBrowseHistory} from \"../../actions/appStatusAction\";\nimport LoadingMessage from \"../../Components/AppCommon/loading/LoadingMessage\";\nimport FlashMessageList from \"../../Components/AppCommon/flash/FlashMessageList\";\n\n\nconst Home = lazy(() => import('../../Components/Home'));\nconst My = lazy(() => import('../../Components/My'));\nconst Page = lazy(() => import('../../Components/Page'));\n\nclass AppMain extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: false\n        }\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        this.setState({isLoading: true});\n        this._isMounted && this.bootstrap();\n\n        //Listen to browser history\n        this.unlisten = this.props.history.listen((location, action) => {\n            this.props.updateBrowseHistory({\n                location: location,\n            })\n        });\n    }\n\n    componentWillUnmount() {\n        this.unlisten();\n    }\n\n    bootstrap() {\n        // Get settings\n        this.props.makeRequest(request.Settings.all, {query: ''}, {message: MESSAGES.LOGGING}).then(\n            (res) => {\n                if (res.data) {\n                    this.props.setSettings(res.data);\n                }\n                this.setState({isLoading: false});\n            },\n            (errorData) => {\n                this.setState({isLoading: false});\n            }\n        );\n\n        // Get currencies\n        this.props.makeRequest(request.Currencies.all, {query: ''}, {message: MESSAGES.LOGGING}).then(\n            (res) => {\n                if (res.data) {\n                    this.props.setCurrencies(res.data);\n                }\n                this.setState({isLoading: false});\n            },\n            (errorData) => {\n                this.setState({isLoading: false});\n            }\n        );\n\n        // Get Last slot\n        this.props.makeRequest(request.Lottery.slots.last, {}, {message: MESSAGES.LOGGING}).then(\n            (res) => {\n                if (res.data) {\n                    this.props.setLastSlot(res.data);\n                }\n                this.setState({isLoading: false});\n            },\n            (errorData) => {\n                this.setState({isLoading: false});\n            }\n        );\n\n        // Get Winners\n        this.props.makeRequest(request.Lottery.slots.winners, {query: 'limit=12'}, {message: MESSAGES.LOGGING}).then(\n            (res) => {\n                if (res.data) {\n                    this.props.setLotteryWinners(res);\n                } else {\n                }\n            },\n            (errorData) => {\n                this.setState({isLoading: false});\n            }\n        );\n\n        // Get Active Slot\n        this.props.makeRequest(request.Lottery.slots.getActive, {}, {message: MESSAGES.LOGGING}).then(\n            (res) => {\n                if (res.data) {\n                    this.props.setLotterySlot(res.data);\n                    this.props.setLotteryPlayers(res.data.participants);\n                }\n            },\n            (errorData) => {\n                this.setState({isLoading: false});\n            }\n        );\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render () {\n        const {rootCssClassList} = this.props.appStatus;\n        return (\n            <Fragment>\n                <div className={rootCssClassList.join(' ')}>\n                <Suspense fallback={\n                    <div className=\"loader-container\">\n                        <div className=\"loader-container-inner\">\n                            <div className=\"text-center\">\n                                <Loader type=\"ball-grid-beat\"/>\n                            </div>\n                        </div>\n                    </div>\n                }>\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route exact path=\"/my/:slug?/:slug?\" component={My}/>\n                    <Route exact path=\"/:slug\" component={Page}/>\n                </Suspense>\n                    <LoadingMessage/>\n                    {/*<FlashMessageList/>*/}\n            </div>\n            </Fragment>\n        )\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        auth: state.authReducer,\n        appStatus: state.appStatusReducer\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps, {\n    makeRequest, setLastSlot, setCurrencies, setSettings, setLotteryWinners, setLotterySlot, setLotteryPlayers,\n    updateBrowseHistory\n})(AppMain));","import {SET_AUTH, SET_USER} from \"../constants/actionTypes\";\nimport {isEmpty} from \"lodash\";\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {}\n};\n\nexport default (state = initialState, action = {}) => {\n    switch (action.type) {\n        case SET_AUTH:\n            const user = action.payload && action.payload.user ? action.payload.user : {};\n            const scope = action.payload && action.payload.scope ? action.payload.scope : {};\n            const isVerified = user.verified ? user.verified : 0;\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            return {\n                isAuthenticated: !isEmpty(user),\n                isVerified: !!isVerified,\n                user: user,\n                scope: scope\n            };\n        case SET_USER:\n            localStorage.setItem(\"user\", JSON.stringify(action.user));\n            return {\n                ...state,\n                user: action.user,\n            };\n        default:\n            return state;\n    }\n}","export const DEFAULT_APP_STATUS = {\n    modal: null,\n    settings: [{}],\n    currencies: [{}],\n    rootCssClassList: [],\n    browseHistory: {\n        locations: [],\n        autoTasks: []\n    }\n};\n\nexport const DEFAULT_LOTTERY_STATE = {\n    winners: {\n        data: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\" ],\n        meta: {},\n        links: {}\n    },\n    slot: {\n    },\n    lastSlot: {\n        winners: []\n    },\n    players: {\n        data: []\n    },\n    result: []\n};\n\nexport const DEFAULT_MY_STATE = {\n    playedGames: {},\n    transactions: {},\n    profile: {},\n    withdrawRequests: {}\n};\n\nexport const DEFAULT_PAGE_STATE = {\n    pages: []\n};","import {combineReducers} from \"redux\";\nimport flashMessageReducer from \"./reducers/flashMessageReducer\";\nimport authReducer from \"./reducers/authReducer\";\nimport appStatusReducer from \"./reducers/appStatusReducer\";\nimport loadingMessageReducer from \"./reducers/loadingMessageReducer\";\nimport lotteryReducer from \"./reducers/lotteryReducer\";\nimport myReducer from \"./reducers/myReducer\";\nimport pageReducer from \"./reducers/pageReducer\";\n\nexport default combineReducers({\n    authReducer,\n    appStatusReducer,\n    lotteryReducer,\n    myReducer,\n    pageReducer,\n    flashMessageReducer,\n    loadingMessageReducer,\n});","import {DEFAULT_APP_STATUS} from \"../data/default\";\nimport {\n    ADD_TO_ROOT_CSS_CLASS_LIST, REMOVE_FROM_ROOT_CSS_CLASS_LIST, SET_CURRENCIES, SET_MODAL, SET_SETTINGS,\n    UPDATE_BROWSE_HISTORY,\n} from \"../constants/actionTypes\";\nimport * as _ from \"lodash\";\n\nexport default (state = DEFAULT_APP_STATUS, action = {}) => {\n    switch (action.type) {\n        case `${SET_MODAL}` :\n            return {\n                ...state,\n                modal: action.modal\n            };\n        case `${SET_CURRENCIES}` :\n            localStorage.setItem(\"currencies\", JSON.stringify(action.currencies));\n            return {\n                ...state,\n                currencies: action.currencies\n            };\n        case `${SET_SETTINGS}` :\n            localStorage.setItem(\"settings\", JSON.stringify(action.settings));\n            return {\n                ...state,\n                settings: action.settings\n            };\n        case `${ADD_TO_ROOT_CSS_CLASS_LIST}` :\n            return {\n                ...state,\n                rootCssClassList: [\n                    ...state.rootCssClassList,\n                    action.payload\n                ]\n            };\n        case `${REMOVE_FROM_ROOT_CSS_CLASS_LIST}` :\n            let newClassList = [...state.rootCssClassList];\n            let index = newClassList.indexOf(action.payload);\n\n            if (index > -1) {\n                newClassList.splice(index, 1);\n            }\n\n            return {\n                ...state,\n                rootCssClassList: newClassList\n            };\n        case `${UPDATE_BROWSE_HISTORY}` :\n            // update locations\n            let locations = [...state.browseHistory.locations];\n\n            if (locations.length > 15) {\n                locations.shift();\n            }\n\n            if (action.payload && action.payload.location) {\n                locations = locations.concat([action.payload.location]);\n            }\n\n            // update autoTasks\n            let autoTasks = [...state.browseHistory.autoTasks];\n            if (action.payload && action.payload.autoTasks) {\n                autoTasks = action.payload.autoTasks;\n            }\n\n            // update state\n            return {\n                ...state,\n                browseHistory: {\n                    locations: locations,\n                    autoTasks: autoTasks\n                }\n            };\n        default:\n            return state;\n    }\n}","import {DEFAULT_LOTTERY_STATE} from \"../data/default\";\nimport {\n    ADD_LOTTERY_PLAYER, SET_LOTTERY_PLAYERS, SET_LOTTERY_SLOT, SET_LOTTERY_WINNERS,\n    SET_LOTTERY_DATA, SET_LAST_SLOT, SET_LOTTERY_PICKED_NUMBERS\n} from \"../constants/actionTypes\";\n\nexport default (state = DEFAULT_LOTTERY_STATE, action = {}) => {\n    switch (action.type) {\n        case `${SET_LOTTERY_WINNERS}` :\n            return {\n                ...state,\n                winners: action.payload\n            };\n        case `${SET_LOTTERY_SLOT}` :\n            return {\n                ...state,\n                slot: action.payload\n            };\n        case `${SET_LOTTERY_PLAYERS}` :\n            return {\n                ...state,\n                players: action.payload\n            };\n        case `${ADD_LOTTERY_PLAYER}` :\n            return {\n                ...state,\n                players: {\n                    ...state.players,\n                    data: [\n                        action.payload,\n                        ...state.players.data\n                    ]\n                }\n            };\n        case `${SET_LOTTERY_DATA}` :\n            let data = {};\n\n            if (action.payload.lastSlot) {\n                data.lastSlot = action.payload.lastSlot;\n            }\n\n            if (action.payload.winners) {\n                data.winners = {\n                    ...state.winners,\n                    data: action.payload.winners\n                };\n            }\n\n            return {\n                ...state,\n                ...data\n            };\n        case `${SET_LAST_SLOT}` :\n            return {\n                ...state,\n                lastSlot: action.lastSlot\n            };\n        case `${SET_LOTTERY_PICKED_NUMBERS}` :\n            return {\n                ...state,\n                pickedNumbers: action.pickedNumbers\n            };\n        default:\n            return state;\n    }\n}","import {DEFAULT_MY_STATE} from \"../data/default\";\nimport {SET_PLAYED_GAMES, SET_TRANSACTIONS, SET_WITHDRAW_REQUESTS} from \"../constants/actionTypes\";\n\nexport default (state = DEFAULT_MY_STATE, action = {}) => {\n    switch (action.type) {\n        case `${SET_PLAYED_GAMES}` :\n            return {\n                ...state,\n                playedGames: action.payload\n            };\n        case `${SET_TRANSACTIONS}` :\n            return {\n                ...state,\n                transactions: action.payload\n            };\n        case `${SET_WITHDRAW_REQUESTS}` :\n            return {\n                ...state,\n                withdrawRequests: action.payload\n            };\n        default:\n            return state;\n    }\n}","import {DEFAULT_PAGE_STATE} from \"../data/default\";\nimport {SET_PAGE} from \"../constants/actionTypes\";\n\nexport default (state = DEFAULT_PAGE_STATE, action = {}) => {\n    switch (action.type) {\n        case `${SET_PAGE}` :\n            return {\n                ...state,\n                pages: [\n                    ...state.pages,\n                    action.payload.data\n                ]\n            };\n        default:\n            return state;\n    }\n}","import {ADD_FLASH_MESSAGE, DELETE_FLASH_MESSAGE} from \"../constants/actionTypes\";\nimport shortid from \"shortid\";\nimport {findIndex} from \"lodash\";\n\nexport default (state = [], action = {}) => {\n    switch (action.type) {\n\n        case ADD_FLASH_MESSAGE:\n            return [\n                // commenting this will show only one flash message at a time\n                // ...state,\n                {\n                    id: shortid.generate(),\n                    type: action.message.type,\n                    text: action.message.text\n                }\n            ];\n\n        case DELETE_FLASH_MESSAGE:\n            const index = findIndex(state, {id: action.id});\n            if (index >= 0) {\n                return [\n                    ...state.slice(0, index),\n                    ...state.slice(index + 1)\n                ];\n            }\n            return state;\n\n        default:\n            return state;\n    }\n}","import {ADD_LOADING_MESSAGE, DELETE_LOADING_MESSAGE} from \"../constants/actionTypes\";\n\nexport default (state = [], action = {}) => {\n    switch (action.type) {\n\n        case ADD_LOADING_MESSAGE:\n            return {\n                isLoading: true,\n                loadingMessage: action.loadingMessage\n            };\n\n        case DELETE_LOADING_MESSAGE:\n            return {\n                isLoading: false,\n                loadingMessage: null\n            };\n\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter } from 'react-router-dom';\nimport './assets/css/bootstrap.css';\nimport './assets/css/style.css';\nimport AppMain from './Layout/AppMain';\nimport configureStore from './config/configureStore';\nimport { Provider } from 'react-redux';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthorizationToken from \"./utils/axios/setAuthorizationToken\";\nimport {setAuth, setUser} from \"./actions/authActions\";\nimport Echo from 'laravel-echo';\nimport {\n    setLotterySlot, addLotterySlotPlayer, setLotteryPlayers,\n    setLotteryData\n} from \"./actions/lotteryActions\";\nimport {setCurrencies, setSettings} from \"./actions/appStatusAction\";\n\nlet jwtToken = '';\nexport const store = configureStore();\nconst rootElement = document.getElementById('root');\n\n// check if jwtToken exist in local storage and is valid\nif (localStorage.getItem(\"jwtToken\")) {\n    try {\n        const decodedToken = jwt_decode(localStorage.getItem(\"jwtToken\"));\n        if (decodedToken.exp > (new Date().getTime() / 1000)) {\n            jwtToken = localStorage.getItem(\"jwtToken\");\n            setAuthorizationToken(jwtToken);\n            store.dispatch(setAuth(decodedToken));\n        } else {\n            localStorage.removeItem(\"jwtToken\");\n            setAuthorizationToken(false);\n            store.dispatch(setAuth({}));\n        }\n    } catch (err) {\n        localStorage.removeItem(\"jwtToken\");\n        setAuthorizationToken(false);\n        store.dispatch(setAuth({}));\n    }\n}\n\n// set user\nlet userId = null;\nif (localStorage.getItem(\"user\")) {\n    try {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n        userId = user.id;\n        store.dispatch(setUser(user));\n    } catch (err) {\n    }\n}\n\n// set currencies\nif (localStorage.getItem(\"currencies\")) {\n    try {\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\n        store.dispatch(setCurrencies(currencies));\n    } catch (err) {\n    }\n}\n\n// set settings\nif (localStorage.getItem(\"settings\")) {\n    try {\n        const settings = JSON.parse(localStorage.getItem(\"settings\"));\n        store.dispatch(setSettings(settings));\n    } catch (err) {\n    }\n}\n\n\n\nconst renderApp = Component => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <HashRouter>\n                <Component />\n            </HashRouter>\n        </Provider>,\n        rootElement\n    );\n};\n\nrenderApp(AppMain);\n\nwindow.io = require('socket.io-client');\nwindow.Echo = new Echo({\n    broadcaster: 'socket.io',\n    host: \"http://krypttolotto.com\",\n    // host: window.location.hostname + ':6001',\n    auth: {\n        headers: {\n            'Authorization' : 'Bearer ' + jwtToken\n        }\n    }\n});\n\nwindow.Echo.channel('lottery')\n    .listen('LotterySlotCreatedEvent', (e) => {\n        console.log('lottery slot created event', e);\n        store.dispatch(setLotterySlot(e.data));\n        store.dispatch(setLotteryPlayers({data: []}));\n    }).listen('LotterySlotClosedEvent', (e) => {\n        console.log('Lottery Slot Closed Event', e);\n        store.dispatch(setLotteryData(e));\n    }).listen('ParticipantAddedEvent', (e) => {\n        let slot = e.data;\n        let participant = e.participant;\n        console.log('pae');\n        console.log(e);\n        store.dispatch(setLotterySlot(slot));\n        store.dispatch(addLotterySlotPlayer(participant));\n    });\n\nwindow.Echo.private('App.User.' + userId)\n    .listen('UserUpdateEvent', (e) => {\n        if (e.data && e.data.id) {\n            store.dispatch(setUser(e.data));\n        }\n    });","import {applyMiddleware, compose, createStore} from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../rootReducer\";\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer,\n      compose(\n          applyMiddleware(thunk),\n          window.devToolsExtension ? window.devToolsExtension() : f => f\n      ),\n  );\n}","import setAuthorizationToken from \"../utils/axios/setAuthorizationToken\";\nimport {SET_AUTH, SET_USER} from \"../constants/actionTypes\";\nimport {makeRequest} from \"./requestAction\";\nimport request from \"../services/request\";\nimport {addFlashMessage} from \"./flashMessageAction\";\nimport {getCodeMessage} from \"../utils/helper/helperFunctions\";\nimport {MESSAGES} from \"../constants/messages\";\n\nexport function setAuth(payload) {\n    return {\n        type: SET_AUTH,\n        payload\n    }\n}\n\nexport function setUser(user) {\n    return {\n        type: SET_USER,\n        user\n    }\n}\n\n\nexport function logout() {\n    return dispatch => {\n        dispatch(makeRequest(request.Auth.logout, {}, { isSilent: true }));\n\n        localStorage.removeItem(\"jwtToken\");\n        setAuthorizationToken(false);\n        dispatch(setAuth({}));\n        dispatch(addFlashMessage({type: \"success\", text: getCodeMessage(MESSAGES.LOGOUT_SUCCESS)}));\n    }\n}","import * as axios from \"axios\";\nimport {getEnv} from \"../utils/helper/helperFunctions\";\n\nconst API_BASE_URL = getEnv('API_BASE_URL');\n/**\n * This handles all the api request. If REACT_APP_ENV = mock-api, then the data\n * is faked and returned as async promise object using mock data.\n *\n * To know what type of data is expected by the application, look at the mock data.\n *\n * @param type\n * @param url\n * @param userData\n */\nconst requests = (type, url, userData = {}) => {\n    if (getEnv('ENV') === 'mock-api') {\n        // return mockApi(type, url, userData = {});\n    } else {\n        console.log(type, url, userData);\n        return axios({\n            method: type,\n            url: url,\n            data: userData,\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n        });\n    }\n};\n\n/**\n * Handles all Auth related requests\n */\nconst Auth = {\n    login: (data) =>\n        requests('POST', API_BASE_URL + \"/login\", data),\n    loginAsGuest: (data) =>\n        requests('POST', API_BASE_URL + \"/register-as-guest\", data),\n    logout: () =>\n        requests('PUT', API_BASE_URL + \"/logout\"),\n    register: (data) =>\n        requests('POST', API_BASE_URL + \"/register\", data),\n    forgotPassword: (data) =>\n        requests('POST', API_BASE_URL + \"/forgot-password\", data),\n    resetPassword: (data) =>\n        requests('PUT', API_BASE_URL + \"/reset-password\", data),\n};\n\n/**\n * Handles all Business related requests\n */\nconst Users = {\n    all: (query) =>\n        requests('GET', API_BASE_URL + \"/users?\" + query),\n    get: (id) =>\n        requests('GET',API_BASE_URL + `/users/${id}`),\n    create: (data) =>\n        requests('POST', API_BASE_URL + \"/users\", data),\n    update: (data) =>\n        requests('PUT', API_BASE_URL + \"/users/\" + data.id, data),\n    updateMultiple: (data) =>\n        requests('PUT', API_BASE_URL + \"/users\", data),\n    deleteMultiple: (data) =>\n        requests('DELETE', API_BASE_URL + \"/users\", data),\n};\n\n/**\n * Handles all Permissions related requests\n */\nconst Permissions = {\n    all: (query) =>\n        requests('GET', API_BASE_URL + \"/permissions?\" + query),\n    get: (id) =>\n        requests('GET',API_BASE_URL + `/permissions/${id}`),\n    create: (data) =>\n        requests('POST', API_BASE_URL + \"/permissions\", data),\n    update: (data) =>\n        requests('PUT', API_BASE_URL + \"/permissions/\" + data.id, data),\n    deleteMultiple: (data) =>\n        requests('DELETE', API_BASE_URL + \"/permissions\", data),\n};\n\n/**\n * Handles all Business related requests\n */\nconst Roles = {\n    all: (query) =>\n        requests('GET', API_BASE_URL + \"/roles?\" + query),\n    get: (id) =>\n        requests('GET',API_BASE_URL + `/roles/${id}`),\n    create: (data) =>\n        requests('POST', API_BASE_URL + \"/roles\", data),\n    update: (data) =>\n        requests('PUT', API_BASE_URL + \"/roles/\" + data.id, data),\n    deleteMultiple: (data) =>\n        requests('DELETE', API_BASE_URL + \"/roles\", data),\n};\n\n/**\n * Handles all Settings related requests\n */\nconst Settings = {\n    all: (data) =>\n        requests('GET', API_BASE_URL + \"/settings?\" + data.query),\n};\n\n/**\n * Handles all Currencies related requests\n */\nconst Currencies = {\n    all: (data) =>\n        requests('GET', API_BASE_URL + \"/currencies?\" + data.query),\n};\n\n/**\n * Handles all Currencies related requests\n */\nconst Me = {\n    get: (data) =>\n        requests('GET', API_BASE_URL + \"/me\"),\n    updateProfile: (data) =>\n        requests('PUT', API_BASE_URL + \"/me/profile/update\", data),\n    play: (data) =>\n        requests('POST', API_BASE_URL + \"/me/play\", data),\n    getPlayedGames: (data) =>\n        requests('GET', API_BASE_URL + \"/me/played-games\"),\n    getTransactions: (data) =>\n        requests('GET', API_BASE_URL + \"/me/transactions\"),\n    getWithdrawRequests: (data) =>\n        requests('GET', API_BASE_URL + \"/me/withdraw-requests\"),\n    createWithdrawRequest: (data) =>\n        requests('POST', API_BASE_URL + \"/me/create-withdraw-request\", data),\n    cancelWithdrawRequest: (data) =>\n        requests('PUT', API_BASE_URL + \"/me/cancel-withdraw-request/\" + data.id),\n};\n\n/**\n * Handles all Coinbase related requests\n */\nconst Coinbase = {\n    createCharge: (data) =>\n        requests('POST', API_BASE_URL + \"/coinbase/create-charge\", data),\n};\n\n/**\n * Handles all Lottery related requests\n */\nconst Lottery = {\n    slots: {\n        all: (query) =>\n            requests('GET', API_BASE_URL + \"/lottery/slots?\" + query),\n        get: (data) =>\n            requests('GET',API_BASE_URL + `/lottery/slots/${data.id}?` + data.query),\n        create: (data) =>\n            requests('POST', API_BASE_URL + \"/lottery/slots\", data),\n        update: (data) =>\n            requests('PUT', API_BASE_URL + \"/lottery/slots/\" + data.id, data),\n        winners: (data) =>\n            requests('GET',API_BASE_URL + `/lottery/slots/winners?` + data.query),\n        getActive: (data) =>\n            requests('GET', API_BASE_URL + `/lottery/slots/3?with=participants&is_active=true`),\n        last: (data) =>\n            requests('GET',API_BASE_URL + `/lottery/slots/last`),\n    }\n};\n\n/**\n * Handles all pages related requests\n */\nconst Pages = {\n    get: (data) =>\n        requests('GET', API_BASE_URL + \"/pages\"),\n    show: (data) =>\n        requests('GET', API_BASE_URL + '/pages/' + data.slug)\n};\n\n/**\n * Handles all Contact form related requests\n */\nconst ContactFormEntry = {\n    create: (data) =>\n        requests('POST', API_BASE_URL + \"/contact\", data),\n};\n\nexport default {\n    Auth,\n    Users,\n    Permissions,\n    Me,\n    Coinbase,\n    Settings,\n    Currencies,\n    Lottery,\n    Pages,\n    ContactFormEntry\n};\n","import axios from \"axios\";\n\nexport default function setAuthorizationToken(token) {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n}","import {ADD_FLASH_MESSAGE, DELETE_FLASH_MESSAGE} from \"../constants/actionTypes\";\n\nexport function addFlashMessage(message) {\n    return {\n        type: ADD_FLASH_MESSAGE,\n        message\n    }\n}\n\nexport function deleteFlashMessage(id) {\n    return {\n        type: DELETE_FLASH_MESSAGE,\n        id\n    }\n}","import {ADD_LOADING_MESSAGE, DELETE_LOADING_MESSAGE} from \"../constants/actionTypes\";\n\nexport function addLoadingMessage(loadingMessage = null) {\n    return {\n        type: ADD_LOADING_MESSAGE,\n        loadingMessage\n    }\n}\n\nexport function deleteLoadingMessage() {\n    return {\n        type: DELETE_LOADING_MESSAGE\n    }\n}","import setAuthorizationToken from \"../utils/axios/setAuthorizationToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n    setEvents, setAppSettings\n} from \"./appStatusAction\";\nimport {addFlashMessage} from \"./flashMessageAction\";\nimport {logout, setAuth} from \"./authActions\";\nimport {getCodeMessage} from \"../utils/helper/helperFunctions\";\nimport {MESSAGES} from \"../constants/messages\";\nimport {addLoadingMessage, deleteLoadingMessage} from \"./loadingMessageAction\";\n\n\nexport function makeRequest(apiCallFunction, data = {}, options={isSilent: false, message: 'Loading...'}) {\n    return dispatch => {\n        if (! options.isSilent) dispatch(addLoadingMessage(options.message));\n        return new Promise((resolve, reject) => {\n\n            apiCallFunction(data).then(\n                (response) => {\n                    if (! options.isSilent) dispatch(deleteLoadingMessage());\n                    if (response && response.data) {\n                        handleSuccessResponseData(dispatch, response.data, options.isSilent);\n                        resolve(response.data);\n                    }\n                    if (response) {\n                        resolve(response.data);\n                    }\n                },\n                (error) => {\n                    if (! options.isSilent) dispatch(deleteLoadingMessage());\n                    if (error && error.response && error.response.data) {\n                        handleErrorResponseData(dispatch, error.response.data, options.isSilent);\n                        reject(error.response.data)\n                    }\n                }\n            );\n\n        });\n    }\n}\n\nexport function handleSuccessResponseData(dispatch, responseData, isSilent) {\n    const token = responseData.token;\n    if (token) {\n        localStorage.setItem(\"jwtToken\", token);\n        setAuthorizationToken(token);\n        dispatch(setAuth(jwt_decode(token)));\n    }\n\n    if (responseData.events) dispatch(setEvents(responseData.events));\n\n    if (responseData.settings) dispatch(setAppSettings(responseData.settings));\n\n    if (responseData.successCode && responseData.successCode !== 'FETCHED' && responseData.successCode !== 'TRACKED' && !isSilent) {\n        dispatch(addFlashMessage({type: \"success\", text: getCodeMessage(responseData.successCode)}))\n    }\n}\n\nexport function handleErrorResponseData(dispatch, errorData, isSilent) {\n    if (errorData.errorCode) {\n        if (\n            getCodeMessage(errorData.errorCode) === MESSAGES.ERR_TOKEN_EXPIRED ||\n            getCodeMessage(errorData.errorCode) === MESSAGES.ERR_TOKEN_INVALID ||\n            getCodeMessage(errorData.errorCode) === MESSAGES.ERR_TOKEN_USER_NOT_FOUND\n        ) {\n            dispatch(logout());\n        }\n\n        if (!isSilent) {\n            dispatch(addFlashMessage({type: \"error\", text: getCodeMessage(errorData.errorCode)}));\n        }\n    }\n}\n","//Form Validation Error Codes\nexport const MESSAGES = {\n    // Loading Message\n    LOADING_USER_CHECK: \"Checking if user already exist...\",\n    UPDATING: \"Updating...\",\n    SAVING: \"Saving...\",\n    REFRESHING: \"Refreshing...\",\n    REGISTERING: \"Creating your account...\",\n    LOGGING: \"Logging...\",\n    VERIFYING: \"Verifying...\",\n    SENDING_EMAIL: \"Sending email...\",\n\n    // Success Message\n    LOGIN_SUCCESS: \"Logged in successfully\",\n    LOGOUT_SUCCESS: \"Logged out successfully\",\n    SAVED: \"Saved\",\n    UPDATED: \"Updated\",\n    VERIFIED: \"User verified successfully\",\n    FORGOT_EMAIL_SENT: \"Forgot password email sent\",\n    PASSWORD_UPDATED: \"Password updated successfully\",\n    USER_REGISTERED: \"Registered successfully\",\n    VERIFICATION_EMAIL_SENT: \"Verification email sent\",\n\n    // Error Messages\n    ERR_VALIDATION_FAILED: \"Validation Failed\",\n    ERR_ABN_INVALID: \"ABN is invalid\",\n    ERR_ABN_REQUIRED: \"ABN is required\",\n    ERR_BUSINESS_NAME_REQUIRED: \"Business name is required\",\n    ERR_EMAIL_ALREADY_EXIST: \"User with given email is already registered\",\n    ERR_EMAIL_INVALID: \"Invalid Email\",\n    ERR_EMAIL_REQUIRED: \"Email is required\",\n    ERR_FIRST_NAME_REQUIRED: \"First Name is required\",\n    ERR_LAST_NAME_REQUIRED: \"Last Name is required\",\n    ERR_PASSWORD_CONFIRM_NOT_MATCHING: \"Password and Confirm Password must match\",\n    ERR_PASSWORD_INVALID: \"Password is invalid\",\n    ERR_PASSWORD_REQUIRED: \"Password is required\",\n    ERR_PHONE_NUMBER_REQUIRED: \"Phone Number is required\",\n    ERR_PHONE_NUMBER_INVALID: \"Phone Number is invalid\",\n    ERR_URL_INVALID: \"Url is invalid\",\n    ERR_URL_REQUIRED: \"Url is required\",\n\n    //Login Error Codes\n    ERR_INVALID_CREDENTIALS: \"Invalid Credentials\",\n    ERR_TOKEN_EXPIRED: \"User has been logged out due to inactivity\",\n    ERR_TOKEN_INVALID: \"Token invalid\",\n    ERR_TOKEN_NOT_PROVIDED: \"Token not provided\",\n    ERR_TOKEN_USER_NOT_FOUND: \"User not found\",\n\n    //Page Error Codes\n    ERR_INVALID_REQUEST: \"Invalid Request\",\n    ERR_DATABASE: \"Database error\",\n    ERR_MODEL_NOT_FOUND: \"Couldn't find the user\",\n    ERR_METHOD_NOT_ALLOWED: \"Request method not allowed\",\n    ERR_NOT_FOUND: \"Couldn't find the page\",\n    ERR_RESTRICTED: \"You don't have enough permission to view this page\",\n    ERR_MULTIPLE_BUSINESS: \"You can't have multiple business\",\n\n    //Unknown Error Codes\n    ERR_UNKNOWN: \"Something went wrong\",\n    ERR_LOGOUT: \"Failed to logout\",\n    ERR_LOCKED: \"Locked\",\n};"],"sourceRoot":""}