{"version":3,"sources":["constants/actionTypes.js","actions/lotteryActions.js","actions/appStatusAction.js","Components/AppCommon/loading/LoadingMessage.js","Layout/AppMain/index.js","reducers/authReducer.js","data/default.js","rootReducer.js","reducers/appStatusReducer.js","reducers/lotteryReducer.js","reducers/myReducer.js","reducers/pageReducer.js","reducers/flashMessageReducer.js","reducers/loadingMessageReducer.js","index.js","config/configureStore.js","services/request.js","utils/axios/setAuthorizationToken.js","actions/authActions.js","actions/flashMessageAction.js","actions/loadingMessageAction.js","actions/requestAction.js","constants/messages.js","actions/pageActions.js","utils/helper/helperFunctions.js"],"names":["__webpack_require__","d","__webpack_exports__","ADD_FLASH_MESSAGE","DELETE_FLASH_MESSAGE","ADD_LOADING_MESSAGE","DELETE_LOADING_MESSAGE","SET_AUTH","SET_EVENTS","SET_APP_SETTINGS","SET_LOTTERY_WINNERS","SET_LOTTERY_SLOT","SET_LOTTERY_PLAYERS","ADD_LOTTERY_PLAYER","SET_LOTTERY_DATA","SET_MODAL","SET_SETTINGS","SET_CURRENCIES","SET_USER","SET_LOTTERY_PICKED_NUMBERS","SET_LAST_SLOT","SET_PLAYED_GAMES","SET_TRANSACTIONS","SET_WITHDRAW_REQUESTS","SET_PAGE","ADD_TO_ROOT_CSS_CLASS_LIST","REMOVE_FROM_ROOT_CSS_CLASS_LIST","UPDATE_BROWSE_HISTORY","setLotteryWinners","setLotterySlot","setLotteryPlayers","addLotterySlotPlayer","setLastSlot","setLotteryPickedNumbers","setLotteryData","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_0__","payload","type","lastSlot","pickedNumbers","setEvents","setAppSettings","setModal","setCurrencies","setSettings","addToRootCssClassList","removeFromRootCssClassList","updateBrowseHistory","events","settings","modal","currencies","cssClass","data","connect","state","isLoading","loadingMessageReducer","loadingMessage","props","_props$isLoading","react_default","a","createElement","className","react_loading_default","color","height","width","delay","Home","lazy","Promise","all","e","then","bind","My","Page","AppMain","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this2","_isMounted","setState","bootstrap","unlisten","history","listen","location","action","_this3","makeRequest","request","Settings","query","message","MESSAGES","LOGGING","res","errorData","Currencies","Lottery","slots","last","winners","getActive","participants","Pages","show","slug","setPage","rootCssClassList","appStatus","react","join","fallback","react_loaders_default","react_router","exact","path","component","loading_LoadingMessage","Component","withRouter","auth","authReducer","appStatusReducer","initialState","isAuthenticated","user","DEFAULT_APP_STATUS","browseHistory","locations","autoTasks","DEFAULT_LOTTERY_STATE","meta","links","slot","players","result","DEFAULT_MY_STATE","playedGames","transactions","profile","withdrawRequests","DEFAULT_PAGE_STATE","pages","combineReducers","arguments","length","undefined","scope","isVerified","verified","localStorage","setItem","JSON","stringify","isEmpty","objectSpread","concat","toConsumableArray","newClassList","index","indexOf","splice","shift","lotteryReducer","myReducer","pageReducer","flashMessageReducer","id","shortid","generate","text","findIndex","slice","jwtToken","store","createStore","rootReducer","compose","applyMiddleware","thunk","window","devToolsExtension","f","rootElement","document","getElementById","getItem","decodedToken","jwt_decode","exp","Date","getTime","setAuthorizationToken","dispatch","setAuth","removeItem","err","userId","parse","setUser","ReactDOM","render","es","react_router_dom","io","require","Echo","broadcaster","host","getEnv","headers","Authorization","channel","participant","private","console","log","token","src_this","axios__WEBPACK_IMPORTED_MODULE_0__","_utils_helper_helperFunctions__WEBPACK_IMPORTED_MODULE_1__","API_BASE_URL","requests","url","userData","axios","method","crossDomain","Content-Type","Accept","Auth","login","loginAsGuest","logout","register","forgotPassword","resetPassword","verifyEmail","verificationCode","resendVerificationCode","Users","get","create","update","updateMultiple","deleteMultiple","Permissions","Me","updateProfile","play","getPlayedGames","getTransactions","getWithdrawRequests","createWithdrawRequest","cancelWithdrawRequest","Coinbase","createCharge","Seo","ContactFormEntry","axios__WEBPACK_IMPORTED_MODULE_0___default","n","defaults","common","_utils_axios_setAuthorizationToken__WEBPACK_IMPORTED_MODULE_0__","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_1__","_requestAction__WEBPACK_IMPORTED_MODULE_2__","_services_request__WEBPACK_IMPORTED_MODULE_3__","_flashMessageAction__WEBPACK_IMPORTED_MODULE_4__","_utils_helper_helperFunctions__WEBPACK_IMPORTED_MODULE_5__","_constants_messages__WEBPACK_IMPORTED_MODULE_6__","isSilent","addFlashMessage","getCodeMessage","LOGOUT_SUCCESS","deleteLoadingMessage","apiCallFunction","options","addLoadingMessage","resolve","reject","response","responseData","successCode","handleSuccessResponseData","error","errorCode","ERR_TOKEN_EXPIRED","ERR_TOKEN_INVALID","ERR_TOKEN_USER_NOT_FOUND","handleErrorResponseData","LOADING_USER_CHECK","UPDATING","SAVING","REFRESHING","REGISTERING","VERIFYING","SENDING_EMAIL","LOGIN_SUCCESS","SAVED","UPDATED","VERIFIED","FORGOT_EMAIL_SENT","PASSWORD_UPDATED","USER_REGISTERED","VERIFICATION_EMAIL_SENT","ERR_VALIDATION_FAILED","ERR_ABN_INVALID","ERR_ABN_REQUIRED","ERR_BUSINESS_NAME_REQUIRED","ERR_EMAIL_ALREADY_EXIST","ERR_EMAIL_INVALID","ERR_EMAIL_REQUIRED","ERR_FIRST_NAME_REQUIRED","ERR_LAST_NAME_REQUIRED","ERR_PASSWORD_CONFIRM_NOT_MATCHING","ERR_PASSWORD_INVALID","ERR_PASSWORD_REQUIRED","ERR_PHONE_NUMBER_REQUIRED","ERR_PHONE_NUMBER_INVALID","ERR_URL_INVALID","ERR_URL_REQUIRED","ERR_INVALID_CREDENTIALS","ERR_TOKEN_NOT_PROVIDED","ERR_INVALID_REQUEST","ERR_DATABASE","ERR_MODEL_NOT_FOUND","ERR_METHOD_NOT_ALLOWED","ERR_NOT_FOUND","ERR_RESTRICTED","ERR_MULTIPLE_BUSINESS","ERR_UNKNOWN","ERR_LOGOUT","ERR_LOCKED","generateRandomLotteryNumber","getFirstEmptyPosition","isNumberPickedCorrectly","findSetting","bitsToBtc","btcToBits","bitsToCoin","coinToBtc","getBySlug","getPlayerDisplayName","getWinningTypeIcon","getWinningTypeClass","getTitleFromSlug","_constants_messages__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_2__","key","process","lotteryNumber","randNumber","Math","floor","random","max","push","firstEmptyKey","_","item","bool","amount","withUnit","amountInCoin","coinData","currency","parseFloat","value_in_bits","toFixed","amountInBits","coinToBits","collection","player","nickname","username","full_name","winner","icon","lottery_winner_type_id","pivot","str","splitStr","toLowerCase","split","i","charAt","toUpperCase","substring","titleCase","replace"],"mappings":"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","file":"static/js/main.25660cdd.chunk.js","sourcesContent":["export const ADD_FLASH_MESSAGE = \"ADD_FLASH_MESSAGE\";\nexport const DELETE_FLASH_MESSAGE = \"DELETE_FLASH_MESSAGE\";\nexport const ADD_LOADING_MESSAGE = \"ADD_LOADING_MESSAGE\";\nexport const DELETE_LOADING_MESSAGE = \"DELETE_LOADING_MESSAGE\";\n\nexport const SET_AUTH = \"SET_AUTH\";\nexport const SET_EVENTS = \"SET_EVENTS\";\nexport const SET_APP_SETTINGS = \"SET_APP_SETTINGS\";\nexport const SET_LOTTERY_WINNERS = \"SET_LOTTERY_WINNERS\";\nexport const SET_LOTTERY_SLOT = \"SET_LOTTERY_SLOT\";\nexport const SET_LOTTERY_PLAYERS = \"SET_LOTTERY_PLAYERS\";\nexport const ADD_LOTTERY_PLAYER = \"ADD_LOTTERY_PLAYER\";\nexport const SET_LOTTERY_DATA = \"SET_LOTTERY_DATA\";\nexport const SET_MODAL = \"SET_MODAL\";\nexport const SET_SETTINGS = \"SET_SETTINGS\";\nexport const SET_CURRENCIES = \"SET_CURRENCIES\";\nexport const SET_USER = \"SET_USER\";\nexport const SET_LOTTERY_PICKED_NUMBERS = \"SET_LOTTERY_PICKED_NUMBERS\";\nexport const SET_LAST_SLOT = \"SET_LAST_SLOT\";\nexport const SET_PLAYED_GAMES = \"SET_PLAYED_GAMES\";\nexport const SET_TRANSACTIONS = \"SET_TRANSACTIONS\";\nexport const SET_WITHDRAW_REQUESTS = \"SET_WITHDRAW_REQUESTS\";\nexport const SET_PAGE = \"SET_PAGE\";\nexport const ADD_TO_ROOT_CSS_CLASS_LIST = \"ADD_TO_ROOT_CSS_CLASS_LIST\";\nexport const REMOVE_FROM_ROOT_CSS_CLASS_LIST = \"REMOVE_FROM_ROOT_CSS_CLASS_LIST\";\nexport const UPDATE_BROWSE_HISTORY = \"UPDATE_BROWSE_HISTORY\";\n\n","import {\n    ADD_LOTTERY_PLAYER, SET_LAST_SLOT, SET_LOTTERY_DATA, SET_LOTTERY_PICKED_NUMBERS,\n    SET_LOTTERY_PLAYERS, SET_LOTTERY_RESULT,\n    SET_LOTTERY_SLOT,\n    SET_LOTTERY_WINNERS,\n} from \"../constants/actionTypes\";\n\nexport function setLotteryWinners(payload) {\n    return {\n        type: SET_LOTTERY_WINNERS,\n        payload\n    }\n}\n\nexport function setLotterySlot(payload) {\n    return {\n        type: SET_LOTTERY_SLOT,\n        payload\n    }\n}\n\nexport function setLotteryPlayers(payload) {\n    return {\n        type: SET_LOTTERY_PLAYERS,\n        payload\n    }\n}\n\nexport function addLotterySlotPlayer(payload) {\n    return {\n        type: ADD_LOTTERY_PLAYER,\n        payload\n    }\n}\n\nexport function setLastSlot(lastSlot) {\n    return {\n        type: SET_LAST_SLOT,\n        lastSlot\n    }\n}\n\nexport function setLotteryPickedNumbers(pickedNumbers) {\n    return {\n        type: SET_LOTTERY_PICKED_NUMBERS,\n        pickedNumbers\n    }\n}\n\nexport function setLotteryData(payload) {\n    return {\n        type: SET_LOTTERY_DATA,\n        payload\n    }\n}","import {\n    ADD_TO_ROOT_CSS_CLASS_LIST,\n    REMOVE_FROM_ROOT_CSS_CLASS_LIST,\n    SET_APP_SETTINGS,\n    SET_CURRENCIES,\n    SET_EVENTS,\n    SET_MODAL,\n    SET_SETTINGS,\n    UPDATE_BROWSE_HISTORY,\n} from \"../constants/actionTypes\";\n\nexport function setEvents(events) {\n    return {\n        type: SET_EVENTS,\n        events\n    }\n}\n\nexport function setAppSettings(settings) {\n    return {\n        type: SET_APP_SETTINGS,\n        settings\n    }\n}\n\nexport function setModal(modal) {\n    return {\n        type: SET_MODAL,\n        modal\n    }\n}\n\nexport function setCurrencies(currencies) {\n    return {\n        type: SET_CURRENCIES,\n        currencies\n    }\n}\n\nexport function setSettings(settings) {\n    return {\n        type: SET_SETTINGS,\n        settings\n    }\n}\n\nexport function addToRootCssClassList(cssClass) {\n\n    return {\n        type: ADD_TO_ROOT_CSS_CLASS_LIST,\n        payload: cssClass\n    }\n}\n\nexport function removeFromRootCssClassList(cssClass) {\n\n    return {\n        type: REMOVE_FROM_ROOT_CSS_CLASS_LIST,\n        payload: cssClass\n    }\n}\n\nexport function updateBrowseHistory(data) {\n\n    return {\n        type: UPDATE_BROWSE_HISTORY,\n        payload: data\n    }\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ReactLoading from \"react-loading\";\n\nconst LoadingMessage = (props) => {\n    const {isLoading = false, loadingMessage = null} = props;\n    const content = loadingMessage ? loadingMessage : 'Loading...';\n    return (\n        isLoading &&\n        <div className=\"loading-spinner-wrapper\">\n            <ReactLoading type='spin' color=\"rgb(77, 97, 171, 0.7)\" height='40px' width='40px' delay={200}\n                          className=\"loading-spinner\"/>\n            {/*<div className=\"content\">{content}</div>*/}\n        </div>\n    );\n};\n\nLoadingMessage.propTypes = {\n    isLoading: PropTypes.bool,\n    loadingMessage: PropTypes.string,\n};\n\nfunction mapStateToProps(state) {\n    return {\n        isLoading: state.loadingMessageReducer.isLoading,\n        loadingMessage: state.loadingMessageReducer.loadingMessage,\n    }\n}\n\nexport default connect(mapStateToProps, {})(LoadingMessage);","import {Redirect, Route, withRouter} from 'react-router-dom';\nimport React, {Component, Fragment, lazy, Suspense} from 'react';\nimport Loader from 'react-loaders'\nimport {connect} from \"react-redux\";\nimport {makeRequest} from \"../../actions/requestAction\";\nimport request from \"../../services/request\";\nimport {MESSAGES} from \"../../constants/messages\";\nimport {setLastSlot, setLotteryPlayers, setLotterySlot, setLotteryWinners} from \"../../actions/lotteryActions\";\nimport {setCurrencies, setSettings, updateBrowseHistory} from \"../../actions/appStatusAction\";\nimport LoadingMessage from \"../../Components/AppCommon/loading/LoadingMessage\";\nimport {setPage} from \"../../actions/pageActions\";\n\n\nconst Home = lazy(() => import('../../Components/Home'));\nconst My = lazy(() => import('../../Components/My'));\nconst Page = lazy(() => import('../../Components/Page'));\n\nclass AppMain extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: false\n        }\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        this.setState({isLoading: true});\n        this._isMounted && this.bootstrap();\n\n        //Listen to browser history\n        this.unlisten = this.props.history.listen((location, action) => {\n            this.props.updateBrowseHistory({\n                location: location,\n            })\n        });\n    }\n\n    componentWillUnmount() {\n        this.unlisten();\n    }\n\n    bootstrap() {\n        // Get settings\n        this.props.makeRequest(request.Settings.all, {query: ''}, {message: MESSAGES.LOGGING}).then(\n            (res) => {\n                if (res.data) {\n                    this.props.setSettings(res.data);\n                }\n                this.setState({isLoading: false});\n            },\n            (errorData) => {\n                this.setState({isLoading: false});\n            }\n        );\n\n        // Get currencies\n        this.props.makeRequest(request.Currencies.all, {query: ''}, {message: MESSAGES.LOGGING}).then(\n            (res) => {\n                if (res.data) {\n                    this.props.setCurrencies(res.data);\n                }\n                this.setState({isLoading: false});\n            },\n            (errorData) => {\n                this.setState({isLoading: false});\n            }\n        );\n\n        // Get Last slot\n        this.props.makeRequest(request.Lottery.slots.last, {}, {message: MESSAGES.LOGGING}).then(\n            (res) => {\n                if (res.data) {\n                    this.props.setLastSlot(res.data);\n                }\n                this.setState({isLoading: false});\n            },\n            (errorData) => {\n                this.setState({isLoading: false});\n            }\n        );\n\n        // Get Winners\n        this.props.makeRequest(request.Lottery.slots.winners, {query: 'limit=7'}, {message: MESSAGES.LOGGING}).then(\n            (res) => {\n                if (res.data) {\n                    this.props.setLotteryWinners(res);\n                } else {\n                }\n            },\n            (errorData) => {\n                this.setState({isLoading: false});\n            }\n        );\n\n        // Get Active Slot\n        this.props.makeRequest(request.Lottery.slots.getActive, {}, {message: MESSAGES.LOGGING}).then(\n            (res) => {\n                if (res.data) {\n                    this.props.setLotterySlot(res.data);\n                    this.props.setLotteryPlayers(res.data.participants);\n                }\n            },\n            (errorData) => {\n                this.setState({isLoading: false});\n            }\n        );\n\n        // Get Home page info\n        this.props.makeRequest(request.Pages.show, {slug: \"home\" }, {message: MESSAGES.LOGGING}).then(\n            (res) => { if (res.data) { this.props.setPage(res); this.setState({isLoading: false}); } },\n            (errorData) => {}\n        );\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render () {\n        const {rootCssClassList} = this.props.appStatus;\n        return (\n            <Fragment>\n                <div className={rootCssClassList.join(' ')}>\n                <Suspense fallback={\n                    <div className=\"loader-container\">\n                        <div className=\"loader-container-inner\">\n                            <div className=\"text-center\">\n                                <Loader type=\"ball-grid-beat\"/>\n                            </div>\n                        </div>\n                    </div>\n                }>\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route exact path=\"/my/:slug?/:slug?\" component={My}/>\n                    <Route exact path=\"/:slug\" component={Page}/>\n                </Suspense>\n                    <LoadingMessage/>\n                    {/*<FlashMessageList/>*/}\n            </div>\n            </Fragment>\n        )\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        auth: state.authReducer,\n        appStatus: state.appStatusReducer\n    }\n}\n\n\nexport default withRouter(connect(mapStateToProps, {\n    makeRequest, setLastSlot, setCurrencies, setSettings, setLotteryWinners, setLotterySlot, setLotteryPlayers,\n    updateBrowseHistory, setPage\n})(AppMain));","import {SET_AUTH, SET_USER} from \"../constants/actionTypes\";\nimport {isEmpty} from \"lodash\";\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {}\n};\n\nexport default (state = initialState, action = {}) => {\n    switch (action.type) {\n        case SET_AUTH:\n            const user = action.payload && action.payload.user ? action.payload.user : {};\n            const scope = action.payload && action.payload.scope ? action.payload.scope : {};\n            const isVerified = user.verified ? user.verified : 0;\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            return {\n                isAuthenticated: !isEmpty(user),\n                isVerified: !!isVerified,\n                user: user,\n                scope: scope\n            };\n        case SET_USER:\n            localStorage.setItem(\"user\", JSON.stringify(action.user));\n            return {\n                ...state,\n                user: action.user,\n            };\n        default:\n            return state;\n    }\n}","export const DEFAULT_APP_STATUS = {\n    modal: null,\n    settings: [{}],\n    currencies: [{}],\n    rootCssClassList: ['trans'],\n    browseHistory: {\n        locations: [],\n        autoTasks: []\n    }\n};\n\nexport const DEFAULT_LOTTERY_STATE = {\n    winners: {\n        data: [],\n        meta: {},\n        links: {}\n    },\n    slot: {\n    },\n    lastSlot: {\n        winners: []\n    },\n    players: {\n        data: []\n    },\n    result: []\n};\n\nexport const DEFAULT_MY_STATE = {\n    playedGames: {},\n    transactions: {},\n    profile: {},\n    withdrawRequests: {}\n};\n\nexport const DEFAULT_PAGE_STATE = {\n    pages: []\n};","import {combineReducers} from \"redux\";\nimport flashMessageReducer from \"./reducers/flashMessageReducer\";\nimport authReducer from \"./reducers/authReducer\";\nimport appStatusReducer from \"./reducers/appStatusReducer\";\nimport loadingMessageReducer from \"./reducers/loadingMessageReducer\";\nimport lotteryReducer from \"./reducers/lotteryReducer\";\nimport myReducer from \"./reducers/myReducer\";\nimport pageReducer from \"./reducers/pageReducer\";\n\nexport default combineReducers({\n    authReducer,\n    appStatusReducer,\n    lotteryReducer,\n    myReducer,\n    pageReducer,\n    flashMessageReducer,\n    loadingMessageReducer,\n});","import {DEFAULT_APP_STATUS} from \"../data/default\";\nimport {\n    ADD_TO_ROOT_CSS_CLASS_LIST, REMOVE_FROM_ROOT_CSS_CLASS_LIST, SET_CURRENCIES, SET_MODAL, SET_SETTINGS,\n    UPDATE_BROWSE_HISTORY,\n} from \"../constants/actionTypes\";\nimport * as _ from \"lodash\";\n\nexport default (state = DEFAULT_APP_STATUS, action = {}) => {\n    switch (action.type) {\n        case `${SET_MODAL}` :\n            return {\n                ...state,\n                modal: action.modal\n            };\n        case `${SET_CURRENCIES}` :\n            localStorage.setItem(\"currencies\", JSON.stringify(action.currencies));\n            return {\n                ...state,\n                currencies: action.currencies\n            };\n        case `${SET_SETTINGS}` :\n            localStorage.setItem(\"settings\", JSON.stringify(action.settings));\n            return {\n                ...state,\n                settings: action.settings\n            };\n        case `${ADD_TO_ROOT_CSS_CLASS_LIST}` :\n            return {\n                ...state,\n                rootCssClassList: [\n                    ...state.rootCssClassList,\n                    action.payload\n                ]\n            };\n        case `${REMOVE_FROM_ROOT_CSS_CLASS_LIST}` :\n            let newClassList = [...state.rootCssClassList];\n            let index = newClassList.indexOf(action.payload);\n\n            if (index > -1) {\n                newClassList.splice(index, 1);\n            }\n\n            return {\n                ...state,\n                rootCssClassList: newClassList\n            };\n        case `${UPDATE_BROWSE_HISTORY}` :\n            // update locations\n            let locations = [...state.browseHistory.locations];\n\n            if (locations.length > 15) {\n                locations.shift();\n            }\n\n            if (action.payload && action.payload.location) {\n                locations = locations.concat([action.payload.location]);\n            }\n\n            // update autoTasks\n            let autoTasks = [...state.browseHistory.autoTasks];\n            if (action.payload && action.payload.autoTasks) {\n                autoTasks = action.payload.autoTasks;\n            }\n\n            // update state\n            return {\n                ...state,\n                browseHistory: {\n                    locations: locations,\n                    autoTasks: autoTasks\n                }\n            };\n        default:\n            return state;\n    }\n}","import {DEFAULT_LOTTERY_STATE} from \"../data/default\";\nimport {\n    ADD_LOTTERY_PLAYER, SET_LOTTERY_PLAYERS, SET_LOTTERY_SLOT, SET_LOTTERY_WINNERS,\n    SET_LOTTERY_DATA, SET_LAST_SLOT, SET_LOTTERY_PICKED_NUMBERS\n} from \"../constants/actionTypes\";\n\nexport default (state = DEFAULT_LOTTERY_STATE, action = {}) => {\n    switch (action.type) {\n        case `${SET_LOTTERY_WINNERS}` :\n            return {\n                ...state,\n                winners: action.payload\n            };\n        case `${SET_LOTTERY_SLOT}` :\n            return {\n                ...state,\n                slot: action.payload\n            };\n        case `${SET_LOTTERY_PLAYERS}` :\n            return {\n                ...state,\n                players: action.payload\n            };\n        case `${ADD_LOTTERY_PLAYER}` :\n            return {\n                ...state,\n                players: {\n                    ...state.players,\n                    data: [\n                        action.payload,\n                        ...state.players.data\n                    ]\n                }\n            };\n        case `${SET_LOTTERY_DATA}` :\n            let data = {};\n\n            if (action.payload.lastSlot) {\n                data.lastSlot = action.payload.lastSlot;\n            }\n\n            if (action.payload.winners) {\n                data.winners = {\n                    ...state.winners,\n                    data: action.payload.winners\n                };\n            }\n\n            return {\n                ...state,\n                ...data\n            };\n        case `${SET_LAST_SLOT}` :\n            return {\n                ...state,\n                lastSlot: action.lastSlot\n            };\n        case `${SET_LOTTERY_PICKED_NUMBERS}` :\n            return {\n                ...state,\n                pickedNumbers: action.pickedNumbers\n            };\n        default:\n            return state;\n    }\n}","import {DEFAULT_MY_STATE} from \"../data/default\";\nimport {SET_PLAYED_GAMES, SET_TRANSACTIONS, SET_WITHDRAW_REQUESTS} from \"../constants/actionTypes\";\n\nexport default (state = DEFAULT_MY_STATE, action = {}) => {\n    switch (action.type) {\n        case `${SET_PLAYED_GAMES}` :\n            return {\n                ...state,\n                playedGames: action.payload\n            };\n        case `${SET_TRANSACTIONS}` :\n            return {\n                ...state,\n                transactions: action.payload\n            };\n        case `${SET_WITHDRAW_REQUESTS}` :\n            return {\n                ...state,\n                withdrawRequests: action.payload\n            };\n        default:\n            return state;\n    }\n}","import {DEFAULT_PAGE_STATE} from \"../data/default\";\nimport {SET_PAGE} from \"../constants/actionTypes\";\n\nexport default (state = DEFAULT_PAGE_STATE, action = {}) => {\n    switch (action.type) {\n        case `${SET_PAGE}` :\n            return {\n                ...state,\n                pages: [\n                    ...state.pages,\n                    action.payload.data\n                ]\n            };\n        default:\n            return state;\n    }\n}","import {ADD_FLASH_MESSAGE, DELETE_FLASH_MESSAGE} from \"../constants/actionTypes\";\nimport shortid from \"shortid\";\nimport {findIndex} from \"lodash\";\n\nexport default (state = [], action = {}) => {\n    switch (action.type) {\n\n        case ADD_FLASH_MESSAGE:\n            return [\n                // commenting this will show only one flash message at a time\n                // ...state,\n                {\n                    id: shortid.generate(),\n                    type: action.message.type,\n                    text: action.message.text\n                }\n            ];\n\n        case DELETE_FLASH_MESSAGE:\n            const index = findIndex(state, {id: action.id});\n            if (index >= 0) {\n                return [\n                    ...state.slice(0, index),\n                    ...state.slice(index + 1)\n                ];\n            }\n            return state;\n\n        default:\n            return state;\n    }\n}","import {ADD_LOADING_MESSAGE, DELETE_LOADING_MESSAGE} from \"../constants/actionTypes\";\n\nexport default (state = [], action = {}) => {\n    switch (action.type) {\n\n        case ADD_LOADING_MESSAGE:\n            return {\n                isLoading: true,\n                loadingMessage: action.loadingMessage\n            };\n\n        case DELETE_LOADING_MESSAGE:\n            return {\n                isLoading: false,\n                loadingMessage: null\n            };\n\n        default:\n            return state;\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./assets/css/bootstrap.css\";\nimport \"./assets/css/style.css\";\nimport AppMain from \"./Layout/AppMain\";\nimport configureStore from \"./config/configureStore\";\nimport { Provider } from \"react-redux\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthorizationToken from \"./utils/axios/setAuthorizationToken\";\nimport { setAuth, setUser } from \"./actions/authActions\";\nimport Echo from \"laravel-echo\";\nimport {\n  setLotterySlot,\n  addLotterySlotPlayer,\n  setLotteryPlayers,\n  setLotteryData,\n} from \"./actions/lotteryActions\";\nimport { setCurrencies, setSettings } from \"./actions/appStatusAction\";\nimport { getEnv } from \"./utils/helper/helperFunctions\";\n\nlet jwtToken = \"\";\nexport const store = configureStore();\nconst rootElement = document.getElementById(\"root\");\n\n// check if jwtToken exist in local storage and is valid\nif (localStorage.getItem(\"jwtToken\")) {\n  try {\n    const decodedToken = jwt_decode(localStorage.getItem(\"jwtToken\"));\n    if (decodedToken.exp > new Date().getTime() / 1000) {\n      jwtToken = localStorage.getItem(\"jwtToken\");\n      setAuthorizationToken(jwtToken);\n      store.dispatch(setAuth(decodedToken));\n    } else {\n      localStorage.removeItem(\"jwtToken\");\n      setAuthorizationToken(false);\n      store.dispatch(setAuth({}));\n    }\n  } catch (err) {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthorizationToken(false);\n    store.dispatch(setAuth({}));\n  }\n}\n\n// set user\nlet userId = null;\nif (localStorage.getItem(\"user\")) {\n  try {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    userId = user.id;\n    store.dispatch(setUser(user));\n  } catch (err) {}\n}\n\n// set currencies\nif (localStorage.getItem(\"currencies\")) {\n  try {\n    const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\n    store.dispatch(setCurrencies(currencies));\n  } catch (err) {}\n}\n\n// set settings\nif (localStorage.getItem(\"settings\")) {\n  try {\n    const settings = JSON.parse(localStorage.getItem(\"settings\"));\n    store.dispatch(setSettings(settings));\n  } catch (err) {}\n}\n\nconst renderApp = (Component) => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <Component />\n      </Router>\n    </Provider>,\n    rootElement\n  );\n};\n\nrenderApp(AppMain);\n\nwindow.io = require(\"socket.io-client\");\nwindow.Echo = new Echo({\n  broadcaster: \"socket.io\",\n  host: getEnv(\"APP_SOCKET_URL\"),\n  // host: window.location.hostname + ':6001',\n  auth: {\n    headers: {\n      Authorization: \"Bearer \" + jwtToken,\n    },\n  },\n});\n\nwindow.Echo.channel(\"lottery\")\n  .listen(\"LotterySlotCreatedEvent\", (e) => {\n    store.dispatch(setLotterySlot(e.data));\n    store.dispatch(setLotteryPlayers({ data: [] }));\n  })\n  .listen(\"LotterySlotClosedEvent\", (e) => {\n    store.dispatch(setLotteryData(e));\n  })\n  .listen(\"ParticipantAddedEvent\", (e) => {\n    let slot = e.data;\n    let participant = e.participant;\n    store.dispatch(setLotterySlot(slot));\n    store.dispatch(addLotterySlotPlayer(participant));\n  });\n\nwindow.Echo.private(\"App.User.\" + userId).listen(\"UserUpdateEvent\", (e) => {\n  console.log(\"UserUpdateEvent\", e.token);\n  if (e.token) {\n    localStorage.setItem(\"jwtToken\", e.token);\n    setAuthorizationToken(e.token);\n    this.props.setAuth(jwt_decode(e.token));\n  }\n});\n","import {applyMiddleware, compose, createStore} from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../rootReducer\";\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer,\n      compose(\n          applyMiddleware(thunk),\n          window.devToolsExtension ? window.devToolsExtension() : f => f\n      ),\n  );\n}","import * as axios from \"axios\";\nimport {getEnv} from \"../utils/helper/helperFunctions\";\n\nconst API_BASE_URL = getEnv('API_BASE_URL');\n/**\n * This handles all the api request. If REACT_APP_ENV = mock-api, then the data\n * is faked and returned as async promise object using mock data.\n *\n * To know what type of data is expected by the application, look at the mock data.\n *\n * @param type\n * @param url\n * @param userData\n */\nconst requests = (type, url, userData = {}) => {\n    if (getEnv('ENV') === 'mock-api') {\n        // return mockApi(type, url, userData = {});\n    } else {\n        return axios({\n            method: type,\n            url: url,\n            data: userData,\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n        });\n    }\n};\n\n/**\n * Handles all Auth related requests\n */\nconst Auth = {\n    login: (data) =>\n        requests('POST', API_BASE_URL + \"/player-login\", data),\n    loginAsGuest: (data) =>\n        requests('POST', API_BASE_URL + \"/register-as-guest\", data),\n    logout: () =>\n        requests('PUT', API_BASE_URL + \"/logout\"),\n    register: (data) =>\n        requests('POST', API_BASE_URL + \"/register\", data),\n    forgotPassword: (data) =>\n        requests('POST', API_BASE_URL + \"/forgot-password\", data),\n    resetPassword: (data) =>\n        requests('PUT', API_BASE_URL + \"/reset-password\", data),\n    verifyEmail: (data) =>\n        requests('PUT', API_BASE_URL + \"/verify-email/\" + data.verificationCode),\n    resendVerificationCode: (data) =>\n        requests('GET', API_BASE_URL + \"/resend-verification-code\"),\n};\n\n/**\n * Handles all Business related requests\n */\nconst Users = {\n    all: (query) =>\n        requests('GET', API_BASE_URL + \"/users?\" + query),\n    get: (id) =>\n        requests('GET',API_BASE_URL + `/users/${id}`),\n    create: (data) =>\n        requests('POST', API_BASE_URL + \"/users\", data),\n    update: (data) =>\n        requests('PUT', API_BASE_URL + \"/users/\" + data.id, data),\n    updateMultiple: (data) =>\n        requests('PUT', API_BASE_URL + \"/users\", data),\n    deleteMultiple: (data) =>\n        requests('DELETE', API_BASE_URL + \"/users\", data),\n};\n\n/**\n * Handles all Permissions related requests\n */\nconst Permissions = {\n    all: (query) =>\n        requests('GET', API_BASE_URL + \"/permissions?\" + query),\n    get: (id) =>\n        requests('GET',API_BASE_URL + `/permissions/${id}`),\n    create: (data) =>\n        requests('POST', API_BASE_URL + \"/permissions\", data),\n    update: (data) =>\n        requests('PUT', API_BASE_URL + \"/permissions/\" + data.id, data),\n    deleteMultiple: (data) =>\n        requests('DELETE', API_BASE_URL + \"/permissions\", data),\n};\n\n/**\n * Handles all Business related requests\n */\nconst Roles = {\n    all: (query) =>\n        requests('GET', API_BASE_URL + \"/roles?\" + query),\n    get: (id) =>\n        requests('GET',API_BASE_URL + `/roles/${id}`),\n    create: (data) =>\n        requests('POST', API_BASE_URL + \"/roles\", data),\n    update: (data) =>\n        requests('PUT', API_BASE_URL + \"/roles/\" + data.id, data),\n    deleteMultiple: (data) =>\n        requests('DELETE', API_BASE_URL + \"/roles\", data),\n};\n\n/**\n * Handles all Settings related requests\n */\nconst Settings = {\n    all: (data) =>\n        requests('GET', API_BASE_URL + \"/settings?\" + data.query),\n};\n\n/**\n * Handles all Currencies related requests\n */\nconst Currencies = {\n    all: (data) =>\n        requests('GET', API_BASE_URL + \"/currencies?\" + data.query),\n};\n\n/**\n * Handles all Currencies related requests\n */\nconst Me = {\n    get: (data) =>\n        requests('GET', API_BASE_URL + \"/me\"),\n    updateProfile: (data) =>\n        requests('PUT', API_BASE_URL + \"/me/profile/update\", data),\n    play: (data) =>\n        requests('POST', API_BASE_URL + \"/me/play\", data),\n    getPlayedGames: (data) =>\n        requests('GET', API_BASE_URL + \"/me/played-games\"),\n    getTransactions: (data) =>\n        requests('GET', API_BASE_URL + \"/me/transactions\"),\n    getWithdrawRequests: (data) =>\n        requests('GET', API_BASE_URL + \"/me/withdraw-requests\"),\n    createWithdrawRequest: (data) =>\n        requests('POST', API_BASE_URL + \"/me/create-withdraw-request\", data),\n    cancelWithdrawRequest: (data) =>\n        requests('PUT', API_BASE_URL + \"/me/cancel-withdraw-request/\" + data.id),\n};\n\n/**\n * Handles all Coinbase related requests\n */\nconst Coinbase = {\n    createCharge: (data) =>\n        requests('POST', API_BASE_URL + \"/coinbase/create-charge\", data),\n};\n\n/**\n * Handles all Lottery related requests\n */\nconst Lottery = {\n    slots: {\n        all: (query) =>\n            requests('GET', API_BASE_URL + \"/lottery/slots?\" + query),\n        get: (data) =>\n            requests('GET',API_BASE_URL + `/lottery/slots/${data.id}?` + data.query),\n        create: (data) =>\n            requests('POST', API_BASE_URL + \"/lottery/slots\", data),\n        update: (data) =>\n            requests('PUT', API_BASE_URL + \"/lottery/slots/\" + data.id, data),\n        winners: (data) =>\n            requests('GET',API_BASE_URL + `/lottery/slots/winners?` + data.query),\n        getActive: (data) =>\n            requests('GET', API_BASE_URL + `/lottery/slots/3?with=participants&is_active=true`),\n        last: (data) =>\n            requests('GET',API_BASE_URL + `/lottery/slots/last`),\n    }\n};\n\n/**\n * Handles all pages related requests\n */\nconst Pages = {\n    get: (data) =>\n        requests('GET', API_BASE_URL + \"/pages\"),\n    show: (data) =>\n        requests('GET', API_BASE_URL + '/pages/' + data.slug)\n};\n\n/**\n * Handles all SEO related requests\n */\nconst Seo = {\n    get: (id) =>\n        requests('GET', API_BASE_URL + \"/seo/\" + id),\n};\n\n\n/**\n * Handles all Contact form related requests\n */\nconst ContactFormEntry = {\n    create: (data) =>\n        requests('POST', API_BASE_URL + \"/contact\", data),\n};\n\nexport default {\n    Auth,\n    Users,\n    Permissions,\n    Me,\n    Coinbase,\n    Settings,\n    Currencies,\n    Lottery,\n    Pages,\n    ContactFormEntry,\n    Seo\n};\n","import axios from \"axios\";\n\nexport default function setAuthorizationToken(token) {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n}","import setAuthorizationToken from \"../utils/axios/setAuthorizationToken\";\nimport {SET_AUTH, SET_USER} from \"../constants/actionTypes\";\nimport {makeRequest} from \"./requestAction\";\nimport request from \"../services/request\";\nimport {addFlashMessage} from \"./flashMessageAction\";\nimport {getCodeMessage} from \"../utils/helper/helperFunctions\";\nimport {MESSAGES} from \"../constants/messages\";\n\nexport function setAuth(payload) {\n    return {\n        type: SET_AUTH,\n        payload\n    }\n}\n\nexport function setUser(user) {\n    return {\n        type: SET_USER,\n        user\n    }\n}\n\n\nexport function logout() {\n    return dispatch => {\n        dispatch(makeRequest(request.Auth.logout, {}, { isSilent: true }));\n\n        localStorage.removeItem(\"jwtToken\");\n        setAuthorizationToken(false);\n        dispatch(setAuth({}));\n        dispatch(addFlashMessage({type: \"success\", text: getCodeMessage(MESSAGES.LOGOUT_SUCCESS)}));\n    }\n}","import {ADD_FLASH_MESSAGE, DELETE_FLASH_MESSAGE} from \"../constants/actionTypes\";\n\nexport function addFlashMessage(message) {\n    return {\n        type: ADD_FLASH_MESSAGE,\n        message\n    }\n}\n\nexport function deleteFlashMessage(id) {\n    return {\n        type: DELETE_FLASH_MESSAGE,\n        id\n    }\n}","import {ADD_LOADING_MESSAGE, DELETE_LOADING_MESSAGE} from \"../constants/actionTypes\";\n\nexport function addLoadingMessage(loadingMessage = null) {\n    return {\n        type: ADD_LOADING_MESSAGE,\n        loadingMessage\n    }\n}\n\nexport function deleteLoadingMessage() {\n    return {\n        type: DELETE_LOADING_MESSAGE\n    }\n}","import setAuthorizationToken from \"../utils/axios/setAuthorizationToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n    setEvents, setAppSettings\n} from \"./appStatusAction\";\nimport {addFlashMessage} from \"./flashMessageAction\";\nimport {logout, setAuth} from \"./authActions\";\nimport {getCodeMessage} from \"../utils/helper/helperFunctions\";\nimport {MESSAGES} from \"../constants/messages\";\nimport {addLoadingMessage, deleteLoadingMessage} from \"./loadingMessageAction\";\n\n\nexport function makeRequest(apiCallFunction, data = {}, options={isSilent: false, message: 'Loading...'}) {\n    return dispatch => {\n        if (! options.isSilent) dispatch(addLoadingMessage(options.message));\n        return new Promise((resolve, reject) => {\n\n            apiCallFunction(data).then(\n                (response) => {\n                    if (! options.isSilent) dispatch(deleteLoadingMessage());\n                    if (response && response.data) {\n                        handleSuccessResponseData(dispatch, response.data, options.isSilent);\n                        resolve(response.data);\n                    }\n                    if (response) {\n                        resolve(response.data);\n                    }\n                },\n                (error) => {\n                    if (! options.isSilent) dispatch(deleteLoadingMessage());\n                    if (error && error.response && error.response.data) {\n                        handleErrorResponseData(dispatch, error.response.data, options.isSilent);\n                        reject(error.response.data)\n                    }\n                }\n            );\n\n        });\n    }\n}\n\nexport function handleSuccessResponseData(dispatch, responseData, isSilent) {\n    const token = responseData.token;\n    if (token) {\n        localStorage.setItem(\"jwtToken\", token);\n        setAuthorizationToken(token);\n        dispatch(setAuth(jwt_decode(token)));\n    }\n\n    if (responseData.events) dispatch(setEvents(responseData.events));\n\n    if (responseData.settings) dispatch(setAppSettings(responseData.settings));\n\n    if (responseData.successCode && responseData.successCode !== 'FETCHED' && responseData.successCode !== 'TRACKED' && !isSilent) {\n        dispatch(addFlashMessage({type: \"success\", text: getCodeMessage(responseData.successCode)}))\n    }\n}\n\nexport function handleErrorResponseData(dispatch, errorData, isSilent) {\n    if (errorData.errorCode) {\n        if (\n            getCodeMessage(errorData.errorCode) === MESSAGES.ERR_TOKEN_EXPIRED ||\n            getCodeMessage(errorData.errorCode) === MESSAGES.ERR_TOKEN_INVALID ||\n            getCodeMessage(errorData.errorCode) === MESSAGES.ERR_TOKEN_USER_NOT_FOUND\n        ) {\n            dispatch(logout());\n        }\n\n        if (!isSilent) {\n            dispatch(addFlashMessage({type: \"error\", text: getCodeMessage(errorData.errorCode)}));\n        }\n    }\n}\n","//Form Validation Error Codes\nexport const MESSAGES = {\n    // Loading Message\n    LOADING_USER_CHECK: \"Checking if user already exist...\",\n    UPDATING: \"Updating...\",\n    SAVING: \"Saving...\",\n    REFRESHING: \"Refreshing...\",\n    REGISTERING: \"Creating your account...\",\n    LOGGING: \"Logging...\",\n    VERIFYING: \"Verifying...\",\n    SENDING_EMAIL: \"Sending email...\",\n\n    // Success Message\n    LOGIN_SUCCESS: \"Logged in successfully\",\n    LOGOUT_SUCCESS: \"Logged out successfully\",\n    SAVED: \"Saved\",\n    UPDATED: \"Updated\",\n    VERIFIED: \"User verified successfully\",\n    FORGOT_EMAIL_SENT: \"Forgot password email sent\",\n    PASSWORD_UPDATED: \"Password updated successfully\",\n    USER_REGISTERED: \"Registered successfully\",\n    VERIFICATION_EMAIL_SENT: \"Verification email sent\",\n\n    // Error Messages\n    ERR_VALIDATION_FAILED: \"Validation Failed\",\n    ERR_ABN_INVALID: \"ABN is invalid\",\n    ERR_ABN_REQUIRED: \"ABN is required\",\n    ERR_BUSINESS_NAME_REQUIRED: \"Business name is required\",\n    ERR_EMAIL_ALREADY_EXIST: \"User with given email is already registered\",\n    ERR_EMAIL_INVALID: \"Invalid Email\",\n    ERR_EMAIL_REQUIRED: \"Email is required\",\n    ERR_FIRST_NAME_REQUIRED: \"First Name is required\",\n    ERR_LAST_NAME_REQUIRED: \"Last Name is required\",\n    ERR_PASSWORD_CONFIRM_NOT_MATCHING: \"Password and Confirm Password must match\",\n    ERR_PASSWORD_INVALID: \"Password is invalid\",\n    ERR_PASSWORD_REQUIRED: \"Password is required\",\n    ERR_PHONE_NUMBER_REQUIRED: \"Phone Number is required\",\n    ERR_PHONE_NUMBER_INVALID: \"Phone Number is invalid\",\n    ERR_URL_INVALID: \"Url is invalid\",\n    ERR_URL_REQUIRED: \"Url is required\",\n\n    //Login Error Codes\n    ERR_INVALID_CREDENTIALS: \"Invalid Credentials\",\n    ERR_TOKEN_EXPIRED: \"User has been logged out due to inactivity\",\n    ERR_TOKEN_INVALID: \"Token invalid\",\n    ERR_TOKEN_NOT_PROVIDED: \"Token not provided\",\n    ERR_TOKEN_USER_NOT_FOUND: \"User not found\",\n\n    //Page Error Codes\n    ERR_INVALID_REQUEST: \"Invalid Request\",\n    ERR_DATABASE: \"Database error\",\n    ERR_MODEL_NOT_FOUND: \"Couldn't find the user\",\n    ERR_METHOD_NOT_ALLOWED: \"Request method not allowed\",\n    ERR_NOT_FOUND: \"Couldn't find the page\",\n    ERR_RESTRICTED: \"You don't have enough permission to view this page\",\n    ERR_MULTIPLE_BUSINESS: \"You can't have multiple business\",\n\n    //Unknown Error Codes\n    ERR_UNKNOWN: \"Something went wrong\",\n    ERR_LOGOUT: \"Failed to logout\",\n    ERR_LOCKED: \"Locked\",\n};","import {SET_PAGE} from \"../constants/actionTypes\";\n\nexport function setPage(payload) {\n    return {\n        type: SET_PAGE,\n        payload\n    }\n}","import {MESSAGES} from \"../../constants/messages\";\nimport Cookies from 'universal-cookie';\nimport * as _ from \"lodash\";\nimport {isEmpty} from \"lodash\";\n\n/*\n==========================================================================\nApp Helper Functions\n==========================================================================\n */\n/**\n * This is a wrapper function to get the env variable without using the\n * prefix REACT_APP_\n *\n * @param key\n * @return {string}\n */\nexport function getEnv(key) {\n    return process.env['REACT_APP_' + key];\n}\n\n/**\n * Transform 'slug_string' or 'camelCaseString' or 'any type of string' to 'Capitalized Words'\n *\n * @param string\n * @returns {string}\n */\nexport function toCapitalizedWords(string) {\n    const newString = string.replace(/([A-Z])/g, ' $1')\n        .replace(/([_])/g, ' ');\n\n    return firstOfEachWordToUppercase(newString);\n}\n\n/**\n * Capitalize first letter of each words in a string\n *\n * @param str\n * @returns {string}\n */\nexport function firstOfEachWordToUppercase(str) {\n    let array = str.split(' ');\n    let newArray = [];\n\n    for (let x = 0; x < array.length; x++) {\n        newArray.push(array[x].charAt(0).toUpperCase() + array[x].slice(1));\n    }\n\n    return newArray.join(' ');\n}\n\n/**\n * Format Date to user friendly string\n *\n * @param dateString\n * @returns {string}\n */\nexport function formatDate(dateString) {\n    let options = {day: 'numeric', month: 'long', year: 'numeric'};\n    let date = new Date(dateString.replace(' ', 'T'));\n\n    // return dateString;\n    return date.toLocaleString(\"en-US\", options);\n}\n\n/*\n==========================================================================\nData Handling Helper Functions\n==========================================================================\n */\n/**\n * Use error code to get error message\n *\n * @param errorCode\n * @return {string}\n */\nexport function getCodeMessage(errorCode) {\n    return MESSAGES[errorCode] ? MESSAGES[errorCode] : MESSAGES.ERR_UNKNOWN;\n}\n\n/*\n==========================================================================\nExtra Helper Functions\n==========================================================================\n */\n\nexport function getCookie(name, options = {}) {\n    const cookies = new Cookies();\n    return cookies.get(name, options);\n}\n\nexport function setCookie(name, value, options = {}) {\n    const cookies = new Cookies();\n    cookies.set(name, value, options);\n}\n\nexport function generateRandomLotteryNumber() {\n    let lotteryNumber = [];\n    let max = 45;\n\n    while (lotteryNumber.length < 6) {\n        let randNumber = Math.floor(Math.random() * 100) + 1;\n\n        if (randNumber < (max + 1) && lotteryNumber.indexOf(randNumber) === -1) {\n            lotteryNumber.push(randNumber);\n        }\n    }\n\n    return lotteryNumber;\n}\n\nexport function getLotteryNumbersOnly(pickedNumbers) {\n    let arr = [];\n\n    _.forEach(pickedNumbers, function (item, key) {\n        if (typeof item === \"number\") {\n            arr.push(item);\n        }\n    });\n\n    return arr;\n}\n\nexport function inPickedNumbers(pickedNumbers, number) {\n    let numberKey = \"\";\n\n    _.forEach(pickedNumbers, function (item, key) {\n        if (item === number) {\n            return key;\n        }\n    });\n\n    return numberKey;\n}\n\nexport function getFirstEmptyPosition(pickedNumbers) {\n    let firstEmptyKey;\n\n    _.forEach(pickedNumbers, function (item, key) {\n        if (typeof item === 'undefined') {\n            if (typeof firstEmptyKey === 'undefined') {\n                firstEmptyKey = key;\n            }\n        }\n    });\n\n    return firstEmptyKey;\n}\n\nexport function isNumberPickedCorrectly(pickedNumbers) {\n    let bool = true;\n    _.forEach(pickedNumbers, function (item, key) {\n        if (bool) {\n            if (typeof item !== 'number') {\n                bool = false;\n            }\n        }\n    });\n\n    return bool;\n}\n\nexport function findSetting(settings, key) {\n    return _.find(settings, {key: key}) ? _.find(settings, {key: key}) : {};\n}\n\nexport function checkIfWinner(lastWinners, id) {\n    return _.find(lastWinners, {id: id});\n}\n\nexport function isItemLoaded(item) {\n    if (typeof item === 'undefined' || item === null) {\n        return false;\n    }\n\n    return !!(Object.keys(item).length > 0);\n}\n\nexport function inAppCoin(coins, withUnit = true) {\n    let amountInCurrency = parseFloat(coins) + \" coins\";\n\n    // If coin not set or undefined or empty. Skip for 0\n    if (! coins && coins !== 0) {\n        return \"\";\n    }\n\n    return amountInCurrency;\n\n}\n\nexport function bitsToBtc(amount, withUnit = true) {\n    let amountInCoin = 0;\n\n    // If amount not set or undefined or empty. Skip for 0\n    if (! amount && amount !== 0) {\n        return \"\";\n    }\n\n\n    if (! amount) {\n        return \"\";\n    }\n\n    try {\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\n        const coinData = _.find(currencies, {currency: \"BTC\"});\n\n        amountInCoin = parseFloat((amount / coinData.value_in_bits).toFixed(6));\n\n        if (withUnit) {\n            let suffix = \" BTC\";\n            amountInCoin += suffix;\n        }\n    } catch (err) {\n        // console.log('amount conversion error', err);\n    }\n\n    return amountInCoin;\n}\n\nexport function btcToBits(amount, withUnit = true) {\n    let amountInBits = 0;\n\n    // If amount not set or undefined or empty. Skip for 0\n    if (! amount && amount !== 0) {\n        return \"\";\n    }\n\n\n    if (! amount) {\n        return \"\";\n    }\n\n    try {\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\n        const coinData = _.find(currencies, {currency: \"BTC\"});\n\n        amountInBits = parseFloat((amount * coinData.value_in_bits).toFixed(6));\n\n        if (withUnit) {\n            let suffix = \" Bits\";\n            amountInBits += suffix;\n        }\n    } catch (err) {\n        // console.log('amount conversion error', err);\n    }\n\n    return amountInBits;\n}\n\nexport function bitsToCoin(amount, withUnit = true) {\n    let amountInCoin = 0;\n\n    // If amount not set or undefined or empty. Skip for 0\n    if (! amount && amount !== 0) {\n        return \"\";\n    }\n\n\n    if (! amount) {\n        return \"\";\n    }\n\n    try {\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\n        const coinData = _.find(currencies, {currency: \"Coin\"});\n\n        amountInCoin = parseFloat((amount / coinData.value_in_bits).toFixed(0));\n\n        if (withUnit) {\n            let suffix = amountInCoin > 1 ? \" coins\" : \" coin\";\n            amountInCoin += suffix;\n        }\n    } catch (err) {\n        // console.log('amount conversion error', err);\n    }\n\n    return amountInCoin;\n}\n\nexport function coinToBits(amount, withUnit = true) {\n    let amountInBits = 0;\n\n    // If amount not set or undefined or empty. Skip for 0\n    if (! amount && amount !== 0) {\n        return \"\";\n    }\n\n\n    if (! amount) {\n        return \"\";\n    }\n\n    try {\n        const currencies = JSON.parse(localStorage.getItem(\"currencies\"));\n        const coinData = _.find(currencies, {currency: \"Coin\"});\n\n        amountInBits = parseFloat((amount * coinData.value_in_bits));\n\n        if (withUnit) {\n            amountInBits += amountInBits > 1 ? \" coins\" : \" coin\";\n        }\n    } catch (err) {\n        // console.log('amount conversion error', err);\n    }\n\n    return amountInBits;\n}\n\nexport function coinToBtc(amount, withUnit = true) {\n    return bitsToBtc(coinToBits(amount, false));\n}\n\n\n// stripslashes\nexport function stripslashes(str) {\n    return str.replace(/\\\\'/g,'\\'').replace(/\\\"/g,'\"').replace(/\\\\\\\\/g,'\\\\').replace(/\\\\0/g,'\\0');\n}\n\n// get by slug\nexport function getBySlug(collection, slug) {\n    let item = _.find(collection, {slug: slug});\n    return item ? item : {};\n}\n\nexport function toggleItemInArray(itemsArray, item) {\n    let arr = itemsArray && itemsArray.length > 0 ? itemsArray : [];\n\n    let index = arr.indexOf(item);\n    if (index > -1) {\n        arr.splice(index, 1);\n    } else {\n        arr.push(item);\n    }\n\n    return arr;\n}\n\nexport function getPlayerDisplayName(player) {\n    if (! isEmpty(player.nickname)) {\n        return player.nickname;\n    }\n\n    if (! isEmpty(player.username)) {\n        return player.username;\n    }\n\n    if (! isEmpty(player.full_name)) {\n        return player.full_name;\n    }\n\n    return \"\";\n}\n\nexport function getWinningTypeIcon(winner) {\n    let icon = '';\n\n    if (\n        (winner && winner.lottery_winner_type_id === 1) ||\n        (winner && winner.pivot && winner.pivot.lottery_winner_type_id === 1)\n    ) {\n        icon = 'J';\n    }\n\n    if (\n        (winner && winner.lottery_winner_type_id === 2) ||\n        (winner && winner.pivot && winner.pivot.lottery_winner_type_id === 2)\n    ) {\n        icon = 'S';\n    }\n\n    if (\n        (winner && winner.lottery_winner_type_id === 3) ||\n        (winner && winner.pivot && winner.pivot.lottery_winner_type_id === 3)\n    ) {\n        icon = 'B';\n    }\n\n    return icon;\n}\n\nexport function getWinningTypeClass(winner) {\n    let icon = '';\n\n    if (\n        (winner && winner.lottery_winner_type_id === 1) ||\n        (winner && winner.pivot && winner.pivot.lottery_winner_type_id === 1)\n    ) {\n        icon = 'jackpot';\n    }\n\n    if (\n        (winner && winner.lottery_winner_type_id === 2) ||\n        (winner && winner.pivot && winner.pivot.lottery_winner_type_id === 2)\n    ) {\n        icon = 'five-digit';\n    }\n\n    if (\n        (winner && winner.lottery_winner_type_id === 3) ||\n        (winner && winner.pivot && winner.pivot.lottery_winner_type_id === 3)\n    ) {\n        icon = 'four-digit';\n    }\n\n    return icon;\n}\n\nexport function getTitleFromSlug(slug)\n{\n    // Remove \"my\" for dashboard routes\n    slug = slug.replace(\"/my/\", '');\n\n    let title = slug\n        .toLowerCase()\n        .replace(/-/g,' ')\n        .replace(/[^\\w-]+/g,'')\n        ;\n\n    return titleCase(title);\n}\n\nfunction titleCase(str) {\n    let splitStr = str.toLowerCase().split(' ');\n    for (let i = 0; i < splitStr.length; i++) {\n        // You do not need to check if i is larger than splitStr length, as your for does that for you\n        // Assign it back to the array\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    // Directly return the joined string\n    return splitStr.join(' ');\n}\n"],"sourceRoot":""}